{"version":3,"file":"newOutline.bdbef8d7.js","sources":["../../../../node_modules/.pnpm/lossless-json@2.0.8/node_modules/lossless-json/lib/esm/utils.js","../../../../node_modules/.pnpm/lossless-json@2.0.8/node_modules/lossless-json/lib/esm/LosslessNumber.js","../../../../node_modules/.pnpm/lossless-json@2.0.8/node_modules/lossless-json/lib/esm/numberParsers.js","../../../../node_modules/.pnpm/lossless-json@2.0.8/node_modules/lossless-json/lib/esm/revive.js","../../../../node_modules/.pnpm/lossless-json@2.0.8/node_modules/lossless-json/lib/esm/parse.js","../../../../node_modules/.pnpm/lossless-json@2.0.8/node_modules/lossless-json/lib/esm/stringify.js","../../../hoppscotch-common/src/helpers/newOutline.ts"],"sourcesContent":["/**\n * Test whether a string contains an integer number\n */\nexport function isInteger(value) {\n  return INTEGER_REGEX.test(value);\n}\nvar INTEGER_REGEX = /^-?[0-9]+$/;\n\n/**\n * Test whether a string contains a number\n * http://stackoverflow.com/questions/13340717/json-numbers-regular-expression\n */\nexport function isNumber(value) {\n  return NUMBER_REGEX.test(value);\n}\nvar NUMBER_REGEX = /^-?(?:0|[1-9]\\d*)(?:\\.\\d+)?(?:[eE][+-]?\\d+)?$/;\n\n/**\n * Test whether a string can be safely represented with a number\n * without information.\n *\n * When approx is true, floating point numbers that lose a few digits but\n * are still approximately equal in value are considered safe too.\n * Integer numbers must still be exactly equal.\n */\nexport function isSafeNumber(value, config) {\n  var num = parseFloat(value);\n  var str = String(num);\n  var v = extractSignificantDigits(value);\n  var s = extractSignificantDigits(str);\n  if (v === s) {\n    return true;\n  }\n  if ((config === null || config === void 0 ? void 0 : config.approx) === true) {\n    // A value is approximately equal when:\n    // 1. it is a floating point number, not an integer\n    // 2. it has at least 14 digits\n    // 3. the first 14 digits are equal\n    var requiredDigits = 14;\n    if (!isInteger(value) && s.length >= requiredDigits && v.startsWith(s.substring(0, requiredDigits))) {\n      return true;\n    }\n  }\n  return false;\n}\nexport var UnsafeNumberReason;\n\n/**\n * When the provided value is an unsafe number, describe what the reason is:\n * overflow, underflow, truncate_integer, or truncate_float.\n * Returns undefined when the value is safe.\n */\n(function (UnsafeNumberReason) {\n  UnsafeNumberReason[\"underflow\"] = \"underflow\";\n  UnsafeNumberReason[\"overflow\"] = \"overflow\";\n  UnsafeNumberReason[\"truncate_integer\"] = \"truncate_integer\";\n  UnsafeNumberReason[\"truncate_float\"] = \"truncate_float\";\n})(UnsafeNumberReason || (UnsafeNumberReason = {}));\nexport function getUnsafeNumberReason(value) {\n  if (isSafeNumber(value, {\n    approx: false\n  })) {\n    return undefined;\n  }\n  if (isInteger(value)) {\n    return UnsafeNumberReason.truncate_integer;\n  }\n  var num = parseFloat(value);\n  if (!isFinite(num)) {\n    return UnsafeNumberReason.overflow;\n  }\n  if (num === 0) {\n    return UnsafeNumberReason.underflow;\n  }\n  return UnsafeNumberReason.truncate_float;\n}\n\n/**\n * Convert a string into a number when it is safe to do so.\n * Throws an error otherwise, explaining the reason.\n */\nexport function toSafeNumberOrThrow(value, config) {\n  var number = parseFloat(value);\n  var unsafeReason = getUnsafeNumberReason(value);\n  if ((config === null || config === void 0 ? void 0 : config.approx) === true ? unsafeReason && unsafeReason !== UnsafeNumberReason.truncate_float : unsafeReason) {\n    var unsafeReasonText = unsafeReason.replace(/_\\w+$/, '');\n    throw new Error('Cannot safely convert to number: ' + \"the value '\".concat(value, \"' would \").concat(unsafeReasonText, \" and become \").concat(number));\n  }\n  return number;\n}\n\n/**\n * Get the significant digits of a number.\n *\n * For example:\n *   '2.34' returns '234'\n *   '-77' returns '77'\n *   '0.003400' returns '34'\n *   '120.5e+30' returns '1205'\n **/\nexport function extractSignificantDigits(value) {\n  return value\n  // from \"-0.250e+30\" to \"-0.250\"\n  .replace(EXPONENTIAL_PART_REGEX, '')\n\n  // from \"-0.250\" to \"-0250\"\n  .replace(DOT_REGEX, '')\n\n  // from \"-0250\" to \"-025\"\n  .replace(TRAILING_ZEROS_REGEX, '')\n\n  // from \"-025\" to \"25\"\n  .replace(LEADING_MINUS_AND_ZEROS_REGEX, '');\n}\nvar EXPONENTIAL_PART_REGEX = /[eE][+-]?\\d+$/;\nvar LEADING_MINUS_AND_ZEROS_REGEX = /^-?(0*)?/;\nvar DOT_REGEX = /\\./;\nvar TRAILING_ZEROS_REGEX = /0+$/;\n//# sourceMappingURL=utils.js.map","function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nimport { extractSignificantDigits, getUnsafeNumberReason, isInteger, isNumber, UnsafeNumberReason } from './utils.js';\n\n/**\n * A lossless number. Stores its numeric value as string\n */\nexport var LosslessNumber = /*#__PURE__*/function () {\n  // numeric value as string\n\n  // type information\n\n  function LosslessNumber(value) {\n    _classCallCheck(this, LosslessNumber);\n    _defineProperty(this, \"isLosslessNumber\", true);\n    if (!isNumber(value)) {\n      throw new Error('Invalid number (value: \"' + value + '\")');\n    }\n    this.value = value;\n  }\n\n  /**\n   * Get the value of the LosslessNumber as number or bigint.\n   *\n   * - a number is returned for safe numbers and decimal values that only lose some insignificant digits\n   * - a bigint is returned for big integer numbers\n   * - an Error is thrown for values that will overflow or underflow\n   *\n   * Note that you can implement your own strategy for conversion by just getting the value as string\n   * via .toString(), and using util functions like isInteger, isSafeNumber, getUnsafeNumberReason,\n   * and toSafeNumberOrThrow to convert it to a numeric value.\n   */\n  _createClass(LosslessNumber, [{\n    key: \"valueOf\",\n    value: function valueOf() {\n      var unsafeReason = getUnsafeNumberReason(this.value);\n\n      // safe or truncate_float\n      if (unsafeReason === undefined || unsafeReason === UnsafeNumberReason.truncate_float) {\n        return parseFloat(this.value);\n      }\n\n      // truncate_integer\n      if (isInteger(this.value)) {\n        return BigInt(this.value);\n      }\n\n      // overflow or underflow\n      throw new Error('Cannot safely convert to number: ' + \"the value '\".concat(this.value, \"' would \").concat(unsafeReason, \" and become \").concat(parseFloat(this.value)));\n    }\n\n    /**\n     * Get the value of the LosslessNumber as string.\n     */\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return this.value;\n    }\n\n    // Note: we do NOT implement a .toJSON() method, and you should not implement\n    // or use that, it cannot safely turn the numeric value in the string into\n    // stringified JSON since it has to be parsed into a number first.\n  }]);\n  return LosslessNumber;\n}();\n\n/**\n * Test whether a value is a LosslessNumber\n */\nexport function isLosslessNumber(value) {\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  return value && _typeof(value) === 'object' && value.isLosslessNumber === true || false;\n}\n\n/**\n * Convert a number into a LosslessNumber if this is possible in a safe way\n * If the value has too many digits, or is NaN or Infinity, an error will be thrown\n */\nexport function toLosslessNumber(value) {\n  if (extractSignificantDigits(value + '').length > 15) {\n    throw new Error('Invalid number: contains more than 15 digits and is most likely truncated and unsafe by itself ' + \"(value: \".concat(value, \")\"));\n  }\n  if (isNaN(value)) {\n    throw new Error('Invalid number: NaN');\n  }\n  if (!isFinite(value)) {\n    throw new Error('Invalid number: ' + value);\n  }\n  return new LosslessNumber(String(value));\n}\n//# sourceMappingURL=LosslessNumber.js.map","import { LosslessNumber } from './LosslessNumber.js';\nimport { isInteger } from './utils.js';\nexport function parseLosslessNumber(value) {\n  return new LosslessNumber(value);\n}\nexport function parseNumberAndBigInt(value) {\n  return isInteger(value) ? BigInt(value) : parseFloat(value);\n}\n//# sourceMappingURL=numberParsers.js.map","function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nimport { isLosslessNumber } from './LosslessNumber.js';\n/**\n * Revive a json object.\n * Applies the reviver function recursively on all values in the JSON object.\n * @param json   A JSON Object, Array, or value\n * @param reviver\n *              A reviver function invoked with arguments `key` and `value`,\n *              which must return a replacement value. The function context\n *              (`this`) is the Object or Array that contains the currently\n *              handled value.\n */\nexport function revive(json, reviver) {\n  return reviveValue({\n    '': json\n  }, '', json, reviver);\n}\n\n/**\n * Revive a value\n */\nfunction reviveValue(context, key, value, reviver) {\n  if (Array.isArray(value)) {\n    return reviver.call(context, key, reviveArray(value, reviver));\n  } else if (value && _typeof(value) === 'object' && !isLosslessNumber(value)) {\n    // note the special case for LosslessNumber,\n    // we don't want to iterate over the internals of a LosslessNumber\n    return reviver.call(context, key, reviveObject(value, reviver));\n  } else {\n    return reviver.call(context, key, value);\n  }\n}\n\n/**\n * Revive the properties of an object\n */\nfunction reviveObject(object, reviver) {\n  Object.keys(object).forEach(function (key) {\n    var value = reviveValue(object, key, object[key], reviver);\n    if (value !== undefined) {\n      object[key] = value;\n    } else {\n      delete object[key];\n    }\n  });\n  return object;\n}\n\n/**\n * Revive the properties of an Array\n */\nfunction reviveArray(array, reviver) {\n  for (var i = 0; i < array.length; i++) {\n    array[i] = reviveValue(array, i + '', array[i], reviver);\n  }\n  return array;\n}\n//# sourceMappingURL=revive.js.map","function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\nimport { parseLosslessNumber } from './numberParsers.js';\nimport { revive } from './revive.js';\n/**\n * The LosslessJSON.parse() method parses a string as JSON, optionally transforming\n * the value produced by parsing.\n *\n * The parser is based on the parser of Tan Li Hou shared in\n * https://lihautan.com/json-parser-with-javascript/\n *\n * @param text\n * The string to parse as JSON. See the JSON object for a description of JSON syntax.\n *\n * @param [reviver]\n * If a function, prescribes how the value originally produced by parsing is\n * transformed, before being returned.\n *\n * @param [parseNumber=parseLosslessNumber]\n * Pass a custom number parser. Input is a string, and the output can be unknown\n * numeric value: number, bigint, LosslessNumber, or a custom BigNumber library.\n *\n * @returns Returns the Object corresponding to the given JSON text.\n *\n * @throws Throws a SyntaxError exception if the string to parse is not valid JSON.\n */\nexport function parse(text, reviver) {\n  var parseNumber = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : parseLosslessNumber;\n  var i = 0;\n  var value = parseValue();\n  expectValue(value);\n  expectEndOfInput();\n  return reviver ? revive(value, reviver) : value;\n  function parseObject() {\n    if (text.charCodeAt(i) === codeOpeningBrace) {\n      i++;\n      skipWhitespace();\n      var object = {};\n      var initial = true;\n      while (i < text.length && text.charCodeAt(i) !== codeClosingBrace) {\n        if (!initial) {\n          eatComma();\n          skipWhitespace();\n        } else {\n          initial = false;\n        }\n        var start = i;\n        var key = parseString();\n        if (key === undefined) {\n          throwObjectKeyExpected();\n        }\n        skipWhitespace();\n        eatColon();\n        var _value = parseValue();\n\n        // TODO: test deep equal instead of strict equal\n        if (Object.prototype.hasOwnProperty.call(object, key) && !isDeepEqual(_value, object[key])) {\n          // Note that we could also test `if(key in object) {...}`\n          // or `if (object[key] !== 'undefined') {...}`, but that is slower.\n          throwDuplicateKey(key, start + 1);\n        }\n        object[key] = _value;\n      }\n      if (text.charCodeAt(i) !== codeClosingBrace) {\n        throwObjectKeyOrEndExpected();\n      }\n      i++;\n      return object;\n    }\n  }\n  function parseArray() {\n    if (text.charCodeAt(i) === codeOpeningBracket) {\n      i++;\n      skipWhitespace();\n      var array = [];\n      var initial = true;\n      while (i < text.length && text.charCodeAt(i) !== codeClosingBracket) {\n        if (!initial) {\n          eatComma();\n        } else {\n          initial = false;\n        }\n        var _value2 = parseValue();\n        expectArrayItem(_value2);\n        array.push(_value2);\n      }\n      if (text.charCodeAt(i) !== codeClosingBracket) {\n        throwArrayItemOrEndExpected();\n      }\n      i++;\n      return array;\n    }\n  }\n  function parseValue() {\n    var _ref, _ref2, _ref3, _ref4, _ref5, _parseString;\n    skipWhitespace();\n    var value = (_ref = (_ref2 = (_ref3 = (_ref4 = (_ref5 = (_parseString = parseString()) !== null && _parseString !== void 0 ? _parseString : parseNumeric()) !== null && _ref5 !== void 0 ? _ref5 : parseObject()) !== null && _ref4 !== void 0 ? _ref4 : parseArray()) !== null && _ref3 !== void 0 ? _ref3 : parseKeyword('true', true)) !== null && _ref2 !== void 0 ? _ref2 : parseKeyword('false', false)) !== null && _ref !== void 0 ? _ref : parseKeyword('null', null);\n    skipWhitespace();\n    return value;\n  }\n  function parseKeyword(name, value) {\n    if (text.slice(i, i + name.length) === name) {\n      i += name.length;\n      return value;\n    }\n  }\n  function skipWhitespace() {\n    while (isWhitespace(text.charCodeAt(i))) {\n      i++;\n    }\n  }\n  function parseString() {\n    if (text.charCodeAt(i) === codeDoubleQuote) {\n      i++;\n      var result = '';\n      while (i < text.length && text.charCodeAt(i) !== codeDoubleQuote) {\n        if (text.charCodeAt(i) === codeBackslash) {\n          var char = text[i + 1];\n          var escapeChar = escapeCharacters[char];\n          if (escapeChar !== undefined) {\n            result += escapeChar;\n            i++;\n          } else if (char === 'u') {\n            if (isHex(text.charCodeAt(i + 2)) && isHex(text.charCodeAt(i + 3)) && isHex(text.charCodeAt(i + 4)) && isHex(text.charCodeAt(i + 5))) {\n              result += String.fromCharCode(parseInt(text.slice(i + 2, i + 6), 16));\n              i += 5;\n            } else {\n              throwInvalidUnicodeCharacter(i);\n            }\n          } else {\n            throwInvalidEscapeCharacter(i);\n          }\n        } else {\n          if (isValidStringCharacter(text.charCodeAt(i))) {\n            result += text[i];\n          } else {\n            throwInvalidCharacter(text[i]);\n          }\n        }\n        i++;\n      }\n      expectEndOfString();\n      i++;\n      return result;\n    }\n  }\n  function parseNumeric() {\n    var start = i;\n    if (text.charCodeAt(i) === codeMinus) {\n      i++;\n      expectDigit(start);\n    }\n    if (text.charCodeAt(i) === codeZero) {\n      i++;\n    } else if (isNonZeroDigit(text.charCodeAt(i))) {\n      i++;\n      while (isDigit(text.charCodeAt(i))) {\n        i++;\n      }\n    }\n    if (text.charCodeAt(i) === codeDot) {\n      i++;\n      expectDigit(start);\n      while (isDigit(text.charCodeAt(i))) {\n        i++;\n      }\n    }\n    if (text.charCodeAt(i) === codeLowercaseE || text.charCodeAt(i) === codeUppercaseE) {\n      i++;\n      if (text.charCodeAt(i) === codeMinus || text.charCodeAt(i) === codePlus) {\n        i++;\n      }\n      expectDigit(start);\n      while (isDigit(text.charCodeAt(i))) {\n        i++;\n      }\n    }\n    if (i > start) {\n      return parseNumber(text.slice(start, i));\n    }\n  }\n  function eatComma() {\n    if (text.charCodeAt(i) !== codeComma) {\n      throw new SyntaxError(\"Comma ',' expected after value \".concat(gotAt()));\n    }\n    i++;\n  }\n  function eatColon() {\n    if (text.charCodeAt(i) !== codeColon) {\n      throw new SyntaxError(\"Colon ':' expected after property name \".concat(gotAt()));\n    }\n    i++;\n  }\n  function expectValue(value) {\n    if (value === undefined) {\n      throw new SyntaxError(\"JSON value expected \".concat(gotAt()));\n    }\n  }\n  function expectArrayItem(value) {\n    if (value === undefined) {\n      throw new SyntaxError(\"Array item expected \".concat(gotAt()));\n    }\n  }\n  function expectEndOfInput() {\n    if (i < text.length) {\n      throw new SyntaxError(\"Expected end of input \".concat(gotAt()));\n    }\n  }\n  function expectDigit(start) {\n    if (!isDigit(text.charCodeAt(i))) {\n      var numSoFar = text.slice(start, i);\n      throw new SyntaxError(\"Invalid number '\".concat(numSoFar, \"', expecting a digit \").concat(gotAt()));\n    }\n  }\n  function expectEndOfString() {\n    if (text.charCodeAt(i) !== codeDoubleQuote) {\n      throw new SyntaxError(\"End of string '\\\"' expected \".concat(gotAt()));\n    }\n  }\n  function throwObjectKeyExpected() {\n    throw new SyntaxError(\"Quoted object key expected \".concat(gotAt()));\n  }\n  function throwDuplicateKey(key, pos) {\n    throw new SyntaxError(\"Duplicate key '\".concat(key, \"' encountered at position \").concat(pos));\n  }\n  function throwObjectKeyOrEndExpected() {\n    throw new SyntaxError(\"Quoted object key or end of object '}' expected \".concat(gotAt()));\n  }\n  function throwArrayItemOrEndExpected() {\n    throw new SyntaxError(\"Array item or end of array ']' expected \".concat(gotAt()));\n  }\n  function throwInvalidCharacter(char) {\n    throw new SyntaxError(\"Invalid character '\".concat(char, \"' \").concat(pos()));\n  }\n  function throwInvalidEscapeCharacter(start) {\n    var chars = text.slice(start, start + 2);\n    throw new SyntaxError(\"Invalid escape character '\".concat(chars, \"' \").concat(pos()));\n  }\n  function throwInvalidUnicodeCharacter(start) {\n    var end = start + 2;\n    while (/\\w/.test(text[end])) {\n      end++;\n    }\n    var chars = text.slice(start, end);\n    throw new SyntaxError(\"Invalid unicode character '\".concat(chars, \"' \").concat(pos()));\n  }\n\n  // zero based character position\n  function pos() {\n    return \"at position \".concat(i);\n  }\n  function got() {\n    return i < text.length ? \"but got '\".concat(text[i], \"'\") : 'but reached end of input';\n  }\n  function gotAt() {\n    return got() + ' ' + pos();\n  }\n}\nfunction isWhitespace(code) {\n  return code === codeSpace || code === codeNewline || code === codeTab || code === codeReturn;\n}\nfunction isHex(code) {\n  return code >= codeZero && code <= codeNine || code >= codeUppercaseA && code <= codeUppercaseF || code >= codeLowercaseA && code <= codeLowercaseF;\n}\nfunction isDigit(code) {\n  return code >= codeZero && code <= codeNine;\n}\nfunction isNonZeroDigit(code) {\n  return code >= codeOne && code <= codeNine;\n}\nexport function isValidStringCharacter(code) {\n  return code >= 0x20 && code <= 0x10ffff;\n}\nexport function isDeepEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n  if (Array.isArray(a) && Array.isArray(b)) {\n    return a.length === b.length && a.every(function (item, index) {\n      return isDeepEqual(item, b[index]);\n    });\n  }\n  if (isObject(a) && isObject(b)) {\n    var keys = _toConsumableArray(new Set([].concat(_toConsumableArray(Object.keys(a)), _toConsumableArray(Object.keys(b)))));\n    return keys.every(function (key) {\n      return isDeepEqual(a[key], b[key]);\n    });\n  }\n  return false;\n}\nfunction isObject(value) {\n  return _typeof(value) === 'object' && value !== null;\n}\n\n// map with all escape characters\nvar escapeCharacters = {\n  '\"': '\"',\n  '\\\\': '\\\\',\n  '/': '/',\n  b: '\\b',\n  f: '\\f',\n  n: '\\n',\n  r: '\\r',\n  t: '\\t'\n  // note that \\u is handled separately in parseString()\n};\n\nvar codeBackslash = 0x5c; // \"\\\"\nvar codeOpeningBrace = 0x7b; // \"{\"\nvar codeClosingBrace = 0x7d; // \"}\"\nvar codeOpeningBracket = 0x5b; // \"[\"\nvar codeClosingBracket = 0x5d; // \"]\"\nvar codeSpace = 0x20; // \" \"\nvar codeNewline = 0xa; // \"\\n\"\nvar codeTab = 0x9; // \"\\t\"\nvar codeReturn = 0xd; // \"\\r\"\nvar codeDoubleQuote = 0x0022; // \"\nvar codePlus = 0x2b; // \"+\"\nvar codeMinus = 0x2d; // \"-\"\nvar codeZero = 0x30;\nvar codeOne = 0x31;\nvar codeNine = 0x39;\nvar codeComma = 0x2c; // \",\"\nvar codeDot = 0x2e; // \".\" (dot, period)\nvar codeColon = 0x3a; // \":\"\nexport var codeUppercaseA = 0x41; // \"A\"\nexport var codeLowercaseA = 0x61; // \"a\"\nexport var codeUppercaseE = 0x45; // \"E\"\nexport var codeLowercaseE = 0x65; // \"e\"\nexport var codeUppercaseF = 0x46; // \"F\"\nexport var codeLowercaseF = 0x66; // \"f\"\n//# sourceMappingURL=parse.js.map","function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nimport { isNumber } from './utils.js';\n\n/**\n * The LosslessJSON.stringify() method converts a JavaScript value to a JSON string,\n * optionally replacing values if a replacer function is specified, or\n * optionally including only the specified properties if a replacer array is specified.\n *\n * @param value\n * The value to convert to a JSON string.\n *\n * @param [replacer]\n * A function that alters the behavior of the stringification process,\n * or an array of String and Number objects that serve as a whitelist for\n * selecting the properties of the value object to be included in the JSON string.\n * If this value is null or not provided, all properties of the object are\n * included in the resulting JSON string.\n *\n * @param [space]\n * A String or Number object that's used to insert white space into the output\n * JSON string for readability purposes. If this is a Number, it indicates the\n * number of space characters to use as white space; this number is capped at 10\n * if it's larger than that. Values less than 1 indicate that no space should be\n * used. If this is a String, the string (or the first 10 characters of the string,\n * if it's longer than that) is used as white space. If this parameter is not\n * provided (or is null), no white space is used.\n *\n * @param [numberStringifiers]\n * An optional list with additional number stringifiers, for example to serialize\n * a BigNumber. The output of the function must be valid stringified JSON.\n * When `undefined` is returned, the property will be deleted from the object.\n * The difference with using a `replacer` is that the output of a `replacer`\n * must be JSON and will be stringified afterwards, whereas the output of the\n * `numberStringifiers` is already stringified JSON.\n *\n * @returns Returns the string representation of the JSON object.\n */\nexport function stringify(value, replacer, space, numberStringifiers) {\n  var resolvedSpace = resolveSpace(space);\n  var replacedValue = typeof replacer === 'function' ? replacer.call({\n    '': value\n  }, '', value) : value;\n  return stringifyValue(replacedValue, '');\n\n  /**\n   * Stringify a value\n   */\n  function stringifyValue(value, indent) {\n    if (Array.isArray(numberStringifiers)) {\n      var stringifier = numberStringifiers.find(function (item) {\n        return item.test(value);\n      });\n      if (stringifier) {\n        var str = stringifier.stringify(value);\n        if (typeof str !== 'string' || !isNumber(str)) {\n          throw new Error('Invalid JSON number: ' + 'output of a number stringifier must be a string containing a JSON number ' + \"(output: \".concat(str, \")\"));\n        }\n        return str;\n      }\n    }\n\n    // boolean, null, number, string, or date\n    if (typeof value === 'boolean' || typeof value === 'number' || typeof value === 'string' || value === null || value instanceof Date || value instanceof Boolean || value instanceof Number || value instanceof String) {\n      return JSON.stringify(value);\n    }\n\n    // lossless number, the secret ingredient :)\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    if (value && value.isLosslessNumber) {\n      return value.toString();\n    }\n\n    // BigInt\n    if (typeof value === 'bigint') {\n      return value.toString();\n    }\n\n    // Array\n    if (Array.isArray(value)) {\n      return stringifyArray(value, indent);\n    }\n\n    // Object (test lastly!)\n    if (value && _typeof(value) === 'object') {\n      return stringifyObject(value, indent);\n    }\n    return undefined;\n  }\n\n  /**\n   * Stringify an array\n   */\n  function stringifyArray(array, indent) {\n    if (array.length === 0) {\n      return '[]';\n    }\n    var childIndent = resolvedSpace ? indent + resolvedSpace : undefined;\n    var str = resolvedSpace ? '[\\n' : '[';\n    for (var i = 0; i < array.length; i++) {\n      var item = typeof replacer === 'function' ? replacer.call(array, String(i), array[i]) : array[i];\n      if (resolvedSpace) {\n        str += childIndent;\n      }\n      if (typeof item !== 'undefined' && typeof item !== 'function') {\n        str += stringifyValue(item, childIndent);\n      } else {\n        str += 'null';\n      }\n      if (i < array.length - 1) {\n        str += resolvedSpace ? ',\\n' : ',';\n      }\n    }\n    str += resolvedSpace ? '\\n' + indent + ']' : ']';\n    return str;\n  }\n\n  /**\n   * Stringify an object\n   */\n  function stringifyObject(object, indent) {\n    if (typeof object.toJSON === 'function') {\n      return stringify(object.toJSON(), replacer, space, undefined);\n    }\n    var keys = Array.isArray(replacer) ? replacer.map(String) : Object.keys(object);\n    if (keys.length === 0) {\n      return '{}';\n    }\n    var childIndent = resolvedSpace ? indent + resolvedSpace : undefined;\n    var first = true;\n    var str = resolvedSpace ? '{\\n' : '{';\n    keys.forEach(function (key) {\n      var value = typeof replacer === 'function' ? replacer.call(object, key, object[key]) : object[key];\n      if (includeProperty(key, value)) {\n        if (first) {\n          first = false;\n        } else {\n          str += resolvedSpace ? ',\\n' : ',';\n        }\n        var keyStr = JSON.stringify(key);\n        str += resolvedSpace ? childIndent + keyStr + ': ' : keyStr + ':';\n        str += stringifyValue(value, childIndent);\n      }\n    });\n    str += resolvedSpace ? '\\n' + indent + '}' : '}';\n    return str;\n  }\n\n  /**\n   * Test whether to include a property in a stringified object or not.\n   */\n  function includeProperty(key, value) {\n    return typeof value !== 'undefined' && typeof value !== 'function' && _typeof(value) !== 'symbol';\n  }\n}\n\n/**\n * Resolve a JSON stringify space:\n * replace a number with a string containing that number of spaces\n */\nfunction resolveSpace(space) {\n  if (typeof space === 'number') {\n    return ' '.repeat(space);\n  }\n  if (typeof space === 'string' && space !== '') {\n    return space;\n  }\n  return undefined;\n}\n//# sourceMappingURL=stringify.js.map","import {\n  JSONArrayValue,\n  JSONObjectMember,\n  JSONObjectValue,\n  JSONValue,\n} from \"./jsonParse\"\n\ntype RootEntry =\n  | {\n      kind: \"RootObject\"\n      astValue: JSONObjectValue\n    }\n  | {\n      kind: \"RootArray\"\n      astValue: JSONArrayValue\n    }\n\ntype ObjectMemberEntry = {\n  kind: \"ObjectMember\"\n  name: string\n  astValue: JSONObjectMember\n  astParent: JSONObjectValue\n}\n\ntype ArrayMemberEntry = {\n  kind: \"ArrayMember\"\n  index: number\n  astValue: JSONValue\n  astParent: JSONArrayValue\n}\n\ntype PathEntry = RootEntry | ObjectMemberEntry | ArrayMemberEntry\n\nexport function getJSONOutlineAtPos(\n  jsonRootAst: JSONObjectValue | JSONArrayValue,\n  posIndex: number\n): PathEntry[] | null {\n  try {\n    const rootObj = jsonRootAst\n\n    if (posIndex > rootObj.end || posIndex < rootObj.start)\n      throw new Error(\"Invalid position\")\n\n    let current: JSONValue = rootObj\n\n    const path: PathEntry[] = []\n\n    if (rootObj.kind === \"Object\") {\n      path.push({\n        kind: \"RootObject\",\n        astValue: rootObj,\n      })\n    } else {\n      path.push({\n        kind: \"RootArray\",\n        astValue: rootObj,\n      })\n    }\n\n    while (current.kind === \"Object\" || current.kind === \"Array\") {\n      if (current.kind === \"Object\") {\n        const next: JSONObjectMember | undefined = current.members.find(\n          (member) => member.start <= posIndex && member.end >= posIndex\n        )\n\n        if (!next) throw new Error(\"Couldn't find child\")\n\n        path.push({\n          kind: \"ObjectMember\",\n          name: next.key.value,\n          astValue: next,\n          astParent: current,\n        })\n\n        current = next.value\n      } else {\n        const nextIndex = current.values.findIndex(\n          (value) => value.start <= posIndex && value.end >= posIndex\n        )\n\n        if (nextIndex < 0) throw new Error(\"Couldn't find child\")\n\n        const next: JSONValue = current.values[nextIndex]\n\n        path.push({\n          kind: \"ArrayMember\",\n          index: nextIndex,\n          astValue: next,\n          astParent: current,\n        })\n\n        current = next\n      }\n    }\n\n    return path\n  } catch (e: any) {\n    return null\n  }\n}\n"],"names":["isInteger","value","INTEGER_REGEX","isNumber","NUMBER_REGEX","isSafeNumber","config","num","str","v","extractSignificantDigits","s","requiredDigits","UnsafeNumberReason","getUnsafeNumberReason","EXPONENTIAL_PART_REGEX","DOT_REGEX","TRAILING_ZEROS_REGEX","LEADING_MINUS_AND_ZEROS_REGEX","_typeof","obj","_classCallCheck","instance","Constructor","_defineProperties","target","props","i","descriptor","_toPropertyKey","_createClass","protoProps","staticProps","_defineProperty","key","arg","_toPrimitive","input","hint","prim","res","LosslessNumber","unsafeReason","isLosslessNumber","parseLosslessNumber","revive","json","reviver","reviveValue","context","reviveArray","reviveObject","object","array","_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_unsupportedIterableToArray","_nonIterableSpread","o","minLen","_arrayLikeToArray","n","iter","len","arr2","parse","text","parseNumber","parseValue","expectValue","expectEndOfInput","parseObject","codeOpeningBrace","skipWhitespace","initial","codeClosingBrace","eatComma","start","parseString","throwObjectKeyExpected","eatColon","_value","isDeepEqual","throwDuplicateKey","throwObjectKeyOrEndExpected","parseArray","codeOpeningBracket","codeClosingBracket","_value2","expectArrayItem","throwArrayItemOrEndExpected","_ref","_ref2","_ref3","_ref4","_ref5","_parseString","parseNumeric","parseKeyword","name","isWhitespace","codeDoubleQuote","result","codeBackslash","char","escapeChar","escapeCharacters","isHex","throwInvalidUnicodeCharacter","throwInvalidEscapeCharacter","isValidStringCharacter","throwInvalidCharacter","expectEndOfString","codeMinus","expectDigit","codeZero","isNonZeroDigit","isDigit","codeDot","codeLowercaseE","codeUppercaseE","codePlus","codeComma","gotAt","codeColon","numSoFar","pos","chars","end","got","code","codeSpace","codeNewline","codeTab","codeReturn","codeNine","codeUppercaseA","codeUppercaseF","codeLowercaseA","codeLowercaseF","codeOne","a","b","item","index","isObject","keys","stringify","replacer","space","numberStringifiers","resolvedSpace","resolveSpace","replacedValue","stringifyValue","indent","stringifier","stringifyArray","stringifyObject","childIndent","first","includeProperty","keyStr","getJSONOutlineAtPos","jsonRootAst","posIndex","rootObj","current","path","next","member","nextIndex"],"mappings":"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"}