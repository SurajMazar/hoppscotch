{"version":3,"file":"save.06de7724.js","sources":["../../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_baseFindIndex.js","../../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_baseIsNaN.js","../../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_strictIndexOf.js","../../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_baseIndexOf.js","../../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_baseGet.js","../../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/get.js","../../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_baseSlice.js","../../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_baseIsMatch.js","../../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_isStrictComparable.js","../../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_getMatchData.js","../../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_matchesStrictComparable.js","../../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_baseMatches.js","../../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_baseHasIn.js","../../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/hasIn.js","../../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_baseMatchesProperty.js","../../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_baseProperty.js","../../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_basePropertyDeep.js","../../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/property.js","../../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_baseIteratee.js","../../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_arrayAggregator.js","../../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_createBaseFor.js","../../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_baseFor.js","../../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_baseForOwn.js","../../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_createBaseEach.js","../../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_baseEach.js","../../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_baseAggregator.js","../../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_createAggregator.js","../../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/last.js","../../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/escapeRegExp.js","../../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_baseFilter.js","../../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/filter.js","../../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/groupBy.js","../../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_parent.js","../../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_baseUnset.js","../../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_baseIndexOfWith.js","../../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_basePullAll.js","../../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/pullAll.js","../../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/pull.js","../../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_basePullAt.js","../../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/remove.js","../../../hoppscotch-common/src/components/collections/ImportExport.vue","../../../hoppscotch-common/src/components/collections/EditRequest.vue","../../../hoppscotch-common/src/components/collections/EditFolder.vue","../../../hoppscotch-common/src/components/collections/Edit.vue","../../../hoppscotch-common/src/components/collections/AddFolder.vue","../../../hoppscotch-common/src/components/collections/AddRequest.vue","../../../hoppscotch-common/src/components/collections/Add.vue","../../../hoppscotch-common/src/components/smart/TreeBranch.vue","../../../hoppscotch-common/src/components/smart/Tree.vue","../../../hoppscotch-common/src/newstore/reordering.ts","../../../hoppscotch-common/src/helpers/rest/labelColoring.ts","../../../hoppscotch-common/src/components/collections/Request.vue","../../../hoppscotch-common/src/components/collections/Collection.vue","../../../hoppscotch-common/src/components/collections/TeamCollections.vue","../../../hoppscotch-common/src/components/collections/MyCollections.vue","../../../hoppscotch-common/src/components/workspace/Current.vue","../../../hoppscotch-common/src/helpers/teams/TeamCollectionAdapter.ts","../../../hoppscotch-common/src/helpers/backend/mutations/TeamCollection.ts","../../../hoppscotch-common/src/helpers/backend/mutations/TeamRequest.ts","../../../hoppscotch-common/src/helpers/gist.ts","../../../hoppscotch-common/src/helpers/collection/collection.ts","../../../hoppscotch-common/src/components/collections/index.vue","../../../hoppscotch-common/src/components/collections/graphql/ImportExport.vue","../../../hoppscotch-common/src/components/collections/graphql/EditRequest.vue","../../../hoppscotch-common/src/components/collections/graphql/EditFolder.vue","../../../hoppscotch-common/src/components/collections/graphql/AddFolder.vue","../../../hoppscotch-common/src/components/collections/graphql/AddRequest.vue","../../../hoppscotch-common/src/components/collections/graphql/Edit.vue","../../../hoppscotch-common/src/components/collections/graphql/Add.vue","../../../hoppscotch-common/src/components/collections/graphql/Request.vue","../../../hoppscotch-common/src/components/collections/graphql/Folder.vue","../../../hoppscotch-common/src/components/collections/graphql/Collection.vue","../../../hoppscotch-common/src/components/collections/graphql/index.vue","../../../hoppscotch-common/src/components/collections/SaveRequest.vue","../../../hoppscotch-common/src/helpers/findStatusGroup.ts","../../../hoppscotch-common/src/components/history/rest/Card.vue","../../../hoppscotch-common/src/components/history/graphql/Card.vue","../../../hoppscotch-common/src/components/history/index.vue","../../../hoppscotch-common/src/composables/ref.ts","../../../hoppscotch-common/src/helpers/oauth.js","../../../hoppscotch-common/src/components/http/OAuth2Authorization.vue","../../../hoppscotch-common/src/helpers/headers.ts","../../../hoppscotch-common/src/helpers/functional/object.ts"],"sourcesContent":["/**\n * The base implementation of `_.findIndex` and `_.findLastIndex` without\n * support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} predicate The function invoked per iteration.\n * @param {number} fromIndex The index to search from.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseFindIndex(array, predicate, fromIndex, fromRight) {\n  var length = array.length,\n      index = fromIndex + (fromRight ? 1 : -1);\n\n  while ((fromRight ? index-- : ++index < length)) {\n    if (predicate(array[index], index, array)) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nexport default baseFindIndex;\n","/**\n * The base implementation of `_.isNaN` without support for number objects.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n */\nfunction baseIsNaN(value) {\n  return value !== value;\n}\n\nexport default baseIsNaN;\n","/**\n * A specialized version of `_.indexOf` which performs strict equality\n * comparisons of values, i.e. `===`.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction strictIndexOf(array, value, fromIndex) {\n  var index = fromIndex - 1,\n      length = array.length;\n\n  while (++index < length) {\n    if (array[index] === value) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nexport default strictIndexOf;\n","import baseFindIndex from './_baseFindIndex.js';\nimport baseIsNaN from './_baseIsNaN.js';\nimport strictIndexOf from './_strictIndexOf.js';\n\n/**\n * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseIndexOf(array, value, fromIndex) {\n  return value === value\n    ? strictIndexOf(array, value, fromIndex)\n    : baseFindIndex(array, baseIsNaN, fromIndex);\n}\n\nexport default baseIndexOf;\n","import castPath from './_castPath.js';\nimport toKey from './_toKey.js';\n\n/**\n * The base implementation of `_.get` without support for default values.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @returns {*} Returns the resolved value.\n */\nfunction baseGet(object, path) {\n  path = castPath(path, object);\n\n  var index = 0,\n      length = path.length;\n\n  while (object != null && index < length) {\n    object = object[toKey(path[index++])];\n  }\n  return (index && index == length) ? object : undefined;\n}\n\nexport default baseGet;\n","import baseGet from './_baseGet.js';\n\n/**\n * Gets the value at `path` of `object`. If the resolved value is\n * `undefined`, the `defaultValue` is returned in its place.\n *\n * @static\n * @memberOf _\n * @since 3.7.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n * @returns {*} Returns the resolved value.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n *\n * _.get(object, 'a[0].b.c');\n * // => 3\n *\n * _.get(object, ['a', '0', 'b', 'c']);\n * // => 3\n *\n * _.get(object, 'a.b.c', 'default');\n * // => 'default'\n */\nfunction get(object, path, defaultValue) {\n  var result = object == null ? undefined : baseGet(object, path);\n  return result === undefined ? defaultValue : result;\n}\n\nexport default get;\n","/**\n * The base implementation of `_.slice` without an iteratee call guard.\n *\n * @private\n * @param {Array} array The array to slice.\n * @param {number} [start=0] The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the slice of `array`.\n */\nfunction baseSlice(array, start, end) {\n  var index = -1,\n      length = array.length;\n\n  if (start < 0) {\n    start = -start > length ? 0 : (length + start);\n  }\n  end = end > length ? length : end;\n  if (end < 0) {\n    end += length;\n  }\n  length = start > end ? 0 : ((end - start) >>> 0);\n  start >>>= 0;\n\n  var result = Array(length);\n  while (++index < length) {\n    result[index] = array[index + start];\n  }\n  return result;\n}\n\nexport default baseSlice;\n","import Stack from './_Stack.js';\nimport baseIsEqual from './_baseIsEqual.js';\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/**\n * The base implementation of `_.isMatch` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to inspect.\n * @param {Object} source The object of property values to match.\n * @param {Array} matchData The property names, values, and compare flags to match.\n * @param {Function} [customizer] The function to customize comparisons.\n * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n */\nfunction baseIsMatch(object, source, matchData, customizer) {\n  var index = matchData.length,\n      length = index,\n      noCustomizer = !customizer;\n\n  if (object == null) {\n    return !length;\n  }\n  object = Object(object);\n  while (index--) {\n    var data = matchData[index];\n    if ((noCustomizer && data[2])\n          ? data[1] !== object[data[0]]\n          : !(data[0] in object)\n        ) {\n      return false;\n    }\n  }\n  while (++index < length) {\n    data = matchData[index];\n    var key = data[0],\n        objValue = object[key],\n        srcValue = data[1];\n\n    if (noCustomizer && data[2]) {\n      if (objValue === undefined && !(key in object)) {\n        return false;\n      }\n    } else {\n      var stack = new Stack;\n      if (customizer) {\n        var result = customizer(objValue, srcValue, key, object, source, stack);\n      }\n      if (!(result === undefined\n            ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)\n            : result\n          )) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\nexport default baseIsMatch;\n","import isObject from './isObject.js';\n\n/**\n * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` if suitable for strict\n *  equality comparisons, else `false`.\n */\nfunction isStrictComparable(value) {\n  return value === value && !isObject(value);\n}\n\nexport default isStrictComparable;\n","import isStrictComparable from './_isStrictComparable.js';\nimport keys from './keys.js';\n\n/**\n * Gets the property names, values, and compare flags of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the match data of `object`.\n */\nfunction getMatchData(object) {\n  var result = keys(object),\n      length = result.length;\n\n  while (length--) {\n    var key = result[length],\n        value = object[key];\n\n    result[length] = [key, value, isStrictComparable(value)];\n  }\n  return result;\n}\n\nexport default getMatchData;\n","/**\n * A specialized version of `matchesProperty` for source values suitable\n * for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction matchesStrictComparable(key, srcValue) {\n  return function(object) {\n    if (object == null) {\n      return false;\n    }\n    return object[key] === srcValue &&\n      (srcValue !== undefined || (key in Object(object)));\n  };\n}\n\nexport default matchesStrictComparable;\n","import baseIsMatch from './_baseIsMatch.js';\nimport getMatchData from './_getMatchData.js';\nimport matchesStrictComparable from './_matchesStrictComparable.js';\n\n/**\n * The base implementation of `_.matches` which doesn't clone `source`.\n *\n * @private\n * @param {Object} source The object of property values to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction baseMatches(source) {\n  var matchData = getMatchData(source);\n  if (matchData.length == 1 && matchData[0][2]) {\n    return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n  }\n  return function(object) {\n    return object === source || baseIsMatch(object, source, matchData);\n  };\n}\n\nexport default baseMatches;\n","/**\n * The base implementation of `_.hasIn` without support for deep paths.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {Array|string} key The key to check.\n * @returns {boolean} Returns `true` if `key` exists, else `false`.\n */\nfunction baseHasIn(object, key) {\n  return object != null && key in Object(object);\n}\n\nexport default baseHasIn;\n","import baseHasIn from './_baseHasIn.js';\nimport hasPath from './_hasPath.js';\n\n/**\n * Checks if `path` is a direct or inherited property of `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n * @example\n *\n * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n *\n * _.hasIn(object, 'a');\n * // => true\n *\n * _.hasIn(object, 'a.b');\n * // => true\n *\n * _.hasIn(object, ['a', 'b']);\n * // => true\n *\n * _.hasIn(object, 'b');\n * // => false\n */\nfunction hasIn(object, path) {\n  return object != null && hasPath(object, path, baseHasIn);\n}\n\nexport default hasIn;\n","import baseIsEqual from './_baseIsEqual.js';\nimport get from './get.js';\nimport hasIn from './hasIn.js';\nimport isKey from './_isKey.js';\nimport isStrictComparable from './_isStrictComparable.js';\nimport matchesStrictComparable from './_matchesStrictComparable.js';\nimport toKey from './_toKey.js';\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/**\n * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n *\n * @private\n * @param {string} path The path of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction baseMatchesProperty(path, srcValue) {\n  if (isKey(path) && isStrictComparable(srcValue)) {\n    return matchesStrictComparable(toKey(path), srcValue);\n  }\n  return function(object) {\n    var objValue = get(object, path);\n    return (objValue === undefined && objValue === srcValue)\n      ? hasIn(object, path)\n      : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);\n  };\n}\n\nexport default baseMatchesProperty;\n","/**\n * The base implementation of `_.property` without support for deep paths.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\nfunction baseProperty(key) {\n  return function(object) {\n    return object == null ? undefined : object[key];\n  };\n}\n\nexport default baseProperty;\n","import baseGet from './_baseGet.js';\n\n/**\n * A specialized version of `baseProperty` which supports deep paths.\n *\n * @private\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\nfunction basePropertyDeep(path) {\n  return function(object) {\n    return baseGet(object, path);\n  };\n}\n\nexport default basePropertyDeep;\n","import baseProperty from './_baseProperty.js';\nimport basePropertyDeep from './_basePropertyDeep.js';\nimport isKey from './_isKey.js';\nimport toKey from './_toKey.js';\n\n/**\n * Creates a function that returns the value at `path` of a given object.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n * @example\n *\n * var objects = [\n *   { 'a': { 'b': 2 } },\n *   { 'a': { 'b': 1 } }\n * ];\n *\n * _.map(objects, _.property('a.b'));\n * // => [2, 1]\n *\n * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n * // => [1, 2]\n */\nfunction property(path) {\n  return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n}\n\nexport default property;\n","import baseMatches from './_baseMatches.js';\nimport baseMatchesProperty from './_baseMatchesProperty.js';\nimport identity from './identity.js';\nimport isArray from './isArray.js';\nimport property from './property.js';\n\n/**\n * The base implementation of `_.iteratee`.\n *\n * @private\n * @param {*} [value=_.identity] The value to convert to an iteratee.\n * @returns {Function} Returns the iteratee.\n */\nfunction baseIteratee(value) {\n  // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n  // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n  if (typeof value == 'function') {\n    return value;\n  }\n  if (value == null) {\n    return identity;\n  }\n  if (typeof value == 'object') {\n    return isArray(value)\n      ? baseMatchesProperty(value[0], value[1])\n      : baseMatches(value);\n  }\n  return property(value);\n}\n\nexport default baseIteratee;\n","/**\n * A specialized version of `baseAggregator` for arrays.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\nfunction arrayAggregator(array, setter, iteratee, accumulator) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    var value = array[index];\n    setter(accumulator, value, iteratee(value), array);\n  }\n  return accumulator;\n}\n\nexport default arrayAggregator;\n","/**\n * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseFor(fromRight) {\n  return function(object, iteratee, keysFunc) {\n    var index = -1,\n        iterable = Object(object),\n        props = keysFunc(object),\n        length = props.length;\n\n    while (length--) {\n      var key = props[fromRight ? length : ++index];\n      if (iteratee(iterable[key], key, iterable) === false) {\n        break;\n      }\n    }\n    return object;\n  };\n}\n\nexport default createBaseFor;\n","import createBaseFor from './_createBaseFor.js';\n\n/**\n * The base implementation of `baseForOwn` which iterates over `object`\n * properties returned by `keysFunc` and invokes `iteratee` for each property.\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @returns {Object} Returns `object`.\n */\nvar baseFor = createBaseFor();\n\nexport default baseFor;\n","import baseFor from './_baseFor.js';\nimport keys from './keys.js';\n\n/**\n * The base implementation of `_.forOwn` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Object} Returns `object`.\n */\nfunction baseForOwn(object, iteratee) {\n  return object && baseFor(object, iteratee, keys);\n}\n\nexport default baseForOwn;\n","import isArrayLike from './isArrayLike.js';\n\n/**\n * Creates a `baseEach` or `baseEachRight` function.\n *\n * @private\n * @param {Function} eachFunc The function to iterate over a collection.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseEach(eachFunc, fromRight) {\n  return function(collection, iteratee) {\n    if (collection == null) {\n      return collection;\n    }\n    if (!isArrayLike(collection)) {\n      return eachFunc(collection, iteratee);\n    }\n    var length = collection.length,\n        index = fromRight ? length : -1,\n        iterable = Object(collection);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (iteratee(iterable[index], index, iterable) === false) {\n        break;\n      }\n    }\n    return collection;\n  };\n}\n\nexport default createBaseEach;\n","import baseForOwn from './_baseForOwn.js';\nimport createBaseEach from './_createBaseEach.js';\n\n/**\n * The base implementation of `_.forEach` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array|Object} Returns `collection`.\n */\nvar baseEach = createBaseEach(baseForOwn);\n\nexport default baseEach;\n","import baseEach from './_baseEach.js';\n\n/**\n * Aggregates elements of `collection` on `accumulator` with keys transformed\n * by `iteratee` and values set by `setter`.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\nfunction baseAggregator(collection, setter, iteratee, accumulator) {\n  baseEach(collection, function(value, key, collection) {\n    setter(accumulator, value, iteratee(value), collection);\n  });\n  return accumulator;\n}\n\nexport default baseAggregator;\n","import arrayAggregator from './_arrayAggregator.js';\nimport baseAggregator from './_baseAggregator.js';\nimport baseIteratee from './_baseIteratee.js';\nimport isArray from './isArray.js';\n\n/**\n * Creates a function like `_.groupBy`.\n *\n * @private\n * @param {Function} setter The function to set accumulator values.\n * @param {Function} [initializer] The accumulator object initializer.\n * @returns {Function} Returns the new aggregator function.\n */\nfunction createAggregator(setter, initializer) {\n  return function(collection, iteratee) {\n    var func = isArray(collection) ? arrayAggregator : baseAggregator,\n        accumulator = initializer ? initializer() : {};\n\n    return func(collection, setter, baseIteratee(iteratee, 2), accumulator);\n  };\n}\n\nexport default createAggregator;\n","/**\n * Gets the last element of `array`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to query.\n * @returns {*} Returns the last element of `array`.\n * @example\n *\n * _.last([1, 2, 3]);\n * // => 3\n */\nfunction last(array) {\n  var length = array == null ? 0 : array.length;\n  return length ? array[length - 1] : undefined;\n}\n\nexport default last;\n","import toString from './toString.js';\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g,\n    reHasRegExpChar = RegExp(reRegExpChar.source);\n\n/**\n * Escapes the `RegExp` special characters \"^\", \"$\", \"\\\", \".\", \"*\", \"+\",\n * \"?\", \"(\", \")\", \"[\", \"]\", \"{\", \"}\", and \"|\" in `string`.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to escape.\n * @returns {string} Returns the escaped string.\n * @example\n *\n * _.escapeRegExp('[lodash](https://lodash.com/)');\n * // => '\\[lodash\\]\\(https://lodash\\.com/\\)'\n */\nfunction escapeRegExp(string) {\n  string = toString(string);\n  return (string && reHasRegExpChar.test(string))\n    ? string.replace(reRegExpChar, '\\\\$&')\n    : string;\n}\n\nexport default escapeRegExp;\n","import baseEach from './_baseEach.js';\n\n/**\n * The base implementation of `_.filter` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction baseFilter(collection, predicate) {\n  var result = [];\n  baseEach(collection, function(value, index, collection) {\n    if (predicate(value, index, collection)) {\n      result.push(value);\n    }\n  });\n  return result;\n}\n\nexport default baseFilter;\n","import arrayFilter from './_arrayFilter.js';\nimport baseFilter from './_baseFilter.js';\nimport baseIteratee from './_baseIteratee.js';\nimport isArray from './isArray.js';\n\n/**\n * Iterates over elements of `collection`, returning an array of all elements\n * `predicate` returns truthy for. The predicate is invoked with three\n * arguments: (value, index|key, collection).\n *\n * **Note:** Unlike `_.remove`, this method returns a new array.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n * @see _.reject\n * @example\n *\n * var users = [\n *   { 'user': 'barney', 'age': 36, 'active': true },\n *   { 'user': 'fred',   'age': 40, 'active': false }\n * ];\n *\n * _.filter(users, function(o) { return !o.active; });\n * // => objects for ['fred']\n *\n * // The `_.matches` iteratee shorthand.\n * _.filter(users, { 'age': 36, 'active': true });\n * // => objects for ['barney']\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.filter(users, ['active', false]);\n * // => objects for ['fred']\n *\n * // The `_.property` iteratee shorthand.\n * _.filter(users, 'active');\n * // => objects for ['barney']\n *\n * // Combining several predicates using `_.overEvery` or `_.overSome`.\n * _.filter(users, _.overSome([{ 'age': 36 }, ['age', 40]]));\n * // => objects for ['fred', 'barney']\n */\nfunction filter(collection, predicate) {\n  var func = isArray(collection) ? arrayFilter : baseFilter;\n  return func(collection, baseIteratee(predicate, 3));\n}\n\nexport default filter;\n","import baseAssignValue from './_baseAssignValue.js';\nimport createAggregator from './_createAggregator.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Creates an object composed of keys generated from the results of running\n * each element of `collection` thru `iteratee`. The order of grouped values\n * is determined by the order they occur in `collection`. The corresponding\n * value of each key is an array of elements responsible for generating the\n * key. The iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n * @returns {Object} Returns the composed aggregate object.\n * @example\n *\n * _.groupBy([6.1, 4.2, 6.3], Math.floor);\n * // => { '4': [4.2], '6': [6.1, 6.3] }\n *\n * // The `_.property` iteratee shorthand.\n * _.groupBy(['one', 'two', 'three'], 'length');\n * // => { '3': ['one', 'two'], '5': ['three'] }\n */\nvar groupBy = createAggregator(function(result, value, key) {\n  if (hasOwnProperty.call(result, key)) {\n    result[key].push(value);\n  } else {\n    baseAssignValue(result, key, [value]);\n  }\n});\n\nexport default groupBy;\n","import baseGet from './_baseGet.js';\nimport baseSlice from './_baseSlice.js';\n\n/**\n * Gets the parent value at `path` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array} path The path to get the parent value of.\n * @returns {*} Returns the parent value.\n */\nfunction parent(object, path) {\n  return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));\n}\n\nexport default parent;\n","import castPath from './_castPath.js';\nimport last from './last.js';\nimport parent from './_parent.js';\nimport toKey from './_toKey.js';\n\n/**\n * The base implementation of `_.unset`.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {Array|string} path The property path to unset.\n * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n */\nfunction baseUnset(object, path) {\n  path = castPath(path, object);\n  object = parent(object, path);\n  return object == null || delete object[toKey(last(path))];\n}\n\nexport default baseUnset;\n","/**\n * This function is like `baseIndexOf` except that it accepts a comparator.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @param {Function} comparator The comparator invoked per element.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseIndexOfWith(array, value, fromIndex, comparator) {\n  var index = fromIndex - 1,\n      length = array.length;\n\n  while (++index < length) {\n    if (comparator(array[index], value)) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nexport default baseIndexOfWith;\n","import arrayMap from './_arrayMap.js';\nimport baseIndexOf from './_baseIndexOf.js';\nimport baseIndexOfWith from './_baseIndexOfWith.js';\nimport baseUnary from './_baseUnary.js';\nimport copyArray from './_copyArray.js';\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype;\n\n/** Built-in value references. */\nvar splice = arrayProto.splice;\n\n/**\n * The base implementation of `_.pullAllBy` without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to remove.\n * @param {Function} [iteratee] The iteratee invoked per element.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns `array`.\n */\nfunction basePullAll(array, values, iteratee, comparator) {\n  var indexOf = comparator ? baseIndexOfWith : baseIndexOf,\n      index = -1,\n      length = values.length,\n      seen = array;\n\n  if (array === values) {\n    values = copyArray(values);\n  }\n  if (iteratee) {\n    seen = arrayMap(array, baseUnary(iteratee));\n  }\n  while (++index < length) {\n    var fromIndex = 0,\n        value = values[index],\n        computed = iteratee ? iteratee(value) : value;\n\n    while ((fromIndex = indexOf(seen, computed, fromIndex, comparator)) > -1) {\n      if (seen !== array) {\n        splice.call(seen, fromIndex, 1);\n      }\n      splice.call(array, fromIndex, 1);\n    }\n  }\n  return array;\n}\n\nexport default basePullAll;\n","import basePullAll from './_basePullAll.js';\n\n/**\n * This method is like `_.pull` except that it accepts an array of values to remove.\n *\n * **Note:** Unlike `_.difference`, this method mutates `array`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {Array} array The array to modify.\n * @param {Array} values The values to remove.\n * @returns {Array} Returns `array`.\n * @example\n *\n * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n *\n * _.pullAll(array, ['a', 'c']);\n * console.log(array);\n * // => ['b', 'b']\n */\nfunction pullAll(array, values) {\n  return (array && array.length && values && values.length)\n    ? basePullAll(array, values)\n    : array;\n}\n\nexport default pullAll;\n","import baseRest from './_baseRest.js';\nimport pullAll from './pullAll.js';\n\n/**\n * Removes all given values from `array` using\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * **Note:** Unlike `_.without`, this method mutates `array`. Use `_.remove`\n * to remove elements from an array by predicate.\n *\n * @static\n * @memberOf _\n * @since 2.0.0\n * @category Array\n * @param {Array} array The array to modify.\n * @param {...*} [values] The values to remove.\n * @returns {Array} Returns `array`.\n * @example\n *\n * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n *\n * _.pull(array, 'a', 'c');\n * console.log(array);\n * // => ['b', 'b']\n */\nvar pull = baseRest(pullAll);\n\nexport default pull;\n","import baseUnset from './_baseUnset.js';\nimport isIndex from './_isIndex.js';\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype;\n\n/** Built-in value references. */\nvar splice = arrayProto.splice;\n\n/**\n * The base implementation of `_.pullAt` without support for individual\n * indexes or capturing the removed elements.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {number[]} indexes The indexes of elements to remove.\n * @returns {Array} Returns `array`.\n */\nfunction basePullAt(array, indexes) {\n  var length = array ? indexes.length : 0,\n      lastIndex = length - 1;\n\n  while (length--) {\n    var index = indexes[length];\n    if (length == lastIndex || index !== previous) {\n      var previous = index;\n      if (isIndex(index)) {\n        splice.call(array, index, 1);\n      } else {\n        baseUnset(array, index);\n      }\n    }\n  }\n  return array;\n}\n\nexport default basePullAt;\n","import baseIteratee from './_baseIteratee.js';\nimport basePullAt from './_basePullAt.js';\n\n/**\n * Removes all elements from `array` that `predicate` returns truthy for\n * and returns an array of the removed elements. The predicate is invoked\n * with three arguments: (value, index, array).\n *\n * **Note:** Unlike `_.filter`, this method mutates `array`. Use `_.pull`\n * to pull elements from an array by value.\n *\n * @static\n * @memberOf _\n * @since 2.0.0\n * @category Array\n * @param {Array} array The array to modify.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the new array of removed elements.\n * @example\n *\n * var array = [1, 2, 3, 4];\n * var evens = _.remove(array, function(n) {\n *   return n % 2 == 0;\n * });\n *\n * console.log(array);\n * // => [1, 3]\n *\n * console.log(evens);\n * // => [2, 4]\n */\nfunction remove(array, predicate) {\n  var result = [];\n  if (!(array && array.length)) {\n    return result;\n  }\n  var index = -1,\n      indexes = [],\n      length = array.length;\n\n  predicate = baseIteratee(predicate, 3);\n  while (++index < length) {\n    var value = array[index];\n    if (predicate(value, index, array)) {\n      result.push(value);\n      indexes.push(index);\n    }\n  }\n  basePullAt(array, indexes);\n  return result;\n}\n\nexport default remove;\n","<template>\n  <HoppSmartModal\n    v-if=\"show\"\n    dialog\n    :title=\"t('modal.collections')\"\n    styles=\"sm:max-w-md\"\n    @close=\"hideModal\"\n  >\n    <template #actions>\n      <HoppButtonSecondary\n        v-if=\"importerType !== null\"\n        v-tippy=\"{ theme: 'tooltip' }\"\n        :title=\"t('action.go_back')\"\n        :icon=\"IconArrowLeft\"\n        @click=\"resetImport\"\n      />\n    </template>\n    <template #body>\n      <div v-if=\"importerType !== null\" class=\"flex flex-col\">\n        <div class=\"flex flex-col pb-4\">\n          <div\n            v-for=\"(step, index) in importerSteps\"\n            :key=\"`step-${index}`\"\n            class=\"flex flex-col space-y-8\"\n          >\n            <div v-if=\"step.name === 'FILE_IMPORT'\" class=\"space-y-4\">\n              <p class=\"flex items-center\">\n                <span\n                  class=\"inline-flex items-center justify-center flex-shrink-0 mr-4 border-4 rounded-full border-primary text-dividerDark\"\n                  :class=\"{\n                    '!text-green-500': hasFile,\n                  }\"\n                >\n                  <icon-lucide-check-circle class=\"svg-icons\" />\n                </span>\n                <span>\n                  {{ t(`${step.metadata.caption}`) }}\n                </span>\n              </p>\n              <p\n                class=\"flex flex-col ml-10 border border-dashed rounded border-dividerDark\"\n              >\n                <input\n                  id=\"inputChooseFileToImportFrom\"\n                  ref=\"inputChooseFileToImportFrom\"\n                  name=\"inputChooseFileToImportFrom\"\n                  type=\"file\"\n                  class=\"p-4 cursor-pointer transition file:transition file:cursor-pointer text-secondary hover:text-secondaryDark file:mr-2 file:py-2 file:px-4 file:rounded file:border-0 file:text-secondary hover:file:text-secondaryDark file:bg-primaryLight hover:file:bg-primaryDark\"\n                  :accept=\"step.metadata.acceptedFileTypes\"\n                  @change=\"onFileChange\"\n                />\n              </p>\n            </div>\n            <div v-else-if=\"step.name === 'URL_IMPORT'\" class=\"space-y-4\">\n              <p class=\"flex items-center\">\n                <span\n                  class=\"inline-flex items-center justify-center flex-shrink-0 mr-4 border-4 rounded-full border-primary text-dividerDark\"\n                  :class=\"{\n                    '!text-green-500': hasGist,\n                  }\"\n                >\n                  <icon-lucide-check-circle class=\"svg-icons\" />\n                </span>\n                <span>\n                  {{ t(`${step.metadata.caption}`) }}\n                </span>\n              </p>\n              <p class=\"flex flex-col ml-10\">\n                <input\n                  v-model=\"inputChooseGistToImportFrom\"\n                  type=\"url\"\n                  class=\"input\"\n                  :placeholder=\"`${t('import.gist_url')}`\"\n                />\n              </p>\n            </div>\n            <div\n              v-else-if=\"step.name === 'TARGET_MY_COLLECTION'\"\n              class=\"flex flex-col\"\n            >\n              <div class=\"select-wrapper\">\n                <select\n                  v-model=\"mySelectedCollectionID\"\n                  autocomplete=\"off\"\n                  class=\"select\"\n                  autofocus\n                >\n                  <option :key=\"undefined\" :value=\"undefined\" disabled selected>\n                    {{ t(\"collection.select\") }}\n                  </option>\n                  <option\n                    v-for=\"(collection, collectionIndex) in myCollections\"\n                    :key=\"`collection-${collectionIndex}`\"\n                    :value=\"collectionIndex\"\n                    class=\"bg-primary\"\n                  >\n                    {{ collection.name }}\n                  </option>\n                </select>\n              </div>\n            </div>\n          </div>\n        </div>\n        <HoppButtonPrimary\n          :label=\"t('import.title')\"\n          :disabled=\"enableImportButton\"\n          :loading=\"importingMyCollections\"\n          @click=\"finishImport\"\n        />\n      </div>\n      <div v-else class=\"flex flex-col\">\n        <HoppSmartExpand>\n          <template #body>\n            <HoppSmartItem\n              v-for=\"(importer, index) in importerModules\"\n              :key=\"`importer-${index}`\"\n              :icon=\"importer.icon\"\n              :label=\"t(`${importer.name}`)\"\n              @click=\"importerType = index\"\n            />\n          </template>\n        </HoppSmartExpand>\n        <hr />\n        <div class=\"flex flex-col space-y-2\">\n          <HoppSmartItem\n            v-tippy=\"{ theme: 'tooltip' }\"\n            :title=\"t('action.download_file')\"\n            :icon=\"IconDownload\"\n            :loading=\"exportingTeamCollections\"\n            :label=\"t('export.as_json')\"\n            @click=\"emit('export-json-collection')\"\n          />\n          <span\n            v-if=\"platform.platformFeatureFlags.exportAsGIST\"\n            v-tippy=\"{ theme: 'tooltip' }\"\n            :title=\"\n              !currentUser\n                ? `${t('export.require_github')}`\n                : currentUser.provider !== 'github.com'\n                ? `${t('export.require_github')}`\n                : undefined\n            \"\n            class=\"flex\"\n          >\n            <HoppSmartItem\n              :disabled=\"\n                !currentUser\n                  ? true\n                  : currentUser.provider !== 'github.com'\n                  ? true\n                  : false\n              \"\n              :icon=\"IconGithub\"\n              :loading=\"creatingGistCollection\"\n              :label=\"t('export.create_secret_gist')\"\n              @click=\"emit('create-collection-gist')\"\n            />\n          </span>\n        </div>\n      </div>\n    </template>\n  </HoppSmartModal>\n</template>\n\n<script setup lang=\"ts\">\nimport IconArrowLeft from \"~icons/lucide/arrow-left\"\nimport IconDownload from \"~icons/lucide/download\"\nimport IconGithub from \"~icons/lucide/github\"\nimport { computed, PropType, ref, watch } from \"vue\"\nimport { pipe } from \"fp-ts/function\"\nimport * as E from \"fp-ts/Either\"\nimport { HoppRESTRequest, HoppCollection } from \"@hoppscotch/data\"\nimport { useI18n } from \"@composables/i18n\"\nimport { useReadonlyStream } from \"@composables/stream\"\nimport { useToast } from \"@composables/toast\"\nimport { platform } from \"~/platform\"\nimport { appendRESTCollections, restCollections$ } from \"~/newstore/collections\"\nimport { RESTCollectionImporters } from \"~/helpers/import-export/import/importers\"\nimport { StepReturnValue } from \"~/helpers/import-export/steps\"\n\nconst toast = useToast()\nconst t = useI18n()\n\ntype CollectionType = \"team-collections\" | \"my-collections\"\n\nconst props = defineProps({\n  show: {\n    type: Boolean,\n    default: false,\n    required: true,\n  },\n  collectionsType: {\n    type: String as PropType<CollectionType>,\n    default: \"my-collections\",\n    required: true,\n  },\n  exportingTeamCollections: {\n    type: Boolean,\n    default: false,\n    required: false,\n  },\n  creatingGistCollection: {\n    type: Boolean,\n    default: false,\n    required: false,\n  },\n  importingMyCollections: {\n    type: Boolean,\n    default: false,\n    required: false,\n  },\n})\n\nconst emit = defineEmits<{\n  (e: \"hide-modal\"): void\n  (e: \"update-team-collections\"): void\n  (e: \"export-json-collection\"): void\n  (e: \"create-collection-gist\"): void\n  (e: \"import-to-teams\", payload: HoppCollection<HoppRESTRequest>[]): void\n}>()\n\nconst hasFile = ref(false)\nconst hasGist = ref(false)\n\nconst importerType = ref<number | null>(null)\n\nconst stepResults = ref<StepReturnValue[]>([])\n\nconst inputChooseFileToImportFrom = ref<HTMLInputElement | any>()\nconst mySelectedCollectionID = ref<number | undefined>(undefined)\nconst inputChooseGistToImportFrom = ref<string>(\"\")\n\nconst importerModules = computed(() =>\n  RESTCollectionImporters.filter(\n    (i) => i.applicableTo?.includes(props.collectionsType) ?? true\n  )\n)\n\nconst importerModule = computed(() => {\n  if (importerType.value === null) return null\n  return importerModules.value[importerType.value]\n})\n\nconst importerSteps = computed(() => importerModule.value?.steps ?? null)\n\nconst enableImportButton = computed(\n  () => !(stepResults.value.length === importerSteps.value?.length)\n)\n\nwatch(mySelectedCollectionID, (newValue) => {\n  if (newValue === undefined) return\n  stepResults.value = []\n  stepResults.value.push(newValue)\n})\n\nwatch(inputChooseGistToImportFrom, (url) => {\n  stepResults.value = []\n  if (url === \"\") {\n    hasGist.value = false\n  } else {\n    hasGist.value = true\n    stepResults.value.push(inputChooseGistToImportFrom.value)\n  }\n})\n\nconst myCollections = useReadonlyStream(restCollections$, [])\nconst currentUser = useReadonlyStream(\n  platform.auth.getCurrentUserStream(),\n  platform.auth.getCurrentUser()\n)\n\nconst importerAction = async (stepResults: StepReturnValue[]) => {\n  if (!importerModule.value) return\n\n  pipe(\n    await importerModule.value.importer(stepResults as any)(),\n    E.match(\n      (err) => {\n        failedImport()\n        console.error(\"error\", err)\n      },\n      (result) => {\n        if (props.collectionsType === \"team-collections\") {\n          emit(\"import-to-teams\", result)\n        } else {\n          appendRESTCollections(result)\n\n          platform.analytics?.logEvent({\n            type: \"HOPP_IMPORT_COLLECTION\",\n            importer: importerModule.value!.name,\n            platform: \"rest\",\n            workspaceType: \"personal\",\n          })\n\n          fileImported()\n        }\n      }\n    )\n  )\n}\n\nconst finishImport = async () => {\n  await importerAction(stepResults.value)\n}\n\nconst onFileChange = () => {\n  stepResults.value = []\n\n  const inputFileToImport = inputChooseFileToImportFrom.value[0]\n\n  if (!inputFileToImport) {\n    hasFile.value = false\n    return\n  }\n\n  if (!inputFileToImport.files || inputFileToImport.files.length === 0) {\n    inputChooseFileToImportFrom.value[0].value = \"\"\n    hasFile.value = false\n    toast.show(t(\"action.choose_file\").toString())\n    return\n  }\n\n  const reader = new FileReader()\n\n  reader.onload = ({ target }) => {\n    const content = target!.result as string | null\n    if (!content) {\n      hasFile.value = false\n      toast.show(t(\"action.choose_file\").toString())\n      return\n    }\n\n    stepResults.value.push(content)\n    hasFile.value = !!content?.length\n  }\n\n  reader.readAsText(inputFileToImport.files[0])\n}\n\nconst fileImported = () => {\n  toast.success(t(\"state.file_imported\").toString())\n  hideModal()\n}\nconst failedImport = () => {\n  toast.error(t(\"import.failed\").toString())\n}\nconst hideModal = () => {\n  resetImport()\n  emit(\"hide-modal\")\n}\n\nconst resetImport = () => {\n  importerType.value = null\n  hasFile.value = false\n  hasGist.value = false\n  stepResults.value = []\n  inputChooseFileToImportFrom.value = \"\"\n  inputChooseGistToImportFrom.value = \"\"\n  mySelectedCollectionID.value = undefined\n}\n</script>\n","<template>\n  <HoppSmartModal\n    v-if=\"show\"\n    dialog\n    :title=\"t('modal.edit_request')\"\n    @close=\"hideModal\"\n  >\n    <template #body>\n      <div class=\"flex flex-col\">\n        <input\n          id=\"selectLabelEditReq\"\n          v-model=\"name\"\n          v-focus\n          class=\"input floating-input\"\n          placeholder=\" \"\n          type=\"text\"\n          autocomplete=\"off\"\n          @keyup.enter=\"editRequest\"\n        />\n        <label for=\"selectLabelEditReq\">\n          {{ t(\"action.label\") }}\n        </label>\n      </div>\n    </template>\n    <template #footer>\n      <span class=\"flex space-x-2\">\n        <HoppButtonPrimary\n          :label=\"t('action.save')\"\n          :loading=\"loadingState\"\n          outline\n          @click=\"editRequest\"\n        />\n        <HoppButtonSecondary\n          :label=\"t('action.cancel')\"\n          outline\n          filled\n          @click=\"hideModal\"\n        />\n      </span>\n    </template>\n  </HoppSmartModal>\n</template>\n\n<script setup lang=\"ts\">\nimport { useI18n } from \"@composables/i18n\"\nimport { useToast } from \"@composables/toast\"\nimport { useVModel } from \"@vueuse/core\"\n\nconst toast = useToast()\nconst t = useI18n()\n\nconst props = withDefaults(\n  defineProps<{\n    show: boolean\n    loadingState: boolean\n    modelValue?: string\n  }>(),\n  {\n    show: false,\n    loadingState: false,\n    modelValue: \"\",\n  }\n)\n\nconst emit = defineEmits<{\n  (e: \"submit\", name: string): void\n  (e: \"hide-modal\"): void\n  (e: \"update:modelValue\", value: string): void\n}>()\n\nconst name = useVModel(props, \"modelValue\")\n\nconst editRequest = () => {\n  if (name.value.trim() === \"\") {\n    toast.error(t(\"request.invalid_name\"))\n    return\n  }\n\n  emit(\"submit\", name.value)\n}\n\nconst hideModal = () => {\n  name.value = \"\"\n  emit(\"hide-modal\")\n}\n</script>\n","<template>\n  <HoppSmartModal\n    v-if=\"show\"\n    dialog\n    :title=\"t('folder.edit')\"\n    @close=\"emit('hide-modal')\"\n  >\n    <template #body>\n      <div class=\"flex flex-col\">\n        <input\n          id=\"selectLabelEditFolder\"\n          v-model=\"name\"\n          v-focus\n          class=\"input floating-input\"\n          placeholder=\" \"\n          type=\"text\"\n          autocomplete=\"off\"\n          @keyup.enter=\"editFolder\"\n        />\n        <label for=\"selectLabelEditFolder\">\n          {{ t(\"action.label\") }}\n        </label>\n      </div>\n    </template>\n    <template #footer>\n      <span class=\"flex space-x-2\">\n        <HoppButtonPrimary\n          :label=\"t('action.save')\"\n          :loading=\"loadingState\"\n          outline\n          @click=\"editFolder\"\n        />\n        <HoppButtonSecondary\n          :label=\"t('action.cancel')\"\n          outline\n          filled\n          @click=\"hideModal\"\n        />\n      </span>\n    </template>\n  </HoppSmartModal>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, watch } from \"vue\"\nimport { useI18n } from \"@composables/i18n\"\nimport { useToast } from \"@composables/toast\"\n\nconst t = useI18n()\nconst toast = useToast()\n\nconst props = withDefaults(\n  defineProps<{\n    show: boolean\n    loadingState: boolean\n    editingFolderName: string\n  }>(),\n  {\n    show: false,\n    loadingState: false,\n    editingFolderName: \"\",\n  }\n)\n\nconst emit = defineEmits<{\n  (e: \"submit\", name: string): void\n  (e: \"hide-modal\"): void\n}>()\n\nconst name = ref(\"\")\n\nwatch(\n  () => props.editingFolderName,\n  (newName) => {\n    name.value = newName\n  }\n)\n\nconst editFolder = () => {\n  if (name.value.trim() === \"\") {\n    toast.error(t(\"folder.invalid_name\"))\n    return\n  }\n\n  emit(\"submit\", name.value)\n}\n\nconst hideModal = () => {\n  name.value = \"\"\n  emit(\"hide-modal\")\n}\n</script>\n","<template>\n  <HoppSmartModal\n    v-if=\"show\"\n    dialog\n    :title=\"t('collection.edit')\"\n    @close=\"hideModal\"\n  >\n    <template #body>\n      <div class=\"flex flex-col\">\n        <input\n          id=\"selectLabelEdit\"\n          v-model=\"name\"\n          v-focus\n          class=\"input floating-input\"\n          placeholder=\" \"\n          type=\"text\"\n          autocomplete=\"off\"\n          @keyup.enter=\"saveCollection\"\n        />\n        <label for=\"selectLabelEdit\">\n          {{ t(\"action.label\") }}\n        </label>\n      </div>\n    </template>\n    <template #footer>\n      <span class=\"flex space-x-2\">\n        <HoppButtonPrimary\n          :label=\"t('action.save')\"\n          :loading=\"loadingState\"\n          outline\n          @click=\"saveCollection\"\n        />\n        <HoppButtonSecondary\n          :label=\"t('action.cancel')\"\n          outline\n          filled\n          @click=\"hideModal\"\n        />\n      </span>\n    </template>\n  </HoppSmartModal>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, watch } from \"vue\"\nimport { useToast } from \"@composables/toast\"\nimport { useI18n } from \"@composables/i18n\"\n\nconst t = useI18n()\nconst toast = useToast()\n\nconst props = withDefaults(\n  defineProps<{\n    show: boolean\n    loadingState: boolean\n    editingCollectionName: string\n  }>(),\n  {\n    show: false,\n    loadingState: false,\n    editingCollectionName: \"\",\n  }\n)\n\nconst emit = defineEmits<{\n  (e: \"submit\", name: string): void\n  (e: \"hide-modal\"): void\n}>()\n\nconst name = ref(\"\")\n\nwatch(\n  () => props.editingCollectionName,\n  (newName) => {\n    name.value = newName\n  }\n)\n\nconst saveCollection = () => {\n  if (name.value.trim() === \"\") {\n    toast.error(t(\"collection.invalid_name\"))\n    return\n  }\n\n  emit(\"submit\", name.value)\n}\n\nconst hideModal = () => {\n  name.value = \"\"\n  emit(\"hide-modal\")\n}\n</script>\n","<template>\n  <HoppSmartModal\n    v-if=\"show\"\n    dialog\n    :title=\"t('folder.new')\"\n    @close=\"emit('hide-modal')\"\n  >\n    <template #body>\n      <div class=\"flex flex-col\">\n        <input\n          id=\"selectLabelAddFolder\"\n          v-model=\"name\"\n          v-focus\n          class=\"input floating-input\"\n          placeholder=\" \"\n          type=\"text\"\n          autocomplete=\"off\"\n          @keyup.enter=\"addFolder\"\n        />\n        <label for=\"selectLabelAddFolder\">\n          {{ t(\"action.label\") }}\n        </label>\n      </div>\n    </template>\n    <template #footer>\n      <span class=\"flex space-x-2\">\n        <HoppButtonPrimary\n          :label=\"t('action.save')\"\n          :loading=\"loadingState\"\n          outline\n          @click=\"addFolder\"\n        />\n        <HoppButtonSecondary\n          :label=\"t('action.cancel')\"\n          outline\n          filled\n          @click=\"hideModal\"\n        />\n      </span>\n    </template>\n  </HoppSmartModal>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, watch } from \"vue\"\nimport { useI18n } from \"@composables/i18n\"\nimport { useToast } from \"@composables/toast\"\n\nconst toast = useToast()\nconst t = useI18n()\n\nconst props = withDefaults(\n  defineProps<{\n    show: boolean\n    loadingState: boolean\n  }>(),\n  {\n    show: false,\n    loadingState: false,\n  }\n)\n\nconst emit = defineEmits<{\n  (e: \"hide-modal\"): void\n  (e: \"add-folder\", name: string): void\n}>()\n\nconst name = ref(\"\")\n\nwatch(\n  () => props.show,\n  (show) => {\n    if (!show) {\n      name.value = \"\"\n    }\n  }\n)\n\nconst addFolder = () => {\n  if (name.value.trim() === \"\") {\n    toast.error(t(\"folder.invalid_name\"))\n    return\n  }\n  emit(\"add-folder\", name.value)\n}\n\nconst hideModal = () => {\n  name.value = \"\"\n  emit(\"hide-modal\")\n}\n</script>\n","<template>\n  <HoppSmartModal\n    v-if=\"show\"\n    dialog\n    :title=\"t('request.new')\"\n    @close=\"$emit('hide-modal')\"\n  >\n    <template #body>\n      <div class=\"flex flex-col\">\n        <input\n          id=\"selectLabelAddRequest\"\n          v-model=\"name\"\n          v-focus\n          class=\"input floating-input\"\n          placeholder=\" \"\n          type=\"text\"\n          autocomplete=\"off\"\n          @keyup.enter=\"addRequest\"\n        />\n        <label for=\"selectLabelAddRequest\">{{ t(\"action.label\") }}</label>\n      </div>\n    </template>\n    <template #footer>\n      <span class=\"flex space-x-2\">\n        <HoppButtonPrimary\n          :label=\"t('action.save')\"\n          :loading=\"loadingState\"\n          outline\n          @click=\"addRequest\"\n        />\n        <HoppButtonSecondary\n          :label=\"t('action.cancel')\"\n          outline\n          filled\n          @click=\"hideModal\"\n        />\n      </span>\n    </template>\n  </HoppSmartModal>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, watch } from \"vue\"\nimport { useI18n } from \"@composables/i18n\"\nimport { useToast } from \"@composables/toast\"\nimport { currentActiveTab } from \"~/helpers/rest/tab\"\n\nconst toast = useToast()\nconst t = useI18n()\n\nconst props = withDefaults(\n  defineProps<{\n    show: boolean\n    loadingState: boolean\n  }>(),\n  {\n    show: false,\n    loadingState: false,\n  }\n)\n\nconst emit = defineEmits<{\n  (event: \"hide-modal\"): void\n  (event: \"add-request\", name: string): void\n}>()\n\nconst name = ref(\"\")\n\nwatch(\n  () => props.show,\n  (show) => {\n    if (show) {\n      name.value = currentActiveTab.value.document.request.name\n    }\n  }\n)\n\nconst addRequest = () => {\n  if (name.value.trim() === \"\") {\n    toast.error(`${t(\"error.empty_req_name\")}`)\n    return\n  }\n  emit(\"add-request\", name.value)\n}\n\nconst hideModal = () => {\n  emit(\"hide-modal\")\n}\n</script>\n","<template>\n  <HoppSmartModal\n    v-if=\"show\"\n    dialog\n    :title=\"t('collection.new')\"\n    @close=\"hideModal\"\n  >\n    <template #body>\n      <div class=\"flex flex-col\">\n        <input\n          id=\"selectLabelAdd\"\n          v-model=\"name\"\n          v-focus\n          class=\"input floating-input\"\n          placeholder=\" \"\n          type=\"text\"\n          autocomplete=\"off\"\n          @keyup.enter=\"addNewCollection\"\n        />\n        <label for=\"selectLabelAdd\">\n          {{ t(\"action.label\") }}\n        </label>\n      </div>\n    </template>\n    <template #footer>\n      <span class=\"flex space-x-2\">\n        <HoppButtonPrimary\n          :label=\"t('action.save')\"\n          :loading=\"loadingState\"\n          outline\n          @click=\"addNewCollection\"\n        />\n        <HoppButtonSecondary\n          :label=\"t('action.cancel')\"\n          outline\n          filled\n          @click=\"hideModal\"\n        />\n      </span>\n    </template>\n  </HoppSmartModal>\n</template>\n\n<script setup lang=\"ts\">\nimport { watch, ref } from \"vue\"\nimport { useToast } from \"@composables/toast\"\nimport { useI18n } from \"@composables/i18n\"\n\nconst toast = useToast()\nconst t = useI18n()\n\nconst props = withDefaults(\n  defineProps<{\n    show: boolean\n    loadingState: boolean\n  }>(),\n  {\n    show: false,\n    loadingState: false,\n  }\n)\n\nconst emit = defineEmits<{\n  (e: \"submit\", name: string): void\n  (e: \"hide-modal\"): void\n}>()\n\nconst name = ref(\"\")\n\nwatch(\n  () => props.show,\n  (show) => {\n    if (!show) {\n      name.value = \"\"\n    }\n  }\n)\n\nconst addNewCollection = () => {\n  if (!name.value) {\n    toast.error(t(\"collection.invalid_name\"))\n    return\n  }\n\n  emit(\"submit\", name.value)\n}\n\nconst hideModal = () => {\n  name.value = \"\"\n  emit(\"hide-modal\")\n}\n</script>\n","<template>\n  <slot\n    :node=\"nodeItem\"\n    :toggle-children=\"toggleNodeChildren\"\n    :is-open=\"isNodeOpen\"\n    :highlight-children=\"(id:string|null) => highlightNodeChildren(id)\"\n  ></slot>\n\n  <!-- This is a performance optimization trick -->\n  <!-- Once expanded, Vue will traverse through the children and expand the tree up\n       but when we collapse, the tree and the components are disposed. This is wasteful\n       and comes with performance issues if the children list is expensive to render.\n       Hence, here we render children only when first expanded, and after that, even if collapsed,\n       we just hide the children.\n  -->\n  <div v-if=\"childrenRendered\" v-show=\"showChildren\" class=\"flex\">\n    <div\n      class=\"bg-dividerLight cursor-nsResize flex ml-5.5 transform transition w-0.5 hover:bg-dividerDark hover:scale-x-125\"\n      @click=\"toggleNodeChildren\"\n    ></div>\n    <div\n      v-if=\"childNodes.status === 'loaded' && childNodes.data.length > 0\"\n      class=\"flex flex-col flex-1 truncate\"\n      :class=\"{\n        'bg-divider': highlightNode,\n      }\"\n    >\n      <TreeBranch\n        v-for=\"childNode in childNodes.data\"\n        :key=\"childNode.id\"\n        :node-item=\"childNode\"\n        :adapter=\"adapter\"\n      >\n        <!-- The child slot is given a dynamic name in order to not break Volar -->\n        <template\n          #[CHILD_SLOT_NAME]=\"{\n            node,\n            toggleChildren,\n            isOpen,\n            highlightChildren,\n          }\"\n        >\n          <!-- Casting to help with type checking -->\n          <slot\n            :node=\"node as TreeNode<T>\"\n            :toggle-children=\"toggleChildren as () => void\"\n            :is-open=\"isOpen as boolean\"\n            :highlight-children=\"(id:string|null) => highlightChildren(id) as void\"\n          ></slot>\n        </template>\n        <template #emptyNode=\"{ node }\">\n          <slot name=\"emptyNode\" :node=\"node\"></slot>\n        </template>\n      </TreeBranch>\n    </div>\n\n    <div\n      v-if=\"childNodes.status === 'loading'\"\n      class=\"flex flex-col items-center justify-center flex-1 p-4\"\n    >\n      <HoppSmartSpinner class=\"my-4\" />\n      <span class=\"text-secondaryLight\">{{ t(\"state.loading\") }}</span>\n    </div>\n    <div\n      v-if=\"childNodes.status === 'loaded' && childNodes.data.length === 0\"\n      class=\"flex flex-col flex-1\"\n    >\n      <slot name=\"emptyNode\" :node=\"nodeItem\"></slot>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\" generic=\"T extends any\">\nimport { computed, ref } from \"vue\"\nimport { useI18n } from \"~/composables/i18n\"\nimport { SmartTreeAdapter, TreeNode } from \"~/helpers/treeAdapter\"\n\nconst props = defineProps<{\n  /**\n   * The node item that will be used to render the tree branch\n   * @template T The type of the data passed to the tree branch\n   */\n  adapter: SmartTreeAdapter<T>\n  /**\n   *  The node item that will be used to render the tree branch content\n   */\n  nodeItem: TreeNode<T>\n}>()\n\nconst CHILD_SLOT_NAME = \"default\"\nconst t = useI18n()\n\n/**\n * Marks whether the children on this branch were ever rendered\n * See the usage inside '<template>' for more info\n */\nconst childrenRendered = ref(false)\n\nconst showChildren = ref(false)\nconst isNodeOpen = ref(false)\n\nconst highlightNode = ref(false)\n\n/**\n * Fetch the child nodes from the adapter by passing the node id of the current node\n */\nconst childNodes = computed(\n  () => props.adapter.getChildren(props.nodeItem.id).value\n)\n\nconst toggleNodeChildren = () => {\n  if (!childrenRendered.value) childrenRendered.value = true\n\n  showChildren.value = !showChildren.value\n  isNodeOpen.value = !isNodeOpen.value\n}\n\nconst highlightNodeChildren = (id: string | null) => {\n  if (id) {\n    highlightNode.value = true\n  } else {\n    highlightNode.value = false\n  }\n}\n</script>\n","<template>\n  <div class=\"flex flex-col flex-1\">\n    <div\n      v-if=\"rootNodes.status === 'loaded' && rootNodes.data.length > 0\"\n      class=\"flex flex-col\"\n    >\n      <div\n        v-for=\"rootNode in rootNodes.data\"\n        :key=\"rootNode.id\"\n        class=\"flex flex-col flex-1\"\n      >\n        <SmartTreeBranch\n          :node-item=\"rootNode\"\n          :adapter=\"adapter as SmartTreeAdapter<T>\"\n        >\n          <template\n            #default=\"{ node, toggleChildren, isOpen, highlightChildren }\"\n          >\n            <slot\n              name=\"content\"\n              :node=\"node as TreeNode<T>\"\n              :toggle-children=\"toggleChildren as () => void\"\n              :is-open=\"isOpen as boolean\"\n              :highlight-children=\"(id:string|null) => highlightChildren(id)\"\n            ></slot>\n          </template>\n          <template #emptyNode=\"{ node }\">\n            <slot name=\"emptyNode\" :node=\"node\"></slot>\n          </template>\n        </SmartTreeBranch>\n      </div>\n    </div>\n    <div\n      v-else-if=\"rootNodes.status === 'loading'\"\n      class=\"flex flex-col items-center justify-center flex-1 p-4\"\n    >\n      <HoppSmartSpinner class=\"my-4\" />\n      <span class=\"text-secondaryLight\">{{ t(\"state.loading\") }}</span>\n    </div>\n    <div\n      v-if=\"rootNodes.status === 'loaded' && rootNodes.data.length === 0\"\n      class=\"flex flex-col flex-1\"\n    >\n      <slot name=\"emptyNode\" :node=\"(null as TreeNode<T> | null)\"></slot>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\" generic=\"T extends any\">\nimport { computed } from \"vue\"\nimport { useI18n } from \"~/composables/i18n\"\nimport { SmartTreeAdapter, TreeNode } from \"~/helpers/treeAdapter\"\n\nconst props = defineProps<{\n  /**\n   * The adapter that will be used to fetch the tree data\n   * @template T The type of the data that will be stored in the tree\n   */\n  adapter: SmartTreeAdapter<T>\n}>()\n\nconst t = useI18n()\n\n/**\n * Fetch the root nodes from the adapter by passing the node id as null\n */\nconst rootNodes = computed(() => props.adapter.getChildren(null).value)\n</script>\n","import { distinctUntilChanged, pluck } from \"rxjs\"\nimport DispatchingStore, { defineDispatchers } from \"./DispatchingStore\"\n\ntype ReorderingItem =\n  | { type: \"collection\"; id: string; parentID: string | null }\n  | { type: \"request\"; id: string; parentID: string | null }\n\ntype CurrentReorderingState = {\n  currentReorderingItem: ReorderingItem\n}\n\nconst initialState: CurrentReorderingState = {\n  currentReorderingItem: {\n    type: \"collection\",\n    id: \"\",\n    parentID: \"\",\n  },\n}\n\nconst dispatchers = defineDispatchers({\n  changeCurrentReorderStatus(\n    _,\n    { reorderItem }: { reorderItem: ReorderingItem }\n  ) {\n    return {\n      currentReorderingItem: reorderItem,\n    }\n  },\n})\n\nexport const currentReorderStore = new DispatchingStore(\n  initialState,\n  dispatchers\n)\n\nexport const currentReorderingStatus$ = currentReorderStore.subject$.pipe(\n  pluck(\"currentReorderingItem\"),\n  distinctUntilChanged()\n)\n\nexport function changeCurrentReorderStatus(reorderItem: ReorderingItem) {\n  currentReorderStore.dispatch({\n    dispatcher: \"changeCurrentReorderStatus\",\n    payload: { reorderItem },\n  })\n}\n","import { pipe } from \"fp-ts/function\"\nimport * as O from \"fp-ts/Option\"\nimport * as RR from \"fp-ts/ReadonlyRecord\"\nimport { HoppRESTRequest } from \"@hoppscotch/data\"\n\nexport const REQUEST_METHOD_LABEL_COLORS = {\n  get: \"text-green-500\",\n  post: \"text-yellow-500\",\n  put: \"text-blue-500\",\n  delete: \"text-red-500\",\n  default: \"text-gray-500\",\n} as const\n\n/**\n * Returns the label color tailwind class for a request\n * @param request The HoppRESTRequest object to get the value for\n * @returns The class value for the given HTTP VERB, if not, a generic verb class\n */\nexport function getMethodLabelColorClassOf(request: HoppRESTRequest) {\n  return pipe(\n    REQUEST_METHOD_LABEL_COLORS,\n    RR.lookup(request.method.toLowerCase()),\n    O.getOrElseW(() => REQUEST_METHOD_LABEL_COLORS.default)\n  )\n}\n","<template>\n  <div class=\"flex flex-col\">\n    <div\n      class=\"h-1 w-full transition\"\n      :class=\"[\n        {\n          'bg-accentDark': isReorderable,\n        },\n      ]\"\n      @drop=\"updateRequestOrder\"\n      @dragover.prevent=\"ordering = true\"\n      @dragleave=\"resetDragState\"\n      @dragend=\"resetDragState\"\n    ></div>\n    <div\n      class=\"flex items-stretch group\"\n      :draggable=\"!hasNoTeamAccess\"\n      @drop=\"handelDrop\"\n      @dragstart=\"dragStart\"\n      @dragover=\"handleDragOver($event)\"\n      @dragleave=\"resetDragState\"\n      @dragend=\"resetDragState\"\n      @contextmenu.prevent=\"options?.tippy.show()\"\n    >\n      <div\n        class=\"flex items-center justify-center flex-1 min-w-0 cursor-pointer pointer-events-auto\"\n        @click=\"selectRequest()\"\n      >\n        <span\n          class=\"flex items-center justify-center w-16 px-2 truncate pointer-events-none\"\n          :class=\"requestLabelColor\"\n        >\n          <component\n            :is=\"IconCheckCircle\"\n            v-if=\"isSelected\"\n            class=\"svg-icons\"\n            :class=\"{ 'text-accent': isSelected }\"\n          />\n          <HoppSmartSpinner v-else-if=\"isRequestLoading\" />\n          <span v-else class=\"font-semibold truncate text-tiny\">\n            {{ request.method }}\n          </span>\n        </span>\n        <span\n          class=\"flex items-center flex-1 min-w-0 py-2 pr-2 pointer-events-none transition group-hover:text-secondaryDark\"\n        >\n          <span class=\"truncate\" :class=\"{ 'text-accent': isSelected }\">\n            {{ request.name }}\n          </span>\n          <span\n            v-if=\"isActive\"\n            v-tippy=\"{ theme: 'tooltip' }\"\n            class=\"relative h-1.5 w-1.5 flex flex-shrink-0 mx-3\"\n            :title=\"`${t('collection.request_in_use')}`\"\n          >\n            <span\n              class=\"absolute inline-flex flex-shrink-0 w-full h-full bg-green-500 rounded-full opacity-75 animate-ping\"\n            >\n            </span>\n            <span\n              class=\"relative inline-flex flex-shrink-0 rounded-full h-1.5 w-1.5 bg-green-500\"\n            ></span>\n          </span>\n        </span>\n      </div>\n      <div v-if=\"!hasNoTeamAccess\" class=\"flex\">\n        <HoppButtonSecondary\n          v-if=\"!saveRequest\"\n          v-tippy=\"{ theme: 'tooltip' }\"\n          :icon=\"IconRotateCCW\"\n          :title=\"t('action.restore')\"\n          class=\"hidden group-hover:inline-flex\"\n          @click=\"selectRequest()\"\n        />\n        <span>\n          <tippy\n            ref=\"options\"\n            interactive\n            trigger=\"click\"\n            theme=\"popover\"\n            :on-shown=\"() => tippyActions!.focus()\"\n          >\n            <HoppButtonSecondary\n              v-tippy=\"{ theme: 'tooltip' }\"\n              :title=\"t('action.more')\"\n              :icon=\"IconMoreVertical\"\n            />\n            <template #content=\"{ hide }\">\n              <div\n                ref=\"tippyActions\"\n                class=\"flex flex-col focus:outline-none\"\n                tabindex=\"0\"\n                @keyup.e=\"edit?.$el.click()\"\n                @keyup.d=\"duplicate?.$el.click()\"\n                @keyup.delete=\"deleteAction?.$el.click()\"\n                @keyup.escape=\"hide()\"\n              >\n                <HoppSmartItem\n                  ref=\"edit\"\n                  :icon=\"IconEdit\"\n                  :label=\"t('action.edit')\"\n                  :shortcut=\"['E']\"\n                  @click=\"\n                    () => {\n                      emit('edit-request')\n                      hide()\n                    }\n                  \"\n                />\n                <HoppSmartItem\n                  ref=\"duplicate\"\n                  :icon=\"IconCopy\"\n                  :label=\"t('action.duplicate')\"\n                  :loading=\"duplicateLoading\"\n                  :shortcut=\"['D']\"\n                  @click=\"\n                    () => {\n                      emit('duplicate-request'),\n                        collectionsType === 'my-collections' ? hide() : null\n                    }\n                  \"\n                />\n                <HoppSmartItem\n                  ref=\"deleteAction\"\n                  :icon=\"IconTrash2\"\n                  :label=\"t('action.delete')\"\n                  :shortcut=\"['⌫']\"\n                  @click=\"\n                    () => {\n                      emit('remove-request')\n                      hide()\n                    }\n                  \"\n                />\n              </div>\n            </template>\n          </tippy>\n        </span>\n      </div>\n    </div>\n    <div\n      class=\"w-full transition\"\n      :class=\"[\n        {\n          'bg-accentDark': isLastItemReorderable,\n          'h-1 ': isLastItem,\n        },\n      ]\"\n      @drop=\"handelDrop\"\n      @dragover.prevent=\"orderingLastItem = true\"\n      @dragleave=\"resetDragState\"\n      @dragend=\"resetDragState\"\n    ></div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport IconCheckCircle from \"~icons/lucide/check-circle\"\nimport IconMoreVertical from \"~icons/lucide/more-vertical\"\nimport IconEdit from \"~icons/lucide/edit\"\nimport IconCopy from \"~icons/lucide/copy\"\nimport IconTrash2 from \"~icons/lucide/trash-2\"\nimport IconRotateCCW from \"~icons/lucide/rotate-ccw\"\nimport { ref, PropType, watch, computed } from \"vue\"\nimport { HoppRESTRequest } from \"@hoppscotch/data\"\nimport { useI18n } from \"@composables/i18n\"\nimport { TippyComponent } from \"vue-tippy\"\nimport {\n  changeCurrentReorderStatus,\n  currentReorderingStatus$,\n} from \"~/newstore/reordering\"\nimport { useReadonlyStream } from \"~/composables/stream\"\nimport { getMethodLabelColorClassOf } from \"~/helpers/rest/labelColoring\"\n\ntype CollectionType = \"my-collections\" | \"team-collections\"\n\nconst t = useI18n()\n\nconst props = defineProps({\n  request: {\n    type: Object as PropType<HoppRESTRequest>,\n    default: () => ({}),\n    required: true,\n  },\n  requestID: {\n    type: String,\n    default: \"\",\n    required: false,\n  },\n  parentID: {\n    type: String as PropType<string | null>,\n    default: null,\n    required: true,\n  },\n  collectionsType: {\n    type: String as PropType<CollectionType>,\n    default: \"my-collections\",\n    required: true,\n  },\n  duplicateLoading: {\n    type: Boolean,\n    default: false,\n    required: false,\n  },\n  saveRequest: {\n    type: Boolean,\n    default: false,\n    required: false,\n  },\n  isActive: {\n    type: Boolean,\n    default: false,\n    required: false,\n  },\n  hasNoTeamAccess: {\n    type: Boolean,\n    default: false,\n    required: false,\n  },\n  isSelected: {\n    type: Boolean as PropType<boolean | null>,\n    default: false,\n    required: false,\n  },\n  requestMoveLoading: {\n    type: Array as PropType<string[]>,\n    default: () => [],\n    required: false,\n  },\n  isLastItem: {\n    type: Boolean,\n    default: false,\n    required: false,\n  },\n})\n\nconst emit = defineEmits<{\n  (event: \"edit-request\"): void\n  (event: \"duplicate-request\"): void\n  (event: \"remove-request\"): void\n  (event: \"select-request\"): void\n  (event: \"drag-request\", payload: DataTransfer): void\n  (event: \"update-request-order\", payload: DataTransfer): void\n  (event: \"update-last-request-order\", payload: DataTransfer): void\n}>()\n\nconst tippyActions = ref<TippyComponent | null>(null)\nconst edit = ref<HTMLButtonElement | null>(null)\nconst deleteAction = ref<HTMLButtonElement | null>(null)\nconst options = ref<TippyComponent | null>(null)\nconst duplicate = ref<HTMLButtonElement | null>(null)\n\nconst dragging = ref(false)\nconst ordering = ref(false)\nconst orderingLastItem = ref(false)\n\nconst currentReorderingStatus = useReadonlyStream(currentReorderingStatus$, {\n  type: \"collection\",\n  id: \"\",\n  parentID: \"\",\n})\n\nconst requestLabelColor = computed(() =>\n  getMethodLabelColorClassOf(props.request)\n)\n\nwatch(\n  () => props.duplicateLoading,\n  (val) => {\n    if (!val) {\n      options.value!.tippy.hide()\n    }\n  }\n)\n\nconst selectRequest = () => {\n  emit(\"select-request\")\n}\n\nconst dragStart = ({ dataTransfer }: DragEvent) => {\n  if (dataTransfer) {\n    emit(\"drag-request\", dataTransfer)\n    dragging.value = !dragging.value\n    changeCurrentReorderStatus({\n      type: \"request\",\n      id: props.requestID,\n      parentID: props.parentID,\n    })\n  }\n}\n\nconst isSameRequest = computed(() => {\n  return currentReorderingStatus.value.id === props.requestID\n})\n\nconst isCollectionDragging = computed(() => {\n  return currentReorderingStatus.value.type === \"collection\"\n})\n\nconst isSameParent = computed(() => {\n  return currentReorderingStatus.value.parentID === props.parentID\n})\n\nconst isReorderable = computed(() => {\n  return (\n    ordering.value &&\n    !isCollectionDragging.value &&\n    isSameParent.value &&\n    !isSameRequest.value\n  )\n})\n\nconst isLastItemReorderable = computed(() => {\n  return (\n    orderingLastItem.value && isSameParent.value && !isCollectionDragging.value\n  )\n})\n\n// Trigger the re-ordering event when a request is dragged over another request's top section\nconst handleDragOver = (e: DragEvent) => {\n  dragging.value = true\n  if (e.offsetY < 10) {\n    ordering.value = true\n    dragging.value = false\n    orderingLastItem.value = false\n  } else if (e.offsetY > 18) {\n    orderingLastItem.value = true\n    dragging.value = false\n    ordering.value = false\n  } else {\n    ordering.value = false\n    orderingLastItem.value = false\n  }\n}\n\nconst handelDrop = (e: DragEvent) => {\n  if (ordering.value) {\n    updateRequestOrder(e)\n  } else if (orderingLastItem.value) {\n    updateLastItemOrder(e)\n  } else {\n    updateRequestOrder(e)\n  }\n}\n\nconst updateRequestOrder = (e: DragEvent) => {\n  if (e.dataTransfer) {\n    e.stopPropagation()\n    resetDragState()\n    emit(\"update-request-order\", e.dataTransfer)\n  }\n}\n\nconst updateLastItemOrder = (e: DragEvent) => {\n  if (e.dataTransfer) {\n    e.stopPropagation()\n    resetDragState()\n    emit(\"update-last-request-order\", e.dataTransfer)\n  }\n}\n\nconst isRequestLoading = computed(() => {\n  if (props.requestMoveLoading.length > 0 && props.requestID) {\n    return props.requestMoveLoading.includes(props.requestID)\n  } else {\n    return false\n  }\n})\n\nconst resetDragState = () => {\n  dragging.value = false\n  ordering.value = false\n  orderingLastItem.value = false\n}\n</script>\n","<template>\n  <div class=\"flex flex-col\">\n    <div\n      class=\"h-1 w-full transition\"\n      :class=\"[\n        {\n          'bg-accentDark': isReorderable,\n        },\n      ]\"\n      @drop=\"orderUpdateCollectionEvent\"\n      @dragover.prevent=\"ordering = true\"\n      @dragleave=\"ordering = false\"\n      @dragend=\"resetDragState\"\n    ></div>\n    <div class=\"flex flex-col relative\">\n      <div\n        class=\"absolute bg-accent opacity-0 pointer-events-none inset-0 z-1 transition\"\n        :class=\"{\n          'opacity-25':\n            dragging && notSameDestination && notSameParentDestination,\n        }\"\n      ></div>\n      <div\n        class=\"flex items-stretch group relative z-3 cursor-pointer pointer-events-auto\"\n        :draggable=\"!hasNoTeamAccess\"\n        @dragstart=\"dragStart\"\n        @drop=\"handelDrop($event)\"\n        @dragover=\"handleDragOver($event)\"\n        @dragleave=\"resetDragState\"\n        @dragend=\"\n          () => {\n            resetDragState()\n            dropItemID = ''\n          }\n        \"\n        @contextmenu.prevent=\"options?.tippy.show()\"\n      >\n        <div\n          class=\"flex items-center justify-center flex-1 min-w-0\"\n          @click=\"emit('toggle-children')\"\n        >\n          <span\n            class=\"flex items-center justify-center px-4 pointer-events-none\"\n          >\n            <HoppSmartSpinner v-if=\"isCollLoading\" />\n            <component\n              :is=\"collectionIcon\"\n              v-else\n              class=\"svg-icons\"\n              :class=\"{ 'text-accent': isSelected }\"\n            />\n          </span>\n          <span\n            class=\"flex flex-1 min-w-0 py-2 pr-2 transition pointer-events-none group-hover:text-secondaryDark\"\n          >\n            <span class=\"truncate\" :class=\"{ 'text-accent': isSelected }\">\n              {{ collectionName }}\n            </span>\n          </span>\n        </div>\n        <div v-if=\"!hasNoTeamAccess\" class=\"flex\">\n          <HoppButtonSecondary\n            v-tippy=\"{ theme: 'tooltip' }\"\n            :icon=\"IconFilePlus\"\n            :title=\"t('request.new')\"\n            class=\"hidden group-hover:inline-flex\"\n            @click=\"emit('add-request')\"\n          />\n          <HoppButtonSecondary\n            v-tippy=\"{ theme: 'tooltip' }\"\n            :icon=\"IconFolderPlus\"\n            :title=\"t('folder.new')\"\n            class=\"hidden group-hover:inline-flex\"\n            @click=\"emit('add-folder')\"\n          />\n          <span>\n            <tippy\n              ref=\"options\"\n              interactive\n              trigger=\"click\"\n              theme=\"popover\"\n              :on-shown=\"() => tippyActions!.focus()\"\n            >\n              <HoppButtonSecondary\n                v-tippy=\"{ theme: 'tooltip' }\"\n                :title=\"t('action.more')\"\n                :icon=\"IconMoreVertical\"\n              />\n              <template #content=\"{ hide }\">\n                <div\n                  ref=\"tippyActions\"\n                  class=\"flex flex-col focus:outline-none\"\n                  tabindex=\"0\"\n                  @keyup.r=\"requestAction?.$el.click()\"\n                  @keyup.n=\"folderAction?.$el.click()\"\n                  @keyup.e=\"edit?.$el.click()\"\n                  @keyup.delete=\"deleteAction?.$el.click()\"\n                  @keyup.x=\"exportAction?.$el.click()\"\n                  @keyup.escape=\"hide()\"\n                >\n                  <HoppSmartItem\n                    ref=\"requestAction\"\n                    :icon=\"IconFilePlus\"\n                    :label=\"t('request.new')\"\n                    :shortcut=\"['R']\"\n                    @click=\"\n                      () => {\n                        emit('add-request')\n                        hide()\n                      }\n                    \"\n                  />\n                  <HoppSmartItem\n                    ref=\"folderAction\"\n                    :icon=\"IconFolderPlus\"\n                    :label=\"t('folder.new')\"\n                    :shortcut=\"['N']\"\n                    @click=\"\n                      () => {\n                        emit('add-folder')\n                        hide()\n                      }\n                    \"\n                  />\n                  <HoppSmartItem\n                    ref=\"edit\"\n                    :icon=\"IconEdit\"\n                    :label=\"t('action.edit')\"\n                    :shortcut=\"['E']\"\n                    @click=\"\n                      () => {\n                        emit('edit-collection')\n                        hide()\n                      }\n                    \"\n                  />\n                  <HoppSmartItem\n                    ref=\"exportAction\"\n                    :icon=\"IconDownload\"\n                    :label=\"t('export.title')\"\n                    :shortcut=\"['X']\"\n                    :loading=\"exportLoading\"\n                    @click=\"\n                      () => {\n                        emit('export-data'),\n                          collectionsType === 'my-collections' ? hide() : null\n                      }\n                    \"\n                  />\n                  <HoppSmartItem\n                    ref=\"deleteAction\"\n                    :icon=\"IconTrash2\"\n                    :label=\"t('action.delete')\"\n                    :shortcut=\"['⌫']\"\n                    @click=\"\n                      () => {\n                        emit('remove-collection')\n                        hide()\n                      }\n                    \"\n                  />\n                </div>\n              </template>\n            </tippy>\n          </span>\n        </div>\n      </div>\n    </div>\n    <div\n      v-if=\"isLastItem\"\n      class=\"w-full transition\"\n      :class=\"[\n        {\n          'bg-accentDark': isLastItemReorderable,\n          'h-1 ': isLastItem,\n        },\n      ]\"\n      @drop=\"updateLastItemOrder\"\n      @dragover.prevent=\"orderingLastItem = true\"\n      @dragleave=\"orderingLastItem = false\"\n      @dragend=\"resetDragState\"\n    ></div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport IconCheckCircle from \"~icons/lucide/check-circle\"\nimport IconFolderPlus from \"~icons/lucide/folder-plus\"\nimport IconFilePlus from \"~icons/lucide/file-plus\"\nimport IconMoreVertical from \"~icons/lucide/more-vertical\"\nimport IconDownload from \"~icons/lucide/download\"\nimport IconTrash2 from \"~icons/lucide/trash-2\"\nimport IconEdit from \"~icons/lucide/edit\"\nimport IconFolder from \"~icons/lucide/folder\"\nimport IconFolderOpen from \"~icons/lucide/folder-open\"\nimport { PropType, ref, computed, watch } from \"vue\"\nimport { HoppCollection, HoppRESTRequest } from \"@hoppscotch/data\"\nimport { useI18n } from \"@composables/i18n\"\nimport { TippyComponent } from \"vue-tippy\"\nimport { TeamCollection } from \"~/helpers/teams/TeamCollection\"\nimport {\n  changeCurrentReorderStatus,\n  currentReorderingStatus$,\n} from \"~/newstore/reordering\"\nimport { useReadonlyStream } from \"~/composables/stream\"\n\ntype CollectionType = \"my-collections\" | \"team-collections\"\ntype FolderType = \"collection\" | \"folder\"\n\nconst t = useI18n()\n\nconst props = defineProps({\n  id: {\n    type: String,\n    default: \"\",\n    required: true,\n  },\n  parentID: {\n    type: String as PropType<string | null>,\n    default: null,\n    required: false,\n  },\n  data: {\n    type: Object as PropType<HoppCollection<HoppRESTRequest> | TeamCollection>,\n    default: () => ({}),\n    required: true,\n  },\n  collectionsType: {\n    type: String as PropType<CollectionType>,\n    default: \"my-collections\",\n    required: true,\n  },\n  /**\n   * Collection component can be used for both collections and folders.\n   * folderType is used to determine which one it is.\n   */\n  folderType: {\n    type: String as PropType<FolderType>,\n    default: \"collection\",\n    required: true,\n  },\n  isOpen: {\n    type: Boolean,\n    default: false,\n    required: true,\n  },\n  isSelected: {\n    type: Boolean as PropType<boolean | null>,\n    default: false,\n    required: false,\n  },\n  exportLoading: {\n    type: Boolean,\n    default: false,\n    required: false,\n  },\n  hasNoTeamAccess: {\n    type: Boolean,\n    default: false,\n    required: false,\n  },\n  collectionMoveLoading: {\n    type: Array as PropType<string[]>,\n    default: () => [],\n    required: false,\n  },\n  isLastItem: {\n    type: Boolean,\n    default: false,\n    required: false,\n  },\n})\n\nconst emit = defineEmits<{\n  (event: \"toggle-children\"): void\n  (event: \"add-request\"): void\n  (event: \"add-folder\"): void\n  (event: \"edit-collection\"): void\n  (event: \"export-data\"): void\n  (event: \"remove-collection\"): void\n  (event: \"drop-event\", payload: DataTransfer): void\n  (event: \"drag-event\", payload: DataTransfer): void\n  (event: \"dragging\", payload: boolean): void\n  (event: \"update-collection-order\", payload: DataTransfer): void\n  (event: \"update-last-collection-order\", payload: DataTransfer): void\n}>()\n\nconst tippyActions = ref<TippyComponent | null>(null)\nconst requestAction = ref<HTMLButtonElement | null>(null)\nconst folderAction = ref<HTMLButtonElement | null>(null)\nconst edit = ref<HTMLButtonElement | null>(null)\nconst deleteAction = ref<HTMLButtonElement | null>(null)\nconst exportAction = ref<HTMLButtonElement | null>(null)\nconst options = ref<TippyComponent | null>(null)\n\nconst dragging = ref(false)\nconst ordering = ref(false)\nconst orderingLastItem = ref(false)\nconst dropItemID = ref(\"\")\n\nconst currentReorderingStatus = useReadonlyStream(currentReorderingStatus$, {\n  type: \"collection\",\n  id: \"\",\n  parentID: \"\",\n})\n\n// Used to determine if the collection is being dragged to a different destination\n// This is used to make the highlight effect work\nwatch(\n  () => dragging.value,\n  (val) => {\n    if (val && notSameDestination.value && notSameParentDestination.value) {\n      emit(\"dragging\", true)\n    } else {\n      emit(\"dragging\", false)\n    }\n  }\n)\n\nconst collectionIcon = computed(() => {\n  if (props.isSelected) return IconCheckCircle\n  else if (!props.isOpen) return IconFolder\n  else if (props.isOpen) return IconFolderOpen\n  else return IconFolder\n})\n\nconst collectionName = computed(() => {\n  if ((props.data as HoppCollection<HoppRESTRequest>).name)\n    return (props.data as HoppCollection<HoppRESTRequest>).name\n  else return (props.data as TeamCollection).title\n})\n\nwatch(\n  () => props.exportLoading,\n  (val) => {\n    if (!val) {\n      options.value!.tippy.hide()\n    }\n  }\n)\n\nconst notSameParentDestination = computed(() => {\n  return currentReorderingStatus.value.parentID !== props.id\n})\n\nconst isRequestDragging = computed(() => {\n  return currentReorderingStatus.value.type === \"request\"\n})\n\nconst isSameParent = computed(() => {\n  return currentReorderingStatus.value.parentID === props.parentID\n})\n\nconst isReorderable = computed(() => {\n  return (\n    ordering.value &&\n    notSameDestination.value &&\n    !isRequestDragging.value &&\n    isSameParent.value\n  )\n})\nconst isLastItemReorderable = computed(() => {\n  return (\n    orderingLastItem.value &&\n    notSameDestination.value &&\n    !isRequestDragging.value &&\n    isSameParent.value\n  )\n})\n\nconst dragStart = ({ dataTransfer }: DragEvent) => {\n  if (dataTransfer) {\n    emit(\"drag-event\", dataTransfer)\n    dropItemID.value = dataTransfer.getData(\"collectionIndex\")\n    dragging.value = !dragging.value\n    changeCurrentReorderStatus({\n      type: \"collection\",\n      id: props.id,\n      parentID: props.parentID,\n    })\n  }\n}\n\n// Trigger the re-ordering event when a collection is dragged over another collection's top section\nconst handleDragOver = (e: DragEvent) => {\n  dragging.value = true\n  if (\n    e.offsetY < 10 &&\n    notSameDestination.value &&\n    !isRequestDragging.value &&\n    isSameParent.value\n  ) {\n    ordering.value = true\n    dragging.value = false\n    orderingLastItem.value = false\n  } else if (\n    e.offsetY > 18 &&\n    notSameDestination.value &&\n    !isRequestDragging.value &&\n    isSameParent.value &&\n    props.isLastItem\n  ) {\n    orderingLastItem.value = true\n    dragging.value = false\n    ordering.value = false\n  } else {\n    ordering.value = false\n    orderingLastItem.value = false\n  }\n}\n\nconst handelDrop = (e: DragEvent) => {\n  if (ordering.value) {\n    orderUpdateCollectionEvent(e)\n  } else if (orderingLastItem.value) {\n    updateLastItemOrder(e)\n  } else {\n    notSameParentDestination.value ? dropEvent(e) : e.stopPropagation()\n  }\n}\n\nconst dropEvent = (e: DragEvent) => {\n  if (e.dataTransfer) {\n    e.stopPropagation()\n    emit(\"drop-event\", e.dataTransfer)\n    resetDragState()\n  }\n}\n\nconst orderUpdateCollectionEvent = (e: DragEvent) => {\n  if (e.dataTransfer) {\n    e.stopPropagation()\n    emit(\"update-collection-order\", e.dataTransfer)\n    resetDragState()\n  }\n}\n\nconst updateLastItemOrder = (e: DragEvent) => {\n  if (e.dataTransfer) {\n    e.stopPropagation()\n    emit(\"update-last-collection-order\", e.dataTransfer)\n    resetDragState()\n  }\n}\n\nconst notSameDestination = computed(() => {\n  return dropItemID.value !== props.id\n})\n\nconst isCollLoading = computed(() => {\n  if (props.collectionMoveLoading.length > 0 && props.data.id) {\n    return props.collectionMoveLoading.includes(props.data.id)\n  } else {\n    return false\n  }\n})\n\nconst resetDragState = () => {\n  dragging.value = false\n  ordering.value = false\n  orderingLastItem.value = false\n}\n</script>\n","<template>\n  <div class=\"flex flex-col flex-1\">\n    <div\n      class=\"sticky z-10 flex justify-between flex-1 border-b bg-primary border-dividerLight\"\n      :style=\"\n        saveRequest\n          ? 'top: calc(var(--upper-primary-sticky-fold) - var(--line-height-body))'\n          : 'top: var(--upper-primary-sticky-fold)'\n      \"\n    >\n      <HoppButtonSecondary\n        v-if=\"hasNoTeamAccess\"\n        v-tippy=\"{ theme: 'tooltip' }\"\n        disabled\n        class=\"!rounded-none\"\n        :icon=\"IconPlus\"\n        :title=\"t('team.no_access')\"\n        :label=\"t('action.new')\"\n      />\n      <HoppButtonSecondary\n        v-else\n        :icon=\"IconPlus\"\n        :label=\"t('action.new')\"\n        class=\"!rounded-none\"\n        @click=\"emit('display-modal-add')\"\n      />\n      <span class=\"flex\">\n        <HoppButtonSecondary\n          v-tippy=\"{ theme: 'tooltip' }\"\n          to=\"https://docs.hoppscotch.io/documentation/features/collections\"\n          blank\n          :title=\"t('app.wiki')\"\n          :icon=\"IconHelpCircle\"\n        />\n        <HoppButtonSecondary\n          v-if=\"!saveRequest\"\n          v-tippy=\"{ theme: 'tooltip' }\"\n          :disabled=\"\n            collectionsType.type === 'team-collections' &&\n            collectionsType.selectedTeam === undefined\n          \"\n          :icon=\"IconArchive\"\n          :title=\"t('modal.import_export')\"\n          @click=\"emit('display-modal-import-export')\"\n        />\n      </span>\n    </div>\n    <div class=\"flex flex-col overflow-hidden\">\n      <SmartTree :adapter=\"teamAdapter\">\n        <template\n          #content=\"{ node, toggleChildren, isOpen, highlightChildren }\"\n        >\n          <CollectionsCollection\n            v-if=\"node.data.type === 'collections'\"\n            :id=\"node.data.data.data.id\"\n            :parent-i-d=\"node.data.data.parentIndex\"\n            :data=\"node.data.data.data\"\n            :collections-type=\"collectionsType.type\"\n            :is-open=\"isOpen\"\n            :export-loading=\"exportLoading\"\n            :has-no-team-access=\"hasNoTeamAccess\"\n            :collection-move-loading=\"collectionMoveLoading\"\n            :is-last-item=\"node.data.isLastItem\"\n            :is-selected=\"\n              isSelected({\n                collectionID: node.id,\n              })\n            \"\n            folder-type=\"collection\"\n            @add-request=\"\n              node.data.type === 'collections' &&\n                emit('add-request', {\n                  path: node.id,\n                  folder: node.data.data.data,\n                })\n            \"\n            @add-folder=\"\n              node.data.type === 'collections' &&\n                emit('add-folder', {\n                  path: node.id,\n                  folder: node.data.data.data,\n                })\n            \"\n            @edit-collection=\"\n              node.data.type === 'collections' &&\n                emit('edit-collection', {\n                  collectionIndex: node.id,\n                  collection: node.data.data.data,\n                })\n            \"\n            @export-data=\"\n              node.data.type === 'collections' &&\n                emit('export-data', node.data.data.data)\n            \"\n            @remove-collection=\"emit('remove-collection', node.id)\"\n            @drop-event=\"dropEvent($event, node.id)\"\n            @drag-event=\"dragEvent($event, node.id)\"\n            @update-collection-order=\"\n              updateCollectionOrder($event, {\n                destinationCollectionIndex: node.data.data.data.id,\n                destinationCollectionParentIndex: node.data.data.parentIndex,\n              })\n            \"\n            @update-last-collection-order=\"\n              updateCollectionOrder($event, {\n                destinationCollectionIndex: null,\n                destinationCollectionParentIndex: node.data.data.parentIndex,\n              })\n            \"\n            @dragging=\"\n              (isDraging) =>\n                highlightChildren(isDraging ? node.data.data.data.id : null)\n            \"\n            @toggle-children=\"\n              () => {\n                toggleChildren(),\n                  saveRequest &&\n                    emit('select', {\n                      pickedType: 'teams-collection',\n                      collectionID: node.id,\n                    })\n              }\n            \"\n          />\n          <CollectionsCollection\n            v-if=\"node.data.type === 'folders'\"\n            :id=\"node.data.data.data.id\"\n            :parent-i-d=\"node.data.data.parentIndex\"\n            :data=\"node.data.data.data\"\n            :collections-type=\"collectionsType.type\"\n            :is-open=\"isOpen\"\n            :export-loading=\"exportLoading\"\n            :has-no-team-access=\"hasNoTeamAccess\"\n            :collection-move-loading=\"collectionMoveLoading\"\n            :is-last-item=\"node.data.isLastItem\"\n            :is-selected=\"\n              isSelected({\n                folderID: node.data.data.data.id,\n              })\n            \"\n            folder-type=\"folder\"\n            @add-request=\"\n              node.data.type === 'folders' &&\n                emit('add-request', {\n                  path: node.id,\n                  folder: node.data.data.data,\n                })\n            \"\n            @add-folder=\"\n              node.data.type === 'folders' &&\n                emit('add-folder', {\n                  path: node.id,\n                  folder: node.data.data.data,\n                })\n            \"\n            @edit-collection=\"\n              node.data.type === 'folders' &&\n                emit('edit-folder', {\n                  folder: node.data.data.data,\n                })\n            \"\n            @export-data=\"\n              node.data.type === 'folders' &&\n                emit('export-data', node.data.data.data)\n            \"\n            @remove-collection=\"\n              node.data.type === 'folders' &&\n                emit('remove-folder', node.data.data.data.id)\n            \"\n            @drop-event=\"dropEvent($event, node.data.data.data.id)\"\n            @drag-event=\"dragEvent($event, node.data.data.data.id)\"\n            @update-collection-order=\"\n              updateCollectionOrder($event, {\n                destinationCollectionIndex: node.data.data.data.id,\n                destinationCollectionParentIndex: node.data.data.parentIndex,\n              })\n            \"\n            @update-last-collection-order=\"\n              updateCollectionOrder($event, {\n                destinationCollectionIndex: null,\n                destinationCollectionParentIndex: node.data.data.parentIndex,\n              })\n            \"\n            @dragging=\"\n              (isDraging) =>\n                highlightChildren(isDraging ? node.data.data.data.id : null)\n            \"\n            @toggle-children=\"\n              () => {\n                toggleChildren(),\n                  saveRequest &&\n                    emit('select', {\n                      pickedType: 'teams-folder',\n                      folderID: node.data.data.data.id,\n                    })\n              }\n            \"\n          />\n          <CollectionsRequest\n            v-if=\"node.data.type === 'requests'\"\n            :request=\"node.data.data.data.request\"\n            :request-i-d=\"node.data.data.data.id\"\n            :parent-i-d=\"node.data.data.parentIndex\"\n            :collections-type=\"collectionsType.type\"\n            :duplicate-loading=\"duplicateLoading\"\n            :is-active=\"isActiveRequest(node.data.data.data.id)\"\n            :has-no-team-access=\"hasNoTeamAccess\"\n            :request-move-loading=\"requestMoveLoading\"\n            :is-last-item=\"node.data.isLastItem\"\n            :is-selected=\"\n              isSelected({\n                requestID: node.data.data.data.id,\n              })\n            \"\n            @edit-request=\"\n              node.data.type === 'requests' &&\n                emit('edit-request', {\n                  requestIndex: node.data.data.data.id,\n                  request: node.data.data.data.request,\n                })\n            \"\n            @duplicate-request=\"\n              node.data.type === 'requests' &&\n                emit('duplicate-request', {\n                  folderPath: node.data.data.parentIndex,\n                  request: node.data.data.data.request,\n                })\n            \"\n            @remove-request=\"\n              node.data.type === 'requests' &&\n                emit('remove-request', {\n                  folderPath: null,\n                  requestIndex: node.data.data.data.id,\n                })\n            \"\n            @select-request=\"\n              node.data.type === 'requests' &&\n                selectRequest({\n                  request: node.data.data.data.request,\n                  requestIndex: node.data.data.data.id,\n                })\n            \"\n            @drag-request=\"\n              dragRequest($event, {\n                folderPath: node.data.data.parentIndex,\n                requestIndex: node.data.data.data.id,\n              })\n            \"\n            @update-request-order=\"\n              updateRequestOrder($event, {\n                folderPath: node.data.data.parentIndex,\n                requestIndex: node.data.data.data.id,\n              })\n            \"\n            @update-last-request-order=\"\n              updateRequestOrder($event, {\n                folderPath: node.data.data.parentIndex,\n                requestIndex: null,\n              })\n            \"\n          />\n        </template>\n        <template #emptyNode=\"{ node }\">\n          <div v-if=\"node === null\">\n            <div\n              class=\"flex flex-col items-center justify-center p-4 text-secondaryLight\"\n              @drop=\"(e) => e.stopPropagation()\"\n            >\n              <img\n                :src=\"`/images/states/${colorMode.value}/pack.svg`\"\n                loading=\"lazy\"\n                class=\"inline-flex flex-col object-contain object-center w-16 h-16 mb-4\"\n                :alt=\"`${t('empty.collection')}`\"\n              />\n              <span class=\"pb-4 text-center\">\n                {{ t(\"empty.collections\") }}\n              </span>\n              <HoppButtonSecondary\n                v-if=\"hasNoTeamAccess\"\n                v-tippy=\"{ theme: 'tooltip' }\"\n                disabled\n                filled\n                outline\n                :title=\"t('team.no_access')\"\n                :label=\"t('action.new')\"\n              />\n              <HoppButtonSecondary\n                v-else\n                :icon=\"IconPlus\"\n                :label=\"t('action.new')\"\n                filled\n                outline\n                @click=\"emit('display-modal-add')\"\n              />\n            </div>\n          </div>\n          <div\n            v-else-if=\"node.data.type === 'collections'\"\n            class=\"flex flex-col items-center justify-center p-4 text-secondaryLight\"\n            @drop=\"(e) => e.stopPropagation()\"\n          >\n            <img\n              :src=\"`/images/states/${colorMode.value}/pack.svg`\"\n              loading=\"lazy\"\n              class=\"inline-flex flex-col object-contain object-center w-16 h-16 mb-4\"\n              :alt=\"`${t('empty.collection')}`\"\n            />\n            <span class=\"pb-4 text-center\">\n              {{ t(\"empty.collections\") }}\n            </span>\n          </div>\n          <div\n            v-else-if=\"node.data.type === 'folders'\"\n            class=\"flex flex-col items-center justify-center p-4 text-secondaryLight\"\n            @drop=\"(e) => e.stopPropagation()\"\n          >\n            <img\n              :src=\"`/images/states/${colorMode.value}/pack.svg`\"\n              loading=\"lazy\"\n              class=\"inline-flex flex-col object-contain object-center w-16 h-16 mb-4\"\n              :alt=\"`${t('empty.folder')}`\"\n            />\n            <span class=\"text-center\">\n              {{ t(\"empty.folder\") }}\n            </span>\n          </div>\n        </template>\n      </SmartTree>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport IconArchive from \"~icons/lucide/archive\"\nimport IconPlus from \"~icons/lucide/plus\"\nimport IconHelpCircle from \"~icons/lucide/help-circle\"\nimport { computed, PropType, Ref, toRef } from \"vue\"\nimport { GetMyTeamsQuery } from \"~/helpers/backend/graphql\"\nimport { useI18n } from \"@composables/i18n\"\nimport { useColorMode } from \"@composables/theming\"\nimport { TeamCollection } from \"~/helpers/teams/TeamCollection\"\nimport { TeamRequest } from \"~/helpers/teams/TeamRequest\"\nimport { ChildrenResult, SmartTreeAdapter } from \"~/helpers/treeAdapter\"\nimport { cloneDeep } from \"lodash-es\"\nimport { HoppRESTRequest } from \"@hoppscotch/data\"\nimport { pipe } from \"fp-ts/function\"\nimport * as O from \"fp-ts/Option\"\nimport { Picked } from \"~/helpers/types/HoppPicked.js\"\nimport { currentActiveTab } from \"~/helpers/rest/tab\"\n\nconst t = useI18n()\nconst colorMode = useColorMode()\n\ntype SelectedTeam = GetMyTeamsQuery[\"myTeams\"][number] | undefined\n\ntype CollectionType =\n  | {\n      type: \"team-collections\"\n      selectedTeam: SelectedTeam\n    }\n  | { type: \"my-collections\"; selectedTeam: undefined }\n\nconst props = defineProps({\n  collectionsType: {\n    type: Object as PropType<CollectionType>,\n    default: () => ({ type: \"my-collections\", selectedTeam: undefined }),\n    required: true,\n  },\n  teamCollectionList: {\n    type: Array as PropType<TeamCollection[]>,\n    default: () => [],\n    required: true,\n  },\n  teamLoadingCollections: {\n    type: Array as PropType<string[]>,\n    default: () => [],\n    required: true,\n  },\n  saveRequest: {\n    type: Boolean,\n    default: false,\n    required: false,\n  },\n  exportLoading: {\n    type: Boolean,\n    default: false,\n    required: false,\n  },\n  duplicateLoading: {\n    type: Boolean,\n    default: false,\n    required: false,\n  },\n  picked: {\n    type: Object as PropType<Picked | null>,\n    default: null,\n    required: false,\n  },\n  collectionMoveLoading: {\n    type: Array as PropType<string[]>,\n    default: () => [],\n    required: false,\n  },\n  requestMoveLoading: {\n    type: Array as PropType<string[]>,\n    default: () => [],\n    required: false,\n  },\n})\n\nconst emit = defineEmits<{\n  (\n    event: \"add-request\",\n    payload: {\n      path: string\n      folder: TeamCollection\n    }\n  ): void\n  (\n    event: \"add-folder\",\n    payload: {\n      path: string\n      folder: TeamCollection\n    }\n  ): void\n  (\n    event: \"edit-collection\",\n    payload: {\n      collectionIndex: string\n      collection: TeamCollection\n    }\n  ): void\n  (\n    event: \"edit-folder\",\n    payload: {\n      folder: TeamCollection\n    }\n  ): void\n  (\n    event: \"edit-request\",\n    payload: {\n      requestIndex: string\n      request: HoppRESTRequest\n    }\n  ): void\n  (\n    event: \"duplicate-request\",\n    payload: {\n      folderPath: string\n      request: HoppRESTRequest\n    }\n  ): void\n  (event: \"export-data\", payload: TeamCollection): void\n  (event: \"remove-collection\", payload: string): void\n  (event: \"remove-folder\", payload: string): void\n  (\n    event: \"remove-request\",\n    payload: {\n      folderPath: string | null\n      requestIndex: string\n    }\n  ): void\n  (\n    event: \"select-request\",\n    payload: {\n      request: HoppRESTRequest\n      requestIndex: string\n      isActive: boolean\n      folderPath?: string | undefined\n    }\n  ): void\n  (\n    event: \"drop-request\",\n    payload: {\n      folderPath: string\n      requestIndex: string\n      destinationCollectionIndex: string\n    }\n  ): void\n  (\n    event: \"drop-collection\",\n    payload: {\n      collectionIndexDragged: string\n      destinationCollectionIndex: string\n    }\n  ): void\n  (\n    event: \"update-request-order\",\n    payload: {\n      dragedRequestIndex: string\n      destinationRequestIndex: string | null\n      destinationCollectionIndex: string\n    }\n  ): void\n  (\n    event: \"update-collection-order\",\n    payload: {\n      dragedCollectionIndex: string\n      destinationCollection: {\n        destinationCollectionIndex: string | null\n        destinationCollectionParentIndex: string | null\n      }\n    }\n  ): void\n  (event: \"select\", payload: Picked | null): void\n  (event: \"expand-team-collection\", payload: string): void\n  (event: \"display-modal-add\"): void\n  (event: \"display-modal-import-export\"): void\n}>()\n\nconst teamCollectionsList = toRef(props, \"teamCollectionList\")\n\nconst hasNoTeamAccess = computed(\n  () =>\n    props.collectionsType.type === \"team-collections\" &&\n    (props.collectionsType.selectedTeam === undefined ||\n      props.collectionsType.selectedTeam.myRole === \"VIEWER\")\n)\n\nconst isSelected = ({\n  collectionID,\n  folderID,\n  requestID,\n}: {\n  collectionID?: string | undefined\n  folderID?: string | undefined\n  requestID?: string | undefined\n}) => {\n  if (collectionID !== undefined) {\n    return (\n      props.picked &&\n      props.picked.pickedType === \"teams-collection\" &&\n      props.picked.collectionID === collectionID\n    )\n  } else if (requestID !== undefined) {\n    return (\n      props.picked &&\n      props.picked.pickedType === \"teams-request\" &&\n      props.picked.requestID === requestID\n    )\n  } else {\n    return (\n      props.picked &&\n      props.picked.pickedType === \"teams-folder\" &&\n      props.picked.folderID === folderID\n    )\n  }\n}\n\nconst active = computed(() => currentActiveTab.value.document.saveContext)\n\nconst isActiveRequest = (requestID: string) => {\n  return pipe(\n    active.value,\n    O.fromNullable,\n    O.filter(\n      (active) =>\n        active.originLocation === \"team-collection\" &&\n        active.requestID === requestID\n    ),\n    O.isSome\n  )\n}\n\nconst selectRequest = (data: {\n  request: HoppRESTRequest\n  requestIndex: string\n}) => {\n  const { request, requestIndex } = data\n  if (props.saveRequest) {\n    emit(\"select\", {\n      pickedType: \"teams-request\",\n      requestID: requestIndex,\n    })\n  } else {\n    emit(\"select-request\", {\n      request: request,\n      requestIndex: requestIndex,\n      isActive: isActiveRequest(requestIndex),\n    })\n  }\n}\n\nconst dragRequest = (\n  dataTransfer: DataTransfer,\n  {\n    folderPath,\n    requestIndex,\n  }: { folderPath: string | null; requestIndex: string }\n) => {\n  if (!folderPath) return\n  dataTransfer.setData(\"folderPath\", folderPath)\n  dataTransfer.setData(\"requestIndex\", requestIndex)\n}\n\nconst dragEvent = (dataTransfer: DataTransfer, collectionIndex: string) => {\n  dataTransfer.setData(\"collectionIndex\", collectionIndex)\n}\n\nconst dropEvent = (\n  dataTransfer: DataTransfer,\n  destinationCollectionIndex: string\n) => {\n  const folderPath = dataTransfer.getData(\"folderPath\")\n  const requestIndex = dataTransfer.getData(\"requestIndex\")\n  const collectionIndexDragged = dataTransfer.getData(\"collectionIndex\")\n  if (folderPath && requestIndex) {\n    emit(\"drop-request\", {\n      folderPath,\n      requestIndex,\n      destinationCollectionIndex,\n    })\n  } else {\n    emit(\"drop-collection\", {\n      collectionIndexDragged,\n      destinationCollectionIndex,\n    })\n  }\n}\n\nconst updateRequestOrder = (\n  dataTransfer: DataTransfer,\n  {\n    folderPath,\n    requestIndex,\n  }: { folderPath: string | null; requestIndex: string | null }\n) => {\n  if (!folderPath) return\n  const dragedRequestIndex = dataTransfer.getData(\"requestIndex\")\n  const destinationRequestIndex = requestIndex\n  const destinationCollectionIndex = folderPath\n\n  emit(\"update-request-order\", {\n    dragedRequestIndex,\n    destinationRequestIndex,\n    destinationCollectionIndex,\n  })\n}\n\nconst updateCollectionOrder = (\n  dataTransfer: DataTransfer,\n  destinationCollection: {\n    destinationCollectionIndex: string | null\n    destinationCollectionParentIndex: string | null\n  }\n) => {\n  const dragedCollectionIndex = dataTransfer.getData(\"collectionIndex\")\n\n  emit(\"update-collection-order\", {\n    dragedCollectionIndex,\n    destinationCollection,\n  })\n}\n\ntype TeamCollections = {\n  isLastItem: boolean\n  type: \"collections\"\n  data: {\n    parentIndex: null\n    data: TeamCollection\n  }\n}\n\ntype TeamFolder = {\n  isLastItem: boolean\n  type: \"folders\"\n  data: {\n    parentIndex: string\n    data: TeamCollection\n  }\n}\n\ntype TeamRequests = {\n  isLastItem: boolean\n  type: \"requests\"\n  data: {\n    parentIndex: string\n    data: TeamRequest\n  }\n}\n\ntype TeamCollectionNode = TeamCollections | TeamFolder | TeamRequests\n\nclass TeamCollectionsAdapter implements SmartTreeAdapter<TeamCollectionNode> {\n  constructor(public data: Ref<TeamCollection[]>) {}\n\n  findCollInTree(\n    tree: TeamCollection[],\n    targetID: string\n  ): TeamCollection | null {\n    for (const coll of tree) {\n      // If the direct child matched, then return that\n      if (coll.id === targetID) return coll\n\n      // Else run it in the children\n      if (coll.children) {\n        const result = this.findCollInTree(coll.children, targetID)\n        if (result) return result\n      }\n    }\n\n    // If nothing matched, return null\n    return null\n  }\n\n  getChildren(id: string | null): Ref<ChildrenResult<TeamCollectionNode>> {\n    return computed(() => {\n      if (id === null) {\n        if (props.teamLoadingCollections.includes(\"root\")) {\n          return {\n            status: \"loading\",\n          }\n        } else {\n          const data = this.data.value.map((item, index) => ({\n            id: item.id,\n            data: {\n              isLastItem: index === this.data.value.length - 1,\n              type: \"collections\",\n              data: {\n                parentIndex: null,\n                data: item,\n              },\n            },\n          }))\n          return {\n            status: \"loaded\",\n            data: cloneDeep(data),\n          } as ChildrenResult<TeamCollections>\n        }\n      } else {\n        const parsedID = id.split(\"/\")[id.split(\"/\").length - 1]\n\n        !props.teamLoadingCollections.includes(parsedID) &&\n          emit(\"expand-team-collection\", parsedID)\n\n        if (props.teamLoadingCollections.includes(parsedID)) {\n          return {\n            status: \"loading\",\n          }\n        } else {\n          const items = this.findCollInTree(this.data.value, parsedID)\n          if (items) {\n            const data = [\n              ...(items.children\n                ? items.children.map((item, index) => ({\n                    id: `${id}/${item.id}`,\n                    data: {\n                      isLastItem:\n                        items.children && items.children.length > 1\n                          ? index === items.children.length - 1\n                          : false,\n                      type: \"folders\",\n                      data: {\n                        parentIndex: parsedID,\n                        data: item,\n                      },\n                    },\n                  }))\n                : []),\n              ...(items.requests\n                ? items.requests.map((item, index) => ({\n                    id: `${id}/${item.id}`,\n                    data: {\n                      isLastItem:\n                        items.requests && items.requests.length > 1\n                          ? index === items.requests.length - 1\n                          : false,\n                      type: \"requests\",\n                      data: {\n                        parentIndex: parsedID,\n                        data: item,\n                      },\n                    },\n                  }))\n                : []),\n            ]\n            return {\n              status: \"loaded\",\n              data: cloneDeep(data),\n            } as ChildrenResult<TeamFolder | TeamRequests>\n          } else {\n            return {\n              status: \"loaded\",\n              data: [],\n            }\n          }\n        }\n      }\n    })\n  }\n}\n\nconst teamAdapter: SmartTreeAdapter<TeamCollectionNode> =\n  new TeamCollectionsAdapter(teamCollectionsList)\n</script>\n","<template>\n  <div class=\"flex flex-col flex-1\">\n    <div\n      class=\"sticky z-10 flex justify-between flex-1 border-b bg-primary border-dividerLight\"\n      :style=\"\n        saveRequest\n          ? 'top: calc(var(--upper-primary-sticky-fold) - var(--line-height-body))'\n          : 'top: var(--upper-primary-sticky-fold)'\n      \"\n    >\n      <HoppButtonSecondary\n        :icon=\"IconPlus\"\n        :label=\"t('action.new')\"\n        class=\"!rounded-none\"\n        @click=\"emit('display-modal-add')\"\n      />\n      <span class=\"flex\">\n        <HoppButtonSecondary\n          v-tippy=\"{ theme: 'tooltip' }\"\n          to=\"https://docs.hoppscotch.io/documentation/features/collections\"\n          blank\n          :title=\"t('app.wiki')\"\n          :icon=\"IconHelpCircle\"\n        />\n        <HoppButtonSecondary\n          v-if=\"!saveRequest\"\n          v-tippy=\"{ theme: 'tooltip' }\"\n          :icon=\"IconArchive\"\n          :title=\"t('modal.import_export')\"\n          @click=\"emit('display-modal-import-export')\"\n        />\n      </span>\n    </div>\n    <div class=\"flex flex-col flex-1\">\n      <SmartTree :adapter=\"myAdapter\">\n        <template\n          #content=\"{ node, toggleChildren, isOpen, highlightChildren }\"\n        >\n          <CollectionsCollection\n            v-if=\"node.data.type === 'collections'\"\n            :id=\"node.id\"\n            :parent-i-d=\"node.data.data.parentIndex\"\n            :data=\"node.data.data.data\"\n            :collections-type=\"collectionsType.type\"\n            :is-open=\"isOpen\"\n            :is-last-item=\"node.data.isLastItem\"\n            :is-selected=\"\n              isSelected({\n                collectionIndex: parseInt(node.id),\n              })\n            \"\n            folder-type=\"collection\"\n            @add-request=\"\n              node.data.type === 'collections' &&\n                emit('add-request', {\n                  path: node.id,\n                  folder: node.data.data.data,\n                })\n            \"\n            @add-folder=\"\n              node.data.type === 'collections' &&\n                emit('add-folder', {\n                  path: node.id,\n                  folder: node.data.data.data,\n                })\n            \"\n            @edit-collection=\"\n              node.data.type === 'collections' &&\n                emit('edit-collection', {\n                  collectionIndex: node.id,\n                  collection: node.data.data.data,\n                })\n            \"\n            @export-data=\"\n              node.data.type === 'collections' &&\n                emit('export-data', node.data.data.data)\n            \"\n            @remove-collection=\"emit('remove-collection', node.id)\"\n            @drop-event=\"dropEvent($event, node.id)\"\n            @drag-event=\"dragEvent($event, node.id)\"\n            @update-collection-order=\"\n              updateCollectionOrder($event, {\n                destinationCollectionIndex: node.id,\n                destinationCollectionParentIndex: node.data.data.parentIndex,\n              })\n            \"\n            @update-last-collection-order=\"\n              updateCollectionOrder($event, {\n                destinationCollectionIndex: null,\n                destinationCollectionParentIndex: node.data.data.parentIndex,\n              })\n            \"\n            @dragging=\"\n              (isDraging) => highlightChildren(isDraging ? node.id : null)\n            \"\n            @toggle-children=\"\n              () => {\n                toggleChildren(),\n                  saveRequest &&\n                    emit('select', {\n                      pickedType: 'my-collection',\n                      collectionIndex: parseInt(node.id),\n                    })\n              }\n            \"\n          />\n          <CollectionsCollection\n            v-if=\"node.data.type === 'folders'\"\n            :id=\"node.id\"\n            :parent-i-d=\"node.data.data.parentIndex\"\n            :data=\"node.data.data.data\"\n            :collections-type=\"collectionsType.type\"\n            :is-open=\"isOpen\"\n            :is-last-item=\"node.data.isLastItem\"\n            :is-selected=\"\n              isSelected({\n                folderPath: node.id,\n              })\n            \"\n            folder-type=\"folder\"\n            @add-request=\"\n              node.data.type === 'folders' &&\n                emit('add-request', {\n                  path: node.id,\n                  folder: node.data.data.data,\n                })\n            \"\n            @add-folder=\"\n              node.data.type === 'folders' &&\n                emit('add-folder', {\n                  path: node.id,\n                  folder: node.data.data.data,\n                })\n            \"\n            @edit-collection=\"\n              node.data.type === 'folders' &&\n                emit('edit-folder', {\n                  folderPath: node.id,\n                  folder: node.data.data.data,\n                })\n            \"\n            @export-data=\"\n              node.data.type === 'folders' &&\n                emit('export-data', node.data.data.data)\n            \"\n            @remove-collection=\"emit('remove-folder', node.id)\"\n            @drop-event=\"dropEvent($event, node.id)\"\n            @drag-event=\"dragEvent($event, node.id)\"\n            @update-collection-order=\"\n              updateCollectionOrder($event, {\n                destinationCollectionIndex: node.id,\n                destinationCollectionParentIndex: node.data.data.parentIndex,\n              })\n            \"\n            @update-last-collection-order=\"\n              updateCollectionOrder($event, {\n                destinationCollectionIndex: null,\n                destinationCollectionParentIndex: node.data.data.parentIndex,\n              })\n            \"\n            @dragging=\"\n              (isDraging) => highlightChildren(isDraging ? node.id : null)\n            \"\n            @toggle-children=\"\n              () => {\n                toggleChildren(),\n                  saveRequest &&\n                    emit('select', {\n                      pickedType: 'my-folder',\n                      folderPath: node.id,\n                    })\n              }\n            \"\n          />\n          <CollectionsRequest\n            v-if=\"node.data.type === 'requests'\"\n            :request=\"node.data.data.data\"\n            :request-i-d=\"node.id\"\n            :parent-i-d=\"node.data.data.parentIndex\"\n            :collections-type=\"collectionsType.type\"\n            :save-request=\"saveRequest\"\n            :is-last-item=\"node.data.isLastItem\"\n            :is-active=\"\n              isActiveRequest(\n                node.data.data.parentIndex,\n                parseInt(pathToIndex(node.id))\n              )\n            \"\n            :is-selected=\"\n              isSelected({\n                folderPath: node.data.data.parentIndex,\n                requestIndex: parseInt(pathToIndex(node.id)),\n              })\n            \"\n            @edit-request=\"\n              node.data.type === 'requests' &&\n                emit('edit-request', {\n                  folderPath: node.data.data.parentIndex,\n                  requestIndex: pathToIndex(node.id),\n                  request: node.data.data.data,\n                })\n            \"\n            @duplicate-request=\"\n              node.data.type === 'requests' &&\n                emit('duplicate-request', {\n                  folderPath: node.data.data.parentIndex,\n                  request: node.data.data.data,\n                })\n            \"\n            @remove-request=\"\n              node.data.type === 'requests' &&\n                emit('remove-request', {\n                  folderPath: node.data.data.parentIndex,\n                  requestIndex: pathToIndex(node.id),\n                })\n            \"\n            @select-request=\"\n              node.data.type === 'requests' &&\n                selectRequest({\n                  request: node.data.data.data,\n                  folderPath: node.data.data.parentIndex,\n                  requestIndex: pathToIndex(node.id),\n                })\n            \"\n            @drag-request=\"\n              dragRequest($event, {\n                folderPath: node.data.data.parentIndex,\n                requestIndex: node.id,\n              })\n            \"\n            @update-request-order=\"\n              updateRequestOrder($event, {\n                folderPath: node.data.data.parentIndex,\n                requestIndex: node.id,\n              })\n            \"\n            @update-last-request-order=\"\n              updateRequestOrder($event, {\n                folderPath: node.data.data.parentIndex,\n                requestIndex: null,\n              })\n            \"\n          />\n        </template>\n        <template #emptyNode=\"{ node }\">\n          <div\n            v-if=\"filterText.length !== 0 && filteredCollections.length === 0\"\n            class=\"flex flex-col items-center justify-center p-4 text-secondaryLight\"\n          >\n            <icon-lucide-search class=\"pb-2 opacity-75 svg-icons\" />\n            <span class=\"my-2 text-center\">\n              {{ t(\"state.nothing_found\") }} \"{{ filterText }}\"\n            </span>\n          </div>\n          <div v-else-if=\"node === null\">\n            <div\n              class=\"flex flex-col items-center justify-center p-4 text-secondaryLight\"\n            >\n              <img\n                :src=\"`/images/states/${colorMode.value}/pack.svg`\"\n                loading=\"lazy\"\n                class=\"inline-flex flex-col object-contain object-center w-16 h-16 mb-4\"\n                :alt=\"`${t('empty.collections')}`\"\n              />\n              <span class=\"pb-4 text-center\">\n                {{ t(\"empty.collections\") }}\n              </span>\n              <HoppButtonSecondary\n                :label=\"t('add.new')\"\n                filled\n                outline\n                @click=\"emit('display-modal-add')\"\n              />\n            </div>\n          </div>\n          <div\n            v-else-if=\"node.data.type === 'collections'\"\n            class=\"flex flex-col items-center justify-center p-4 text-secondaryLight\"\n          >\n            <img\n              :src=\"`/images/states/${colorMode.value}/pack.svg`\"\n              loading=\"lazy\"\n              class=\"inline-flex flex-col object-contain object-center w-16 h-16 mb-4\"\n              :alt=\"`${t('empty.collection')}`\"\n            />\n            <span class=\"pb-4 text-center\">\n              {{ t(\"empty.collection\") }}\n            </span>\n            <HoppButtonSecondary\n              :label=\"t('add.new')\"\n              filled\n              outline\n              @click=\"\n                node.data.type === 'collections' &&\n                  emit('add-folder', {\n                    path: node.id,\n                    folder: node.data.data.data,\n                  })\n              \"\n            />\n          </div>\n          <div\n            v-else-if=\"node.data.type === 'folders'\"\n            class=\"flex flex-col items-center justify-center p-4 text-secondaryLight\"\n          >\n            <img\n              :src=\"`/images/states/${colorMode.value}/pack.svg`\"\n              loading=\"lazy\"\n              class=\"inline-flex flex-col object-contain object-center w-16 h-16 mb-4\"\n              :alt=\"`${t('empty.folder')}`\"\n            />\n            <span class=\"text-center\">\n              {{ t(\"empty.folder\") }}\n            </span>\n          </div>\n        </template>\n      </SmartTree>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport IconArchive from \"~icons/lucide/archive\"\nimport IconPlus from \"~icons/lucide/plus\"\nimport IconHelpCircle from \"~icons/lucide/help-circle\"\nimport { HoppCollection, HoppRESTRequest } from \"@hoppscotch/data\"\nimport { computed, PropType, Ref, toRef } from \"vue\"\nimport { GetMyTeamsQuery } from \"~/helpers/backend/graphql\"\nimport { ChildrenResult, SmartTreeAdapter } from \"~/helpers/treeAdapter\"\nimport { useI18n } from \"@composables/i18n\"\nimport { useColorMode } from \"@composables/theming\"\nimport { pipe } from \"fp-ts/function\"\nimport * as O from \"fp-ts/Option\"\nimport { Picked } from \"~/helpers/types/HoppPicked.js\"\nimport { currentActiveTab } from \"~/helpers/rest/tab\"\n\nexport type Collection = {\n  type: \"collections\"\n  isLastItem: boolean\n  data: {\n    parentIndex: null\n    data: HoppCollection<HoppRESTRequest>\n  }\n}\n\ntype Folder = {\n  type: \"folders\"\n  isLastItem: boolean\n  data: {\n    parentIndex: string\n    data: HoppCollection<HoppRESTRequest>\n  }\n}\n\ntype Requests = {\n  type: \"requests\"\n  isLastItem: boolean\n  data: {\n    parentIndex: string\n    data: HoppRESTRequest\n  }\n}\n\nconst t = useI18n()\nconst colorMode = useColorMode()\n\ntype SelectedTeam = GetMyTeamsQuery[\"myTeams\"][number] | undefined\n\ntype CollectionType =\n  | {\n      type: \"team-collections\"\n      selectedTeam: SelectedTeam\n    }\n  | { type: \"my-collections\"; selectedTeam: undefined }\n\nconst props = defineProps({\n  filteredCollections: {\n    type: Array as PropType<HoppCollection<HoppRESTRequest>[]>,\n    default: () => [],\n    required: true,\n  },\n  collectionsType: {\n    type: Object as PropType<CollectionType>,\n    default: () => ({ type: \"my-collections\", selectedTeam: undefined }),\n    required: true,\n  },\n  filterText: {\n    type: String as PropType<string>,\n    default: \"\",\n    required: true,\n  },\n  saveRequest: {\n    type: Boolean,\n    default: false,\n    required: false,\n  },\n  picked: {\n    type: Object as PropType<Picked | null>,\n    default: null,\n    required: false,\n  },\n})\n\nconst emit = defineEmits<{\n  (event: \"display-modal-add\"): void\n  (\n    event: \"add-request\",\n    payload: {\n      path: string\n      folder: HoppCollection<HoppRESTRequest>\n    }\n  ): void\n  (\n    event: \"add-folder\",\n    payload: {\n      path: string\n      folder: HoppCollection<HoppRESTRequest>\n    }\n  ): void\n  (\n    event: \"edit-collection\",\n    payload: {\n      collectionIndex: string\n      collection: HoppCollection<HoppRESTRequest>\n    }\n  ): void\n  (\n    event: \"edit-folder\",\n    payload: {\n      folderPath: string\n      folder: HoppCollection<HoppRESTRequest>\n    }\n  ): void\n  (\n    event: \"edit-request\",\n    payload: {\n      folderPath: string\n      requestIndex: string\n      request: HoppRESTRequest\n    }\n  ): void\n  (\n    event: \"duplicate-request\",\n    payload: {\n      folderPath: string\n      request: HoppRESTRequest\n    }\n  ): void\n  (event: \"export-data\", payload: HoppCollection<HoppRESTRequest>): void\n  (event: \"remove-collection\", payload: string): void\n  (event: \"remove-folder\", payload: string): void\n  (\n    event: \"remove-request\",\n    payload: {\n      folderPath: string | null\n      requestIndex: string\n    }\n  ): void\n  (\n    event: \"select-request\",\n    payload: {\n      request: HoppRESTRequest\n      folderPath: string\n      requestIndex: string\n      isActive: boolean\n    }\n  ): void\n  (\n    event: \"drop-request\",\n    payload: {\n      folderPath: string\n      requestIndex: string\n      destinationCollectionIndex: string\n    }\n  ): void\n  (\n    event: \"drop-collection\",\n    payload: {\n      collectionIndexDragged: string\n      destinationCollectionIndex: string\n    }\n  ): void\n  (\n    event: \"update-request-order\",\n    payload: {\n      dragedRequestIndex: string\n      destinationRequestIndex: string | null\n      destinationCollectionIndex: string\n    }\n  ): void\n  (\n    event: \"update-collection-order\",\n    payload: {\n      dragedCollectionIndex: string\n      destinationCollection: {\n        destinationCollectionIndex: string | null\n        destinationCollectionParentIndex: string | null\n      }\n    }\n  ): void\n  (event: \"select\", payload: Picked | null): void\n  (event: \"display-modal-import-export\"): void\n}>()\n\nconst refFilterCollection = toRef(props, \"filteredCollections\")\n\nconst pathToIndex = (path: string) => {\n  const pathArr = path.split(\"/\")\n  return pathArr[pathArr.length - 1]\n}\n\nconst isSelected = ({\n  collectionIndex,\n  folderPath,\n  requestIndex,\n}: {\n  collectionIndex?: number | undefined\n  folderPath?: string | undefined\n  requestIndex?: number | undefined\n}) => {\n  if (collectionIndex !== undefined) {\n    return (\n      props.picked &&\n      props.picked.pickedType === \"my-collection\" &&\n      props.picked.collectionIndex === collectionIndex\n    )\n  } else if (requestIndex !== undefined && folderPath !== undefined) {\n    return (\n      props.picked &&\n      props.picked.pickedType === \"my-request\" &&\n      props.picked.folderPath === folderPath &&\n      props.picked.requestIndex === requestIndex\n    )\n  } else {\n    return (\n      props.picked &&\n      props.picked.pickedType === \"my-folder\" &&\n      props.picked.folderPath === folderPath\n    )\n  }\n}\n\nconst active = computed(() => currentActiveTab.value.document.saveContext)\n\nconst isActiveRequest = (folderPath: string, requestIndex: number) => {\n  return pipe(\n    active.value,\n    O.fromNullable,\n    O.filter(\n      (active) =>\n        active.originLocation === \"user-collection\" &&\n        active.folderPath === folderPath &&\n        active.requestIndex === requestIndex\n    ),\n    O.isSome\n  )\n}\n\nconst selectRequest = (data: {\n  request: HoppRESTRequest\n  folderPath: string\n  requestIndex: string\n}) => {\n  const { request, folderPath, requestIndex } = data\n\n  if (props.saveRequest) {\n    emit(\"select\", {\n      pickedType: \"my-request\",\n      folderPath: folderPath,\n      requestIndex: parseInt(requestIndex),\n    })\n  } else {\n    emit(\"select-request\", {\n      request,\n      folderPath,\n      requestIndex,\n      isActive: isActiveRequest(folderPath, parseInt(requestIndex)),\n    })\n  }\n}\n\nconst dragEvent = (dataTransfer: DataTransfer, collectionIndex: string) => {\n  dataTransfer.setData(\"collectionIndex\", collectionIndex)\n}\n\nconst dragRequest = (\n  dataTransfer: DataTransfer,\n  {\n    folderPath,\n    requestIndex,\n  }: { folderPath: string | null; requestIndex: string }\n) => {\n  if (!folderPath) return\n  dataTransfer.setData(\"folderPath\", folderPath)\n  dataTransfer.setData(\"requestIndex\", requestIndex)\n}\n\nconst dropEvent = (\n  dataTransfer: DataTransfer,\n  destinationCollectionIndex: string\n) => {\n  const folderPath = dataTransfer.getData(\"folderPath\")\n  const requestIndex = dataTransfer.getData(\"requestIndex\")\n  const collectionIndexDragged = dataTransfer.getData(\"collectionIndex\")\n\n  if (folderPath && requestIndex) {\n    emit(\"drop-request\", {\n      folderPath,\n      requestIndex,\n      destinationCollectionIndex,\n    })\n  } else {\n    emit(\"drop-collection\", {\n      collectionIndexDragged,\n      destinationCollectionIndex,\n    })\n  }\n}\n\nconst updateRequestOrder = (\n  dataTransfer: DataTransfer,\n  {\n    folderPath,\n    requestIndex,\n  }: { folderPath: string | null; requestIndex: string | null }\n) => {\n  if (!folderPath) return\n  const dragedRequestIndex = dataTransfer.getData(\"requestIndex\")\n  const destinationRequestIndex = requestIndex\n  const destinationCollectionIndex = folderPath\n\n  emit(\"update-request-order\", {\n    dragedRequestIndex,\n    destinationRequestIndex,\n    destinationCollectionIndex,\n  })\n}\n\nconst updateCollectionOrder = (\n  dataTransfer: DataTransfer,\n  destinationCollection: {\n    destinationCollectionIndex: string | null\n    destinationCollectionParentIndex: string | null\n  }\n) => {\n  const dragedCollectionIndex = dataTransfer.getData(\"collectionIndex\")\n\n  emit(\"update-collection-order\", {\n    dragedCollectionIndex,\n    destinationCollection,\n  })\n}\n\ntype MyCollectionNode = Collection | Folder | Requests\n\nclass MyCollectionsAdapter implements SmartTreeAdapter<MyCollectionNode> {\n  constructor(public data: Ref<HoppCollection<HoppRESTRequest>[]>) {}\n\n  navigateToFolderWithIndexPath(\n    collections: HoppCollection<HoppRESTRequest>[],\n    indexPaths: number[]\n  ) {\n    if (indexPaths.length === 0) return null\n\n    let target = collections[indexPaths.shift() as number]\n\n    while (indexPaths.length > 0)\n      target = target.folders[indexPaths.shift() as number]\n\n    return target !== undefined ? target : null\n  }\n\n  getChildren(id: string | null): Ref<ChildrenResult<MyCollectionNode>> {\n    return computed(() => {\n      if (id === null) {\n        const data = this.data.value.map((item, index) => ({\n          id: index.toString(),\n          data: {\n            type: \"collections\",\n            isLastItem: index === this.data.value.length - 1,\n            data: {\n              parentIndex: null,\n              data: item,\n            },\n          },\n        }))\n        return {\n          status: \"loaded\",\n          data: data,\n        } as ChildrenResult<Collection>\n      }\n\n      const indexPath = id.split(\"/\").map((x) => parseInt(x))\n\n      const item = this.navigateToFolderWithIndexPath(\n        this.data.value,\n        indexPath\n      )\n\n      if (item) {\n        const data = [\n          ...item.folders.map((folder, index) => ({\n            id: `${id}/${index}`,\n            data: {\n              isLastItem:\n                item.folders && item.folders.length > 1\n                  ? index === item.folders.length - 1\n                  : false,\n              type: \"folders\",\n              data: {\n                parentIndex: id,\n                data: folder,\n              },\n            },\n          })),\n          ...item.requests.map((requests, index) => ({\n            id: `${id}/${index}`,\n            data: {\n              isLastItem:\n                item.requests && item.requests.length > 1\n                  ? index === item.requests.length - 1\n                  : false,\n              type: \"requests\",\n              data: {\n                parentIndex: id,\n                data: requests,\n              },\n            },\n          })),\n        ]\n\n        return {\n          status: \"loaded\",\n          data: data,\n        } as ChildrenResult<Folder | Requests>\n      } else {\n        return {\n          status: \"loaded\",\n          data: [],\n        }\n      }\n    })\n  }\n}\n\nconst myAdapter: SmartTreeAdapter<MyCollectionNode> = new MyCollectionsAdapter(\n  refFilterCollection\n)\n</script>\n","<template>\n  <div\n    class=\"flex items-center px-4 py-2 overflow-x-auto border-b whitespace-nowrap border-dividerLight text-tiny text-secondaryLight\"\n  >\n    <span class=\"truncate\">\n      {{\n        workspace.type === \"personal\"\n          ? t(\"workspace.personal\")\n          : teamWorkspaceName\n      }}\n    </span>\n    <icon-lucide-chevron-right v-if=\"section\" class=\"mx-2\" />\n    {{ section }}\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { computed } from \"vue\"\nimport { useReadonlyStream } from \"~/composables/stream\"\nimport { workspaceStatus$ } from \"~/newstore/workspace\"\nimport { useI18n } from \"~/composables/i18n\"\n\ndefineProps<{\n  section?: string\n}>()\n\nconst t = useI18n()\n\nconst workspace = useReadonlyStream(workspaceStatus$, { type: \"personal\" })\n\nconst teamWorkspaceName = computed(() => {\n  if (workspace.value.type === \"team\" && workspace.value.teamName) {\n    return workspace.value.teamName\n  } else {\n    return `${t(\"workspace.team\")}`\n  }\n})\n</script>\n","import * as E from \"fp-ts/Either\"\nimport { BehaviorSubject, Subscription } from \"rxjs\"\nimport { translateToNewRequest } from \"@hoppscotch/data\"\nimport { pull, remove } from \"lodash-es\"\nimport { Subscription as WSubscription } from \"wonka\"\nimport { runGQLQuery, runGQLSubscription } from \"../backend/GQLClient\"\nimport { TeamCollection } from \"./TeamCollection\"\nimport { TeamRequest } from \"./TeamRequest\"\nimport {\n  RootCollectionsOfTeamDocument,\n  TeamCollectionAddedDocument,\n  TeamCollectionUpdatedDocument,\n  TeamCollectionRemovedDocument,\n  TeamRequestAddedDocument,\n  TeamRequestUpdatedDocument,\n  TeamRequestDeletedDocument,\n  GetCollectionChildrenDocument,\n  GetCollectionRequestsDocument,\n  TeamRequestMovedDocument,\n  TeamCollectionMovedDocument,\n  TeamRequestOrderUpdatedDocument,\n  TeamCollectionOrderUpdatedDocument,\n} from \"~/helpers/backend/graphql\"\n\nconst TEAMS_BACKEND_PAGE_SIZE = 10\n\n/**\n * Finds the parent of a collection and returns the REFERENCE (or null)\n *\n * @param {TeamCollection[]} tree - The tree to look in\n * @param {string} collID - ID of the collection to find the parent of\n * @param {TeamCollection} currentParent - (used for recursion, do not set) The parent in the current iteration (undefined if root)\n *\n * @returns REFERENCE to the collection or null if not found or the collection is in root\n */\nfunction findParentOfColl(\n  tree: TeamCollection[],\n  collID: string,\n  currentParent?: TeamCollection\n): TeamCollection | null {\n  for (const coll of tree) {\n    // If the root is parent, return null\n    if (coll.id === collID) return currentParent || null\n\n    // Else run it in children\n    if (coll.children) {\n      const result = findParentOfColl(coll.children, collID, coll)\n      if (result) return result\n    }\n  }\n\n  return null\n}\n\n/**\n * Finds and returns a REFERENCE collection in the given tree (or null)\n *\n * @param {TeamCollection[]} tree - The tree to look in\n * @param {string} targetID - The ID of the collection to look for\n *\n * @returns REFERENCE to the collection or null if not found\n */\nfunction findCollInTree(\n  tree: TeamCollection[],\n  targetID: string\n): TeamCollection | null {\n  for (const coll of tree) {\n    // If the direct child matched, then return that\n    if (coll.id === targetID) return coll\n\n    // Else run it in the children\n    if (coll.children) {\n      const result = findCollInTree(coll.children, targetID)\n      if (result) return result\n    }\n  }\n\n  // If nothing matched, return null\n  return null\n}\n\n/**\n * Deletes a collection in the tree\n *\n * @param {TeamCollection[]} tree - The tree to delete in (THIS WILL BE MUTATED!)\n * @param {string} targetID - ID of the collection to delete\n */\nfunction deleteCollInTree(tree: TeamCollection[], targetID: string) {\n  // Get the parent owning the collection\n  const parent = findParentOfColl(tree, targetID)\n\n  // If we found a parent, update it\n  if (parent && parent.children) {\n    parent.children = parent.children.filter((coll) => coll.id !== targetID)\n  }\n\n  // If there is no parent, it could mean:\n  //  1. The collection with that ID does not exist\n  //  2. The collection is in root (therefore, no parent)\n\n  // Let's look for element, if not exist, then stop\n  const el = findCollInTree(tree, targetID)\n  if (!el) return\n\n  // Collection exists, so this should be in root, hence removing element\n  pull(tree, el)\n}\n\n/**\n * Updates a collection in the tree with the specified data\n *\n * @param {TeamCollection[]} tree - The tree to update in (THIS WILL BE MUTATED!)\n * @param {Partial<TeamCollection> & Pick<TeamCollection, \"id\">} updateColl - An object defining all the fields that should be updated (ID is required to find the target collection)\n */\nfunction updateCollInTree(\n  tree: TeamCollection[],\n  updateColl: Partial<TeamCollection> & Pick<TeamCollection, \"id\">\n) {\n  const el = findCollInTree(tree, updateColl.id)\n\n  // If no match, stop the operation\n  if (!el) return\n\n  // Update all the specified keys\n  Object.assign(el, updateColl)\n}\n\n/**\n * Finds and returns a REFERENCE to the request with the given ID (or null)\n *\n * @param {TeamCollection[]} tree - The tree to look in\n * @param {string} reqID - The ID of the request to look for\n *\n * @returns REFERENCE to the request or null if request not found\n */\nfunction findReqInTree(\n  tree: TeamCollection[],\n  reqID: string\n): TeamRequest | null {\n  for (const coll of tree) {\n    // Check in root collections (if expanded)\n    if (coll.requests) {\n      const match = coll.requests.find((req) => req.id === reqID)\n      if (match) return match\n    }\n\n    // Check in children of collections\n    if (coll.children) {\n      const match = findReqInTree(coll.children, reqID)\n      if (match) return match\n    }\n  }\n\n  // No matches\n  return null\n}\n\n/**\n * Finds and returns a REFERENCE to the collection containing a given request ID in tree (or null)\n *\n * @param {TeamCollection[]} tree - The tree to look in\n * @param {string} reqID - The ID of the request to look for\n *\n * @returns REFERENCE to the collection or null if request not found\n */\nfunction findCollWithReqIDInTree(\n  tree: TeamCollection[],\n  reqID: string\n): TeamCollection | null {\n  for (const coll of tree) {\n    // Check in root collections (if expanded)\n    if (coll.requests) {\n      if (coll.requests.find((req) => req.id === reqID)) return coll\n    }\n\n    // Check in children of collections\n    if (coll.children) {\n      const result = findCollWithReqIDInTree(coll.children, reqID)\n      if (result) return result\n    }\n  }\n\n  // No matches\n  return null\n}\n\ntype EntityType = \"request\" | \"collection\"\ntype EntityID = `${EntityType}-${string}`\n\nexport default class NewTeamCollectionAdapter {\n  collections$: BehaviorSubject<TeamCollection[]>\n\n  // Stream to the list of collections/folders that are being loaded in\n  loadingCollections$: BehaviorSubject<string[]>\n\n  /**\n   * Stores the entity (collection/request/folder) ids of all the loaded entities.\n   * Used for preventing duplication of data which definitely is not possible (duplication due to network problems etc.)\n   */\n  private entityIDs: Set<EntityID>\n\n  private teamCollectionAdded$: Subscription | null\n  private teamCollectionUpdated$: Subscription | null\n  private teamCollectionRemoved$: Subscription | null\n  private teamRequestAdded$: Subscription | null\n  private teamRequestUpdated$: Subscription | null\n  private teamRequestDeleted$: Subscription | null\n  private teamRequestMoved$: Subscription | null\n  private teamCollectionMoved$: Subscription | null\n  private teamRequestOrderUpdated$: Subscription | null\n  private teamCollectionOrderUpdated$: Subscription | null\n\n  private teamCollectionAddedSub: WSubscription | null\n  private teamCollectionUpdatedSub: WSubscription | null\n  private teamCollectionRemovedSub: WSubscription | null\n  private teamRequestAddedSub: WSubscription | null\n  private teamRequestUpdatedSub: WSubscription | null\n  private teamRequestDeletedSub: WSubscription | null\n  private teamRequestMovedSub: WSubscription | null\n  private teamCollectionMovedSub: WSubscription | null\n  private teamRequestOrderUpdatedSub: WSubscription | null\n  private teamCollectionOrderUpdatedSub: WSubscription | null\n\n  constructor(private teamID: string | null) {\n    this.collections$ = new BehaviorSubject<TeamCollection[]>([])\n    this.loadingCollections$ = new BehaviorSubject<string[]>([])\n\n    this.entityIDs = new Set()\n\n    this.teamCollectionAdded$ = null\n    this.teamCollectionUpdated$ = null\n    this.teamCollectionRemoved$ = null\n    this.teamRequestAdded$ = null\n    this.teamRequestDeleted$ = null\n    this.teamRequestUpdated$ = null\n    this.teamRequestMoved$ = null\n    this.teamCollectionMoved$ = null\n    this.teamRequestOrderUpdated$ = null\n    this.teamCollectionOrderUpdated$ = null\n\n    this.teamCollectionAddedSub = null\n    this.teamCollectionUpdatedSub = null\n    this.teamCollectionRemovedSub = null\n    this.teamRequestAddedSub = null\n    this.teamRequestDeletedSub = null\n    this.teamRequestUpdatedSub = null\n    this.teamRequestMovedSub = null\n    this.teamCollectionMovedSub = null\n    this.teamRequestOrderUpdatedSub = null\n    this.teamCollectionOrderUpdatedSub = null\n\n    if (this.teamID) this.initialize()\n  }\n\n  changeTeamID(newTeamID: string | null) {\n    this.teamID = newTeamID\n    this.collections$.next([])\n    this.entityIDs.clear()\n\n    this.loadingCollections$.next([])\n\n    this.unsubscribeSubscriptions()\n\n    if (this.teamID) this.initialize()\n  }\n\n  /**\n   * Unsubscribes from the subscriptions\n   * NOTE: Once this is called, no new updates to the tree will be detected\n   */\n  unsubscribeSubscriptions() {\n    this.teamCollectionAdded$?.unsubscribe()\n    this.teamCollectionUpdated$?.unsubscribe()\n    this.teamCollectionRemoved$?.unsubscribe()\n    this.teamRequestAdded$?.unsubscribe()\n    this.teamRequestDeleted$?.unsubscribe()\n    this.teamRequestUpdated$?.unsubscribe()\n    this.teamRequestMoved$?.unsubscribe()\n    this.teamCollectionMoved$?.unsubscribe()\n    this.teamRequestOrderUpdated$?.unsubscribe()\n    this.teamCollectionOrderUpdated$?.unsubscribe()\n\n    this.teamCollectionAddedSub?.unsubscribe()\n    this.teamCollectionUpdatedSub?.unsubscribe()\n    this.teamCollectionRemovedSub?.unsubscribe()\n    this.teamRequestAddedSub?.unsubscribe()\n    this.teamRequestDeletedSub?.unsubscribe()\n    this.teamRequestUpdatedSub?.unsubscribe()\n    this.teamRequestMovedSub?.unsubscribe()\n    this.teamCollectionMovedSub?.unsubscribe()\n    this.teamRequestOrderUpdatedSub?.unsubscribe()\n    this.teamCollectionOrderUpdatedSub?.unsubscribe()\n  }\n\n  private async initialize() {\n    await this.loadRootCollections()\n    this.registerSubscriptions()\n  }\n\n  /**\n   * Performs addition of a collection to the tree\n   *\n   * @param {TeamCollection} collection - The collection to add to the tree\n   * @param {string | null} parentCollectionID - The parent of the new collection, pass null if this collection is in root\n   */\n  private addCollection(\n    collection: TeamCollection,\n    parentCollectionID: string | null\n  ) {\n    // Check if we have it already in the entity tree, if so, we don't need it again\n    if (this.entityIDs.has(`collection-${collection.id}`)) return\n\n    const tree = this.collections$.value\n\n    if (!parentCollectionID) {\n      tree.push(collection)\n    } else {\n      const parentCollection = findCollInTree(tree, parentCollectionID)\n\n      if (!parentCollection) return\n\n      if (parentCollection.children != null) {\n        parentCollection.children.push(collection)\n      } else {\n        parentCollection.children = [collection]\n      }\n    }\n\n    // Add to entity ids set\n    this.entityIDs.add(`collection-${collection.id}`)\n\n    this.collections$.next(tree)\n  }\n\n  private async loadRootCollections() {\n    if (this.teamID === null) throw new Error(\"Team ID is null\")\n\n    this.loadingCollections$.next([\n      ...this.loadingCollections$.getValue(),\n      \"root\",\n    ])\n\n    const totalCollections: TeamCollection[] = []\n\n    while (true) {\n      const result = await runGQLQuery({\n        query: RootCollectionsOfTeamDocument,\n        variables: {\n          teamID: this.teamID,\n          cursor:\n            totalCollections.length > 0\n              ? totalCollections[totalCollections.length - 1].id\n              : undefined,\n        },\n      })\n\n      if (E.isLeft(result)) {\n        this.loadingCollections$.next(\n          this.loadingCollections$.getValue().filter((x) => x !== \"root\")\n        )\n\n        throw new Error(`Error fetching root collections: ${result.left.error}`)\n      }\n\n      totalCollections.push(\n        ...result.right.rootCollectionsOfTeam.map(\n          (x) =>\n            <TeamCollection>{\n              ...x,\n              children: null,\n              requests: null,\n            }\n        )\n      )\n\n      if (result.right.rootCollectionsOfTeam.length !== TEAMS_BACKEND_PAGE_SIZE)\n        break\n    }\n\n    this.loadingCollections$.next(\n      this.loadingCollections$.getValue().filter((x) => x !== \"root\")\n    )\n\n    // Add all the collections to the entity ids list\n    totalCollections.forEach((coll) =>\n      this.entityIDs.add(`collection-${coll.id}`)\n    )\n\n    this.collections$.next(totalCollections)\n  }\n\n  /**\n   * Updates an existing collection in tree\n   *\n   * @param {Partial<TeamCollection> & Pick<TeamCollection, \"id\">} collectionUpdate - Object defining the fields that need to be updated (ID is required to find the target)\n   */\n  private updateCollection(\n    collectionUpdate: Partial<TeamCollection> & Pick<TeamCollection, \"id\">\n  ) {\n    const tree = this.collections$.value\n\n    updateCollInTree(tree, collectionUpdate)\n\n    this.collections$.next(tree)\n  }\n\n  /**\n   * Removes a collection from the tree\n   *\n   * @param {string} collectionID - ID of the collection to remove\n   */\n  private removeCollection(collectionID: string) {\n    const tree = this.collections$.value\n\n    deleteCollInTree(tree, collectionID)\n\n    this.entityIDs.delete(`collection-${collectionID}`)\n\n    this.collections$.next(tree)\n  }\n\n  /**\n   * Adds a request to the tree\n   *\n   * @param {TeamRequest} request - The request to add to the tree\n   */\n  private addRequest(request: TeamRequest) {\n    // Check if we have it already in the entity tree, if so, we don't need it again\n    if (this.entityIDs.has(`request-${request.id}`)) return\n\n    const tree = this.collections$.value\n\n    // Check if we have the collection (if not, then not loaded?)\n    const coll = findCollInTree(tree, request.collectionID)\n    if (!coll) return // Ignore add request\n\n    // Collection is not expanded\n    if (!coll.requests) return\n\n    // Collection is expanded hence append request\n    coll.requests.push(request)\n\n    // Update the Entity IDs list\n    this.entityIDs.add(`request-${request.id}`)\n\n    this.collections$.next(tree)\n  }\n\n  /**\n   * Updates the request in tree\n   *\n   * @param {Partial<TeamRequest> & Pick<TeamRequest, 'id'>} requestUpdate - Object defining all the fields to update in request (ID of the request is required)\n   */\n  private updateRequest(\n    requestUpdate: Partial<TeamRequest> & Pick<TeamRequest, \"id\">\n  ) {\n    const tree = this.collections$.value\n\n    // Find request, if not present, don't update\n    const req = findReqInTree(tree, requestUpdate.id)\n    if (!req) return\n\n    Object.assign(req, requestUpdate)\n\n    this.collections$.next(tree)\n  }\n\n  /**\n   * Removes a request from the tree\n   *\n   * @param {string} requestID - ID of the request to remove\n   */\n  private removeRequest(requestID: string) {\n    const tree = this.collections$.value\n\n    // Find request in tree, don't attempt if no collection or no requests (expansion?)\n    const coll = findCollWithReqIDInTree(tree, requestID)\n    if (!coll || !coll.requests) return\n\n    // Remove the collection\n    remove(coll.requests, (req) => req.id === requestID)\n\n    // Remove from entityIDs set\n    this.entityIDs.delete(`request-${requestID}`)\n\n    // Publish new tree\n    this.collections$.next(tree)\n  }\n\n  /**\n   * Moves a request from one collection to another\n   *\n   * @param {string} request - The request to move\n   */\n  private async moveRequest(request: TeamRequest) {\n    const tree = this.collections$.value\n\n    // Remove the request from the current collection\n    this.removeRequest(request.id)\n\n    const currentRequest = request.request\n\n    if (currentRequest === null || currentRequest === undefined) return\n\n    // Find request in tree, don't attempt if no collection or no requests is found\n    const collection = findCollInTree(tree, request.collectionID)\n    if (!collection) return // Ignore add request\n\n    // Collection is not expanded\n    if (!collection.requests) return\n\n    this.addRequest({\n      id: request.id,\n      collectionID: request.collectionID,\n      request: translateToNewRequest(request.request),\n      title: request.title,\n    })\n  }\n\n  /**\n   * Moves a collection from one collection to another or to root\n   *\n   * @param {string} collectionID - The ID of the collection to move\n   */\n  private async moveCollection(\n    collectionID: string,\n    parentID: string | null,\n    title: string\n  ) {\n    // Remove the collection from the current position\n    this.removeCollection(collectionID)\n\n    if (collectionID === null || parentID === undefined) return\n\n    // Expand the parent collection if it is not expanded\n    // so that the old children is also visible when expanding\n    if (parentID) this.expandCollection(parentID)\n\n    this.addCollection(\n      {\n        id: collectionID,\n        children: null,\n        requests: null,\n        title: title,\n      },\n      parentID ?? null\n    )\n  }\n\n  private reorderItems = (array: unknown[], from: number, to: number) => {\n    const item = array.splice(from, 1)[0]\n    if (from < to) {\n      array.splice(to - 1, 0, item)\n    } else {\n      array.splice(to, 0, item)\n    }\n  }\n\n  public updateRequestOrder(\n    dragedRequestID: string,\n    destinationRequestID: string | null,\n    destinationCollectionID: string\n  ) {\n    const tree = this.collections$.value\n\n    // If the destination request is null, then it is the last request in the collection\n    if (destinationRequestID === null) {\n      const collection = findCollInTree(tree, destinationCollectionID)\n\n      if (!collection) return // Ignore order update\n\n      // Collection is not expanded\n      if (!collection.requests) return\n\n      const requestIndex = collection.requests.findIndex(\n        (req) => req.id === dragedRequestID\n      )\n\n      // If the collection index is not found, don't update\n      if (requestIndex === -1) return\n\n      // Move the request to the end of the requests\n      collection.requests.push(collection.requests.splice(requestIndex, 1)[0])\n    } else {\n      // Find collection in tree, don't attempt if no collection is found\n      const collection = findCollInTree(tree, destinationCollectionID)\n      if (!collection) return // Ignore order update\n\n      // Collection is not expanded\n      if (!collection.requests) return\n\n      const requestIndex = collection.requests.findIndex(\n        (req) => req.id === dragedRequestID\n      )\n      const destinationIndex = collection.requests.findIndex(\n        (req) => req.id === destinationRequestID\n      )\n\n      if (requestIndex === -1) return\n\n      this.reorderItems(collection.requests, requestIndex, destinationIndex)\n    }\n\n    this.collections$.next(tree)\n  }\n\n  public updateCollectionOrder = (\n    collectionID: string,\n    destinationCollectionID: string | null\n  ) => {\n    const tree = this.collections$.value\n\n    // If the destination collection is null, then it is the last collection in the tree\n    if (destinationCollectionID === null) {\n      const collLast = findParentOfColl(tree, collectionID)\n      if (collLast && collLast.children) {\n        const collectionIndex = collLast.children.findIndex(\n          (coll) => coll.id === collectionID\n        )\n\n        // reorder the collection to the end of the collections\n        collLast.children.push(collLast.children.splice(collectionIndex, 1)[0])\n      } else {\n        const collectionIndex = tree.findIndex(\n          (coll) => coll.id === collectionID\n        )\n\n        // If the collection index is not found, don't update\n        if (collectionIndex === -1) return\n\n        // reorder the collection to the end of the collections in the root\n        tree.push(tree.splice(collectionIndex, 1)[0])\n      }\n    } else {\n      // Find collection in tree\n      const coll = findParentOfColl(tree, destinationCollectionID)\n\n      // If the collection has a parent collection and check if it has children\n      if (coll && coll.children) {\n        const collectionIndex = coll.children.findIndex(\n          (coll) => coll.id === collectionID\n        )\n\n        const destinationIndex = coll.children.findIndex(\n          (coll) => coll.id === destinationCollectionID\n        )\n\n        // If the collection index is not found, don't update\n        if (collectionIndex === -1) return\n\n        this.reorderItems(coll.children, collectionIndex, destinationIndex)\n      } else {\n        // If the collection has no parent collection, it is a root collection\n        const collectionIndex = tree.findIndex(\n          (coll) => coll.id === collectionID\n        )\n\n        const destinationIndex = tree.findIndex(\n          (coll) => coll.id === destinationCollectionID\n        )\n\n        // If the collection index is not found, don't update\n        if (collectionIndex === -1) return\n\n        this.reorderItems(tree, collectionIndex, destinationIndex)\n      }\n    }\n\n    this.collections$.next(tree)\n  }\n\n  private registerSubscriptions() {\n    if (!this.teamID) return\n\n    const [teamCollAdded$, teamCollAddedSub] = runGQLSubscription({\n      query: TeamCollectionAddedDocument,\n      variables: {\n        teamID: this.teamID,\n      },\n    })\n\n    this.teamCollectionAddedSub = teamCollAddedSub\n\n    this.teamCollectionAdded$ = teamCollAdded$.subscribe((result) => {\n      if (E.isLeft(result))\n        throw new Error(\n          `Team Collection Added Error: ${JSON.stringify(result.left)}`\n        )\n\n      this.addCollection(\n        {\n          id: result.right.teamCollectionAdded.id,\n          children: null,\n          requests: null,\n          title: result.right.teamCollectionAdded.title,\n        },\n        result.right.teamCollectionAdded.parent?.id ?? null\n      )\n    })\n\n    const [teamCollUpdated$, teamCollUpdatedSub] = runGQLSubscription({\n      query: TeamCollectionUpdatedDocument,\n      variables: {\n        teamID: this.teamID,\n      },\n    })\n\n    this.teamCollectionUpdatedSub = teamCollUpdatedSub\n    this.teamCollectionUpdated$ = teamCollUpdated$.subscribe((result) => {\n      if (E.isLeft(result))\n        throw new Error(\n          `Team Collection Updated Error: ${JSON.stringify(result.left)}`\n        )\n\n      this.updateCollection({\n        id: result.right.teamCollectionUpdated.id,\n        title: result.right.teamCollectionUpdated.title,\n      })\n    })\n\n    const [teamCollRemoved$, teamCollRemovedSub] = runGQLSubscription({\n      query: TeamCollectionRemovedDocument,\n      variables: {\n        teamID: this.teamID,\n      },\n    })\n\n    this.teamCollectionRemovedSub = teamCollRemovedSub\n    this.teamCollectionRemoved$ = teamCollRemoved$.subscribe((result) => {\n      if (E.isLeft(result))\n        throw new Error(\n          `Team Collection Removed Error: ${JSON.stringify(result.left)}`\n        )\n\n      this.removeCollection(result.right.teamCollectionRemoved)\n    })\n\n    const [teamReqAdded$, teamReqAddedSub] = runGQLSubscription({\n      query: TeamRequestAddedDocument,\n      variables: {\n        teamID: this.teamID,\n      },\n    })\n\n    this.teamRequestAddedSub = teamReqAddedSub\n    this.teamRequestAdded$ = teamReqAdded$.subscribe((result) => {\n      if (E.isLeft(result))\n        throw new Error(\n          `Team Request Added Error: ${JSON.stringify(result.left)}`\n        )\n\n      this.addRequest({\n        id: result.right.teamRequestAdded.id,\n        collectionID: result.right.teamRequestAdded.collectionID,\n        request: translateToNewRequest(\n          JSON.parse(result.right.teamRequestAdded.request)\n        ),\n        title: result.right.teamRequestAdded.title,\n      })\n    })\n\n    const [teamReqUpdated$, teamReqUpdatedSub] = runGQLSubscription({\n      query: TeamRequestUpdatedDocument,\n      variables: {\n        teamID: this.teamID,\n      },\n    })\n\n    this.teamRequestUpdatedSub = teamReqUpdatedSub\n    this.teamRequestUpdated$ = teamReqUpdated$.subscribe((result) => {\n      if (E.isLeft(result))\n        throw new Error(\n          `Team Request Updated Error: ${JSON.stringify(result.left)}`\n        )\n\n      this.updateRequest({\n        id: result.right.teamRequestUpdated.id,\n        collectionID: result.right.teamRequestUpdated.collectionID,\n        request: JSON.parse(result.right.teamRequestUpdated.request),\n        title: result.right.teamRequestUpdated.title,\n      })\n    })\n\n    const [teamReqDeleted$, teamReqDeleted] = runGQLSubscription({\n      query: TeamRequestDeletedDocument,\n      variables: {\n        teamID: this.teamID,\n      },\n    })\n\n    this.teamRequestDeletedSub = teamReqDeleted\n    this.teamRequestDeleted$ = teamReqDeleted$.subscribe((result) => {\n      if (E.isLeft(result))\n        throw new Error(\n          `Team Request Deleted Error ${JSON.stringify(result.left)}`\n        )\n\n      this.removeRequest(result.right.teamRequestDeleted)\n    })\n\n    const [teamRequestMoved$, teamRequestMoved] = runGQLSubscription({\n      query: TeamRequestMovedDocument,\n      variables: {\n        teamID: this.teamID,\n      },\n    })\n\n    this.teamRequestMovedSub = teamRequestMoved\n    this.teamRequestMoved$ = teamRequestMoved$.subscribe((result) => {\n      if (E.isLeft(result))\n        throw new Error(\n          `Team Request Move Error ${JSON.stringify(result.left)}`\n        )\n\n      const { requestMoved } = result.right\n\n      const request = {\n        id: requestMoved.id,\n        collectionID: requestMoved.collectionID,\n        title: requestMoved.title,\n        request: JSON.parse(requestMoved.request),\n      }\n\n      this.moveRequest(request)\n    })\n\n    const [teamCollectionMoved$, teamCollectionMoved] = runGQLSubscription({\n      query: TeamCollectionMovedDocument,\n      variables: {\n        teamID: this.teamID,\n      },\n    })\n\n    this.teamCollectionMovedSub = teamCollectionMoved\n    this.teamCollectionMoved$ = teamCollectionMoved$.subscribe((result) => {\n      if (E.isLeft(result))\n        throw new Error(\n          `Team Collection Move Error ${JSON.stringify(result.left)}`\n        )\n\n      const { teamCollectionMoved } = result.right\n      const { id, parent, title } = teamCollectionMoved\n\n      const parentID = parent?.id ?? null\n\n      this.moveCollection(id, parentID, title)\n    })\n\n    const [teamRequestOrderUpdated$, teamRequestOrderUpdated] =\n      runGQLSubscription({\n        query: TeamRequestOrderUpdatedDocument,\n        variables: {\n          teamID: this.teamID,\n        },\n      })\n\n    this.teamRequestOrderUpdatedSub = teamRequestOrderUpdated\n    this.teamRequestOrderUpdated$ = teamRequestOrderUpdated$.subscribe(\n      (result) => {\n        if (E.isLeft(result))\n          throw new Error(\n            `Team Request Order Update Error ${JSON.stringify(result.left)}`\n          )\n\n        const { requestOrderUpdated } = result.right\n        const { request } = requestOrderUpdated\n        const { nextRequest } = requestOrderUpdated\n\n        this.updateRequestOrder(\n          request.id,\n          nextRequest ? nextRequest.id : null,\n          nextRequest ? nextRequest.collectionID : request.collectionID\n        )\n      }\n    )\n\n    const [teamCollectionOrderUpdated$, teamCollectionOrderUpdated] =\n      runGQLSubscription({\n        query: TeamCollectionOrderUpdatedDocument,\n        variables: {\n          teamID: this.teamID,\n        },\n      })\n\n    this.teamCollectionOrderUpdatedSub = teamCollectionOrderUpdated\n    this.teamCollectionOrderUpdated$ = teamCollectionOrderUpdated$.subscribe(\n      (result) => {\n        if (E.isLeft(result))\n          throw new Error(\n            `Team Collection Order Update Error ${JSON.stringify(result.left)}`\n          )\n\n        const { collectionOrderUpdated } = result.right\n        const { collection } = collectionOrderUpdated\n        const { nextCollection } = collectionOrderUpdated\n\n        this.updateCollectionOrder(\n          collection.id,\n          nextCollection ? nextCollection.id : null\n        )\n      }\n    )\n  }\n\n  /**\n   * Expands a collection on the tree\n   *\n   * When a collection is loaded initially in the adapter, children and requests are not loaded (they will be set to null)\n   * Upon expansion those two fields will be populated\n   *\n   * @param {string} collectionID - The ID of the collection to expand\n   */\n  async expandCollection(collectionID: string): Promise<void> {\n    // TODO: While expanding one collection, block (or queue) the expansion of the other, to avoid race conditions\n    const tree = this.collections$.value\n\n    const collection = findCollInTree(tree, collectionID)\n\n    if (!collection) return\n\n    if (collection.children != null) return\n\n    const collections: TeamCollection[] = []\n\n    this.loadingCollections$.next([\n      ...this.loadingCollections$.getValue(),\n      collectionID,\n    ])\n\n    while (true) {\n      const data = await runGQLQuery({\n        query: GetCollectionChildrenDocument,\n        variables: {\n          collectionID,\n          cursor:\n            collections.length > 0\n              ? collections[collections.length - 1].id\n              : undefined,\n        },\n      })\n\n      if (E.isLeft(data)) {\n        this.loadingCollections$.next(\n          this.loadingCollections$.getValue().filter((x) => x !== collectionID)\n        )\n\n        throw new Error(\n          `Child Collection Fetch Error for ${collectionID}: ${data.left}`\n        )\n      }\n\n      collections.push(\n        ...data.right.collection!.children.map(\n          (el) =>\n            <TeamCollection>{\n              id: el.id,\n              title: el.title,\n              children: null,\n              requests: null,\n            }\n        )\n      )\n\n      if (data.right.collection!.children.length !== TEAMS_BACKEND_PAGE_SIZE)\n        break\n    }\n\n    const requests: TeamRequest[] = []\n\n    while (true) {\n      const data = await runGQLQuery({\n        query: GetCollectionRequestsDocument,\n        variables: {\n          collectionID,\n          cursor:\n            requests.length > 0 ? requests[requests.length - 1].id : undefined,\n        },\n      })\n\n      if (E.isLeft(data)) {\n        this.loadingCollections$.next(\n          this.loadingCollections$.getValue().filter((x) => x !== collectionID)\n        )\n\n        throw new Error(`Child Request Fetch Error for ${data}: ${data.left}`)\n      }\n\n      requests.push(\n        ...data.right.requestsInCollection.map<TeamRequest>((el) => {\n          return {\n            id: el.id,\n            collectionID,\n            title: el.title,\n            request: translateToNewRequest(JSON.parse(el.request)),\n          }\n        })\n      )\n\n      if (data.right.requestsInCollection.length !== TEAMS_BACKEND_PAGE_SIZE)\n        break\n    }\n\n    collection.children = collections\n    collection.requests = requests\n\n    // Add to the entity ids set\n    collections.forEach((coll) => this.entityIDs.add(`collection-${coll.id}`))\n    requests.forEach((req) => this.entityIDs.add(`request-${req.id}`))\n\n    this.loadingCollections$.next(\n      this.loadingCollections$.getValue().filter((x) => x !== collectionID)\n    )\n\n    this.collections$.next(tree)\n  }\n}\n","import { runMutation } from \"../GQLClient\"\nimport {\n  CreateChildCollectionDocument,\n  CreateChildCollectionMutation,\n  CreateChildCollectionMutationVariables,\n  CreateNewRootCollectionDocument,\n  CreateNewRootCollectionMutation,\n  CreateNewRootCollectionMutationVariables,\n  DeleteCollectionDocument,\n  DeleteCollectionMutation,\n  DeleteCollectionMutationVariables,\n  ImportFromJsonDocument,\n  ImportFromJsonMutation,\n  ImportFromJsonMutationVariables,\n  MoveRestTeamCollectionDocument,\n  MoveRestTeamCollectionMutation,\n  MoveRestTeamCollectionMutationVariables,\n  RenameCollectionDocument,\n  RenameCollectionMutation,\n  RenameCollectionMutationVariables,\n  UpdateCollectionOrderDocument,\n  UpdateCollectionOrderMutation,\n  UpdateCollectionOrderMutationVariables,\n} from \"../graphql\"\n\ntype CreateNewRootCollectionError = \"team_coll/short_title\"\n\ntype CreateChildCollectionError = \"team_coll/short_title\"\n\ntype RenameCollectionError = \"team_coll/short_title\"\n\ntype DeleteCollectionError = \"team/invalid_coll_id\"\n\ntype MoveRestTeamCollectionError =\n  | \"team/invalid_coll_id\"\n  | \"team_coll/invalid_target_id\"\n  | \"team/collection_is_parent_coll\"\n  | \"team/target_and_destination_collection_are_same\"\n  | \"team/target_collection_is_already_root_collection\"\n\ntype UpdateCollectionOrderError =\n  | \"team/invalid_coll_id\"\n  | \"team/collection_and_next_collection_are_same\"\n  | \"team/team_collections_have_different_parents\"\n\nexport const createNewRootCollection = (title: string, teamID: string) =>\n  runMutation<\n    CreateNewRootCollectionMutation,\n    CreateNewRootCollectionMutationVariables,\n    CreateNewRootCollectionError\n  >(CreateNewRootCollectionDocument, {\n    title,\n    teamID,\n  })\n\nexport const createChildCollection = (\n  childTitle: string,\n  collectionID: string\n) =>\n  runMutation<\n    CreateChildCollectionMutation,\n    CreateChildCollectionMutationVariables,\n    CreateChildCollectionError\n  >(CreateChildCollectionDocument, {\n    childTitle,\n    collectionID,\n  })\n\n/** Can be used to rename both collection and folder (considered same in BE) */\nexport const renameCollection = (collectionID: string, newTitle: string) =>\n  runMutation<\n    RenameCollectionMutation,\n    RenameCollectionMutationVariables,\n    RenameCollectionError\n  >(RenameCollectionDocument, {\n    collectionID,\n    newTitle,\n  })\n\n/** Can be used to delete both collection and folder (considered same in BE) */\nexport const deleteCollection = (collectionID: string) =>\n  runMutation<\n    DeleteCollectionMutation,\n    DeleteCollectionMutationVariables,\n    DeleteCollectionError\n  >(DeleteCollectionDocument, {\n    collectionID,\n  })\n\n/** Can be used to move both collection and folder (considered same in BE) */\nexport const moveRESTTeamCollection = (\n  collectionID: string,\n  destinationCollectionID: string | null\n) =>\n  runMutation<\n    MoveRestTeamCollectionMutation,\n    MoveRestTeamCollectionMutationVariables,\n    MoveRestTeamCollectionError\n  >(MoveRestTeamCollectionDocument, {\n    collectionID,\n    parentCollectionID: destinationCollectionID,\n  })\n\nexport const updateOrderRESTTeamCollection = (\n  collectionID: string,\n  destCollID: string | null\n) =>\n  runMutation<\n    UpdateCollectionOrderMutation,\n    UpdateCollectionOrderMutationVariables,\n    UpdateCollectionOrderError\n  >(UpdateCollectionOrderDocument, {\n    collectionID,\n    destCollID,\n  })\n\nexport const importJSONToTeam = (collectionJSON: string, teamID: string) =>\n  runMutation<ImportFromJsonMutation, ImportFromJsonMutationVariables, \"\">(\n    ImportFromJsonDocument,\n    {\n      jsonString: collectionJSON,\n      teamID,\n    }\n  )\n","import { runMutation } from \"../GQLClient\"\nimport {\n  CreateRequestInCollectionDocument,\n  CreateRequestInCollectionMutation,\n  CreateRequestInCollectionMutationVariables,\n  DeleteRequestDocument,\n  DeleteRequestMutation,\n  DeleteRequestMutationVariables,\n  MoveRestTeamRequestDocument,\n  MoveRestTeamRequestMutation,\n  MoveRestTeamRequestMutationVariables,\n  UpdateLookUpRequestOrderDocument,\n  UpdateLookUpRequestOrderMutation,\n  UpdateLookUpRequestOrderMutationVariables,\n  UpdateRequestDocument,\n  UpdateRequestMutation,\n  UpdateRequestMutationVariables,\n} from \"../graphql\"\n\ntype DeleteRequestErrors = \"team_req/not_found\"\n\ntype MoveRestTeamRequestErrors =\n  | \"team_req/not_found\"\n  | \"team_req/invalid_target_id\"\n  | \"team/invalid_coll_id\"\n  | \"team_req/not_required_role\"\n  | \"bug/team_req/no_req_id\"\n\ntype UpdateLookUpRequestOrderErrors =\n  | \"team_req/not_found\"\n  | \"team/request_and_next_request_are_same\"\n  | \"team_req/requests_not_from_same_collection\"\n\nexport const createRequestInCollection = (\n  collectionID: string,\n  data: {\n    request: string\n    teamID: string\n    title: string\n  }\n) =>\n  runMutation<\n    CreateRequestInCollectionMutation,\n    CreateRequestInCollectionMutationVariables,\n    \"\"\n  >(CreateRequestInCollectionDocument, {\n    collectionID,\n    data,\n  })\n\nexport const updateTeamRequest = (\n  requestID: string,\n  data: {\n    request: string\n    title: string\n  }\n) =>\n  runMutation<UpdateRequestMutation, UpdateRequestMutationVariables, \"\">(\n    UpdateRequestDocument,\n    {\n      requestID,\n      data,\n    }\n  )\n\nexport const deleteTeamRequest = (requestID: string) =>\n  runMutation<\n    DeleteRequestMutation,\n    DeleteRequestMutationVariables,\n    DeleteRequestErrors\n  >(DeleteRequestDocument, {\n    requestID,\n  })\n\nexport const moveRESTTeamRequest = (collectionID: string, requestID: string) =>\n  runMutation<\n    MoveRestTeamRequestMutation,\n    MoveRestTeamRequestMutationVariables,\n    MoveRestTeamRequestErrors\n  >(MoveRestTeamRequestDocument, {\n    collectionID,\n    requestID,\n  })\n\nexport const updateOrderRESTTeamRequest = (\n  requestID: string,\n  nextRequestID: string | null,\n  collectionID: string\n) =>\n  runMutation<\n    UpdateLookUpRequestOrderMutation,\n    UpdateLookUpRequestOrderMutationVariables,\n    UpdateLookUpRequestOrderErrors\n  >(UpdateLookUpRequestOrderDocument, {\n    requestID,\n    nextRequestID,\n    collectionID,\n  })\n","import axios from \"axios\"\nimport * as TE from \"fp-ts/TaskEither\"\n\n/**\n * Create an gist on GitHub with the collection JSON\n * @param collectionJSON - JSON string of the collection\n * @param accessToken - GitHub access token\n * @returns Either of the response of the GitHub Gist API or the error\n */\nexport const createCollectionGists = (\n  collectionJSON: string,\n  accessToken: string\n) => {\n  return TE.tryCatch(\n    async () =>\n      axios.post(\n        \"https://api.github.com/gists\",\n        {\n          files: {\n            \"hoppscotch-collections.json\": {\n              content: collectionJSON,\n            },\n          },\n        },\n        {\n          headers: {\n            Authorization: `token ${accessToken}`,\n            Accept: \"application/vnd.github.v3+json\",\n          },\n        }\n      ),\n    (reason) => reason\n  )\n}\n","import { HoppCollection, HoppRESTRequest } from \"@hoppscotch/data\"\nimport { getTabsRefTo } from \"../rest/tab\"\nimport { getAffectedIndexes } from \"./affectedIndex\"\nimport { GetSingleRequestDocument } from \"../backend/graphql\"\nimport { runGQLQuery } from \"../backend/GQLClient\"\nimport * as E from \"fp-ts/Either\"\n\n/**\n * Resolve save context on reorder\n * @param payload\n * @param payload.lastIndex\n * @param payload.newIndex\n * @param folderPath\n * @param payload.length\n * @returns\n */\n\nexport function resolveSaveContextOnCollectionReorder(\n  payload: {\n    lastIndex: number\n    newIndex: number\n    folderPath: string\n    length?: number // better way to do this? now it could be undefined\n  },\n  type: \"remove\" | \"drop\" = \"remove\"\n) {\n  const { lastIndex, folderPath, length } = payload\n  let { newIndex } = payload\n\n  if (newIndex > lastIndex) newIndex-- // there is a issue when going down? better way to resolve this?\n  if (lastIndex === newIndex) return\n\n  const affectedIndexes = getAffectedIndexes(\n    lastIndex,\n    newIndex === -1 ? length! : newIndex\n  )\n\n  if (newIndex === -1) {\n    // if (newIndex === -1) remove it from the map because it will be deleted\n    affectedIndexes.delete(lastIndex)\n    // when collection deleted opended requests from that collection be affected\n    if (type === \"remove\") {\n      resetSaveContextForAffectedRequests(\n        folderPath ? `${folderPath}/${lastIndex}` : lastIndex.toString()\n      )\n    }\n  }\n\n  // add folder path as prefix to the affected indexes\n  const affectedPaths = new Map<string, string>()\n  for (const [key, value] of affectedIndexes) {\n    if (folderPath) {\n      affectedPaths.set(`${folderPath}/${key}`, `${folderPath}/${value}`)\n    } else {\n      affectedPaths.set(key.toString(), value.toString())\n    }\n  }\n\n  const tabs = getTabsRefTo((tab) => {\n    return (\n      tab.document.saveContext?.originLocation === \"user-collection\" &&\n      affectedPaths.has(tab.document.saveContext.folderPath)\n    )\n  })\n\n  for (const tab of tabs) {\n    if (tab.value.document.saveContext?.originLocation === \"user-collection\") {\n      const newPath = affectedPaths.get(\n        tab.value.document.saveContext?.folderPath\n      )!\n      tab.value.document.saveContext.folderPath = newPath\n    }\n  }\n}\n\n/**\n * Resolve save context for affected requests on drop folder from one  to another\n * @param oldFolderPath\n * @param newFolderPath\n * @returns\n */\n\nexport function updateSaveContextForAffectedRequests(\n  oldFolderPath: string,\n  newFolderPath: string\n) {\n  const tabs = getTabsRefTo((tab) => {\n    return (\n      tab.document.saveContext?.originLocation === \"user-collection\" &&\n      tab.document.saveContext.folderPath.startsWith(oldFolderPath)\n    )\n  })\n\n  for (const tab of tabs) {\n    if (tab.value.document.saveContext?.originLocation === \"user-collection\") {\n      tab.value.document.saveContext = {\n        ...tab.value.document.saveContext,\n        folderPath: tab.value.document.saveContext.folderPath.replace(\n          oldFolderPath,\n          newFolderPath\n        ),\n      }\n    }\n  }\n}\n\nfunction resetSaveContextForAffectedRequests(folderPath: string) {\n  const tabs = getTabsRefTo((tab) => {\n    return (\n      tab.document.saveContext?.originLocation === \"user-collection\" &&\n      tab.document.saveContext.folderPath.startsWith(folderPath)\n    )\n  })\n\n  for (const tab of tabs) {\n    tab.value.document.saveContext = null\n    tab.value.document.isDirty = true\n  }\n}\n\n/**\n * Reset save context to null if requests are deleted from the team collection or its folder\n * only runs when collection or folder is deleted\n */\n\nexport async function resetTeamRequestsContext() {\n  const tabs = getTabsRefTo((tab) => {\n    return tab.document.saveContext?.originLocation === \"team-collection\"\n  })\n\n  for (const tab of tabs) {\n    if (tab.value.document.saveContext?.originLocation === \"team-collection\") {\n      const data = await runGQLQuery({\n        query: GetSingleRequestDocument,\n        variables: {\n          requestID: tab.value.document.saveContext?.requestID,\n        },\n      })\n\n      if (E.isRight(data) && data.right.request === null) {\n        tab.value.document.saveContext = null\n        tab.value.document.isDirty = true\n      }\n    }\n  }\n}\n\nexport function getFoldersByPath(\n  collections: HoppCollection<HoppRESTRequest>[],\n  path: string\n): HoppCollection<HoppRESTRequest>[] {\n  if (!path) return collections\n\n  // path will be like this \"0/0/1\" these are the indexes of the folders\n  const pathArray = path.split(\"/\").map((index) => parseInt(index))\n\n  let currentCollection = collections[pathArray[0]]\n\n  if (pathArray.length === 1) {\n    return currentCollection.folders\n  } else {\n    for (let i = 1; i < pathArray.length; i++) {\n      const folder = currentCollection.folders[pathArray[i]]\n      if (folder) currentCollection = folder\n    }\n  }\n\n  return currentCollection.folders\n}\n","<template>\n  <div\n    :class=\"{\n      'rounded border border-divider': saveRequest,\n      'bg-primaryDark':\n        draggingToRoot && currentReorderingStatus.type !== 'request',\n    }\"\n    class=\"flex-1\"\n    @drop.prevent=\"dropToRoot\"\n    @dragover.prevent=\"draggingToRoot = true\"\n    @dragend=\"draggingToRoot = false\"\n  >\n    <div\n      class=\"sticky z-10 flex flex-col flex-shrink-0 overflow-x-auto border-b bg-primary border-dividerLight\"\n      :class=\"{ 'rounded-t': saveRequest }\"\n      :style=\"\n        saveRequest ? 'top: calc(-1 * var(--line-height-body))' : 'top: 0'\n      \"\n    >\n      <WorkspaceCurrent :section=\"t('tab.collections')\" />\n      <input\n        v-model=\"filterTexts\"\n        type=\"search\"\n        autocomplete=\"off\"\n        :placeholder=\"t('action.search')\"\n        class=\"py-2 pl-4 pr-2 bg-transparent\"\n        :disabled=\"collectionsType.type === 'team-collections'\"\n      />\n    </div>\n    <CollectionsMyCollections\n      v-if=\"collectionsType.type === 'my-collections'\"\n      :collections-type=\"collectionsType\"\n      :filtered-collections=\"filteredCollections\"\n      :filter-text=\"filterTexts\"\n      :save-request=\"saveRequest\"\n      :picked=\"picked\"\n      @add-folder=\"addFolder\"\n      @add-request=\"addRequest\"\n      @edit-collection=\"editCollection\"\n      @edit-folder=\"editFolder\"\n      @export-data=\"exportData\"\n      @remove-collection=\"removeCollection\"\n      @remove-folder=\"removeFolder\"\n      @drop-collection=\"dropCollection\"\n      @update-request-order=\"updateRequestOrder\"\n      @update-collection-order=\"updateCollectionOrder\"\n      @edit-request=\"editRequest\"\n      @duplicate-request=\"duplicateRequest\"\n      @remove-request=\"removeRequest\"\n      @select-request=\"selectRequest\"\n      @select=\"selectPicked\"\n      @drop-request=\"dropRequest\"\n      @display-modal-add=\"displayModalAdd(true)\"\n      @display-modal-import-export=\"displayModalImportExport(true)\"\n    />\n    <CollectionsTeamCollections\n      v-else\n      :collections-type=\"collectionsType\"\n      :team-collection-list=\"teamCollectionList\"\n      :team-loading-collections=\"teamLoadingCollections\"\n      :export-loading=\"exportLoading\"\n      :duplicate-loading=\"duplicateLoading\"\n      :save-request=\"saveRequest\"\n      :picked=\"picked\"\n      :collection-move-loading=\"collectionMoveLoading\"\n      :request-move-loading=\"requestMoveLoading\"\n      @add-request=\"addRequest\"\n      @add-folder=\"addFolder\"\n      @edit-collection=\"editCollection\"\n      @edit-folder=\"editFolder\"\n      @export-data=\"exportData\"\n      @remove-collection=\"removeCollection\"\n      @remove-folder=\"removeFolder\"\n      @edit-request=\"editRequest\"\n      @duplicate-request=\"duplicateRequest\"\n      @remove-request=\"removeRequest\"\n      @select-request=\"selectRequest\"\n      @select=\"selectPicked\"\n      @drop-request=\"dropRequest\"\n      @drop-collection=\"dropCollection\"\n      @update-request-order=\"updateRequestOrder\"\n      @update-collection-order=\"updateCollectionOrder\"\n      @expand-team-collection=\"expandTeamCollection\"\n      @display-modal-add=\"displayModalAdd(true)\"\n      @display-modal-import-export=\"displayModalImportExport(true)\"\n    />\n    <div\n      class=\"hidden bg-primaryDark flex-col flex-1 items-center py-15 justify-center px-4 text-secondaryLight\"\n      :class=\"{\n        '!flex': draggingToRoot && currentReorderingStatus.type !== 'request',\n      }\"\n    >\n      <icon-lucide-list-end class=\"svg-icons !w-8 !h-8\" />\n    </div>\n    <CollectionsAdd\n      :show=\"showModalAdd\"\n      :loading-state=\"modalLoadingState\"\n      @submit=\"addNewRootCollection\"\n      @hide-modal=\"displayModalAdd(false)\"\n    />\n    <CollectionsAddRequest\n      :show=\"showModalAddRequest\"\n      :loading-state=\"modalLoadingState\"\n      @add-request=\"onAddRequest\"\n      @hide-modal=\"displayModalAddRequest(false)\"\n    />\n    <CollectionsAddFolder\n      :show=\"showModalAddFolder\"\n      :loading-state=\"modalLoadingState\"\n      @add-folder=\"onAddFolder\"\n      @hide-modal=\"displayModalAddFolder(false)\"\n    />\n    <CollectionsEdit\n      :show=\"showModalEditCollection\"\n      :editing-collection-name=\"editingCollectionName ?? ''\"\n      :loading-state=\"modalLoadingState\"\n      @hide-modal=\"displayModalEditCollection(false)\"\n      @submit=\"updateEditingCollection\"\n    />\n    <CollectionsEditFolder\n      :show=\"showModalEditFolder\"\n      :editing-folder-name=\"editingFolderName ?? ''\"\n      :loading-state=\"modalLoadingState\"\n      @submit=\"updateEditingFolder\"\n      @hide-modal=\"displayModalEditFolder(false)\"\n    />\n    <CollectionsEditRequest\n      v-model=\"editingRequestName\"\n      :show=\"showModalEditRequest\"\n      :loading-state=\"modalLoadingState\"\n      @submit=\"updateEditingRequest\"\n      @hide-modal=\"displayModalEditRequest(false)\"\n    />\n    <HoppSmartConfirmModal\n      :show=\"showConfirmModal\"\n      :title=\"confirmModalTitle\"\n      :loading-state=\"modalLoadingState\"\n      @hide-modal=\"showConfirmModal = false\"\n      @resolve=\"resolveConfirmModal\"\n    />\n    <CollectionsImportExport\n      :show=\"showModalImportExport\"\n      :collections-type=\"collectionsType.type\"\n      :exporting-team-collections=\"exportingTeamCollections\"\n      :creating-gist-collection=\"creatingGistCollection\"\n      :importing-my-collections=\"importingMyCollections\"\n      @export-json-collection=\"exportJSONCollection\"\n      @create-collection-gist=\"createCollectionGist\"\n      @import-to-teams=\"importToTeams\"\n      @hide-modal=\"displayModalImportExport(false)\"\n    />\n    <TeamsAdd\n      :show=\"showTeamModalAdd\"\n      @hide-modal=\"displayTeamModalAdd(false)\"\n    />\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { computed, nextTick, PropType, ref, watch } from \"vue\"\nimport { useToast } from \"@composables/toast\"\nimport { useI18n } from \"@composables/i18n\"\nimport { Picked } from \"~/helpers/types/HoppPicked\"\nimport TeamListAdapter from \"~/helpers/teams/TeamListAdapter\"\nimport { useReadonlyStream } from \"~/composables/stream\"\nimport { useLocalState } from \"~/newstore/localstate\"\nimport { onLoggedIn } from \"~/composables/auth\"\nimport { GetMyTeamsQuery } from \"~/helpers/backend/graphql\"\nimport { pipe } from \"fp-ts/function\"\nimport * as TE from \"fp-ts/TaskEither\"\nimport {\n  addRESTCollection,\n  addRESTFolder,\n  editRESTCollection,\n  editRESTFolder,\n  editRESTRequest,\n  moveRESTRequest,\n  removeRESTCollection,\n  removeRESTFolder,\n  removeRESTRequest,\n  restCollections$,\n  saveRESTRequestAs,\n  updateRESTRequestOrder,\n  updateRESTCollectionOrder,\n  moveRESTFolder,\n  navigateToFolderWithIndexPath,\n  restCollectionStore,\n} from \"~/newstore/collections\"\nimport TeamCollectionAdapter from \"~/helpers/teams/TeamCollectionAdapter\"\nimport {\n  HoppCollection,\n  HoppRESTRequest,\n  makeCollection,\n} from \"@hoppscotch/data\"\nimport { cloneDeep, isEqual } from \"lodash-es\"\nimport { GQLError } from \"~/helpers/backend/GQLClient\"\nimport {\n  createNewRootCollection,\n  createChildCollection,\n  renameCollection,\n  deleteCollection,\n  importJSONToTeam,\n  moveRESTTeamCollection,\n  updateOrderRESTTeamCollection,\n} from \"~/helpers/backend/mutations/TeamCollection\"\nimport {\n  updateTeamRequest,\n  createRequestInCollection,\n  deleteTeamRequest,\n  moveRESTTeamRequest,\n  updateOrderRESTTeamRequest,\n} from \"~/helpers/backend/mutations/TeamRequest\"\nimport { TeamCollection } from \"~/helpers/teams/TeamCollection\"\nimport { Collection as NodeCollection } from \"./MyCollections.vue\"\nimport {\n  getCompleteCollectionTree,\n  getTeamCollectionJSON,\n  teamCollToHoppRESTColl,\n} from \"~/helpers/backend/helpers\"\nimport * as E from \"fp-ts/Either\"\nimport { platform } from \"~/platform\"\nimport { createCollectionGists } from \"~/helpers/gist\"\nimport { workspaceStatus$ } from \"~/newstore/workspace\"\nimport {\n  createNewTab,\n  currentActiveTab,\n  currentTabID,\n  getTabRefWithSaveContext,\n} from \"~/helpers/rest/tab\"\nimport {\n  getRequestsByPath,\n  resolveSaveContextOnRequestReorder,\n} from \"~/helpers/collection/request\"\nimport {\n  getFoldersByPath,\n  resolveSaveContextOnCollectionReorder,\n  updateSaveContextForAffectedRequests,\n  resetTeamRequestsContext,\n} from \"~/helpers/collection/collection\"\nimport { currentReorderingStatus$ } from \"~/newstore/reordering\"\n\nconst t = useI18n()\nconst toast = useToast()\n\nconst props = defineProps({\n  saveRequest: {\n    type: Boolean,\n    default: false,\n    required: false,\n  },\n  picked: {\n    type: Object as PropType<Picked | null>,\n    default: null,\n    required: false,\n  },\n})\n\nconst emit = defineEmits<{\n  (event: \"select\", payload: Picked | null): void\n  (event: \"update-team\", team: SelectedTeam): void\n  (event: \"update-collection-type\", type: CollectionType[\"type\"]): void\n}>()\n\ntype SelectedTeam = GetMyTeamsQuery[\"myTeams\"][number] | undefined\n\ntype CollectionType =\n  | {\n      type: \"team-collections\"\n      selectedTeam: SelectedTeam\n    }\n  | { type: \"my-collections\"; selectedTeam: undefined }\n\nconst collectionsType = ref<CollectionType>({\n  type: \"my-collections\",\n  selectedTeam: undefined,\n})\n\n// Collection Data\nconst editingCollection = ref<\n  HoppCollection<HoppRESTRequest> | TeamCollection | null\n>(null)\nconst editingCollectionName = ref<string | null>(null)\nconst editingCollectionIndex = ref<number | null>(null)\nconst editingCollectionID = ref<string | null>(null)\nconst editingFolder = ref<\n  HoppCollection<HoppRESTRequest> | TeamCollection | null\n>(null)\nconst editingFolderName = ref<string | null>(null)\nconst editingFolderPath = ref<string | null>(null)\nconst editingRequest = ref<HoppRESTRequest | null>(null)\nconst editingRequestName = ref(\"\")\nconst editingRequestIndex = ref<number | null>(null)\nconst editingRequestID = ref<string | null>(null)\n\nconst confirmModalTitle = ref<string | null>(null)\n\nconst filterTexts = ref(\"\")\n\nconst currentUser = useReadonlyStream(\n  platform.auth.getCurrentUserStream(),\n  platform.auth.getCurrentUser()\n)\nconst myCollections = useReadonlyStream(restCollections$, [], \"deep\")\n\n// Draging\nconst draggingToRoot = ref(false)\nconst collectionMoveLoading = ref<string[]>([])\nconst requestMoveLoading = ref<string[]>([])\n\n// Export - Import refs\nconst collectionJSON = ref(\"\")\nconst exportingTeamCollections = ref(false)\nconst creatingGistCollection = ref(false)\nconst importingMyCollections = ref(false)\n\n// TeamList-Adapter\nconst teamListAdapter = new TeamListAdapter(true)\nconst myTeams = useReadonlyStream(teamListAdapter.teamList$, null)\nconst REMEMBERED_TEAM_ID = useLocalState(\"REMEMBERED_TEAM_ID\")\nconst teamListFetched = ref(false)\n\n// Team Collection Adapter\nconst teamCollectionAdapter = new TeamCollectionAdapter(null)\nconst teamCollectionList = useReadonlyStream(\n  teamCollectionAdapter.collections$,\n  []\n)\nconst teamLoadingCollections = useReadonlyStream(\n  teamCollectionAdapter.loadingCollections$,\n  []\n)\n\nwatch(\n  () => myTeams.value,\n  (newTeams) => {\n    if (newTeams && !teamListFetched.value) {\n      teamListFetched.value = true\n      if (REMEMBERED_TEAM_ID.value && currentUser.value) {\n        const team = newTeams.find((t) => t.id === REMEMBERED_TEAM_ID.value)\n        if (team) updateSelectedTeam(team)\n      }\n    }\n  }\n)\n\nwatch(\n  () => collectionsType.value.selectedTeam,\n  (newTeam) => {\n    if (newTeam) {\n      teamCollectionAdapter.changeTeamID(newTeam.id)\n    }\n  }\n)\n\nconst switchToMyCollections = () => {\n  collectionsType.value.type = \"my-collections\"\n  collectionsType.value.selectedTeam = undefined\n  teamCollectionAdapter.changeTeamID(null)\n}\n\nconst expandTeamCollection = (collectionID: string) => {\n  teamCollectionAdapter.expandCollection(collectionID)\n}\n\nconst updateSelectedTeam = (team: SelectedTeam) => {\n  if (team) {\n    collectionsType.value.type = \"team-collections\"\n    collectionsType.value.selectedTeam = team\n    REMEMBERED_TEAM_ID.value = team.id\n    emit(\"update-team\", team)\n    emit(\"update-collection-type\", \"team-collections\")\n  }\n}\n\nonLoggedIn(() => {\n  !teamListAdapter.isInitialized && teamListAdapter.initialize()\n})\n\nconst workspace = useReadonlyStream(workspaceStatus$, { type: \"personal\" })\n\n// Used to switch collection type and team when user switch workspace in the global workspace switcher\n// Check if there is a teamID in the workspace, if yes, switch to team collection and select the team\n// If there is no teamID, switch to my environment\nwatch(\n  () => workspace.value.teamID,\n  (teamID) => {\n    if (!teamID) {\n      switchToMyCollections()\n    } else if (teamID) {\n      const team = myTeams.value?.find((t) => t.id === teamID)\n      if (team) updateSelectedTeam(team)\n    }\n  }\n)\n\n// Switch to my-collections and reset the team collection when user logout\nwatch(\n  () => currentUser.value,\n  (user) => {\n    if (!user) {\n      switchToMyCollections()\n    }\n  }\n)\n\nconst currentReorderingStatus = useReadonlyStream(currentReorderingStatus$, {\n  type: \"collection\",\n  id: \"\",\n  parentID: \"\",\n})\n\nconst hasTeamWriteAccess = computed(() => {\n  if (!collectionsType.value.selectedTeam) return false\n\n  if (\n    collectionsType.value.type === \"team-collections\" &&\n    collectionsType.value.selectedTeam.myRole !== \"VIEWER\"\n  )\n    return true\n  else return false\n})\n\nconst filteredCollections = computed(() => {\n  const collections =\n    collectionsType.value.type === \"my-collections\" ? myCollections.value : []\n\n  if (filterTexts.value === \"\") return collections\n\n  if (collectionsType.value.type === \"team-collections\") return []\n\n  const filterText = filterTexts.value.toLowerCase()\n  const filteredCollections = []\n\n  const isMatch = (text: string) => text.toLowerCase().includes(filterText)\n\n  for (const collection of collections) {\n    const filteredRequests = []\n    const filteredFolders = []\n    for (const request of collection.requests) {\n      if (isMatch(request.name)) filteredRequests.push(request)\n    }\n    for (const folder of collection.folders) {\n      if (isMatch(folder.name)) filteredFolders.push(folder)\n      const filteredFolderRequests = []\n      for (const request of folder.requests) {\n        if (isMatch(request.name)) filteredFolderRequests.push(request)\n      }\n      if (filteredFolderRequests.length > 0) {\n        const filteredFolder = Object.assign({}, folder)\n        filteredFolder.requests = filteredFolderRequests\n        filteredFolders.push(filteredFolder)\n      }\n    }\n\n    if (\n      filteredRequests.length + filteredFolders.length > 0 ||\n      isMatch(collection.name)\n    ) {\n      const filteredCollection = Object.assign({}, collection)\n      filteredCollection.requests = filteredRequests\n      filteredCollection.folders = filteredFolders\n      filteredCollections.push(filteredCollection)\n    }\n  }\n\n  return filteredCollections\n})\n\nconst isSelected = ({\n  collectionIndex,\n  folderPath,\n  requestIndex,\n  collectionID,\n  folderID,\n  requestID,\n}: {\n  collectionIndex?: number | undefined\n  folderPath?: string | undefined\n  requestIndex?: number | undefined\n  collectionID?: string | undefined\n  folderID?: string | undefined\n  requestID?: string | undefined\n}) => {\n  if (collectionIndex !== undefined) {\n    return (\n      props.picked &&\n      props.picked.pickedType === \"my-collection\" &&\n      props.picked.collectionIndex === collectionIndex\n    )\n  } else if (requestIndex !== undefined && folderPath !== undefined) {\n    return (\n      props.picked &&\n      props.picked.pickedType === \"my-request\" &&\n      props.picked.folderPath === folderPath &&\n      props.picked.requestIndex === requestIndex\n    )\n  } else if (folderPath !== undefined) {\n    return (\n      props.picked &&\n      props.picked.pickedType === \"my-folder\" &&\n      props.picked.folderPath === folderPath\n    )\n  } else if (collectionID !== undefined) {\n    return (\n      props.picked &&\n      props.picked.pickedType === \"teams-collection\" &&\n      props.picked.collectionID === collectionID\n    )\n  } else if (requestID !== undefined) {\n    return (\n      props.picked &&\n      props.picked.pickedType === \"teams-request\" &&\n      props.picked.requestID === requestID\n    )\n  } else if (folderID !== undefined) {\n    return (\n      props.picked &&\n      props.picked.pickedType === \"teams-folder\" &&\n      props.picked.folderID === folderID\n    )\n  }\n}\n\nconst modalLoadingState = ref(false)\nconst exportLoading = ref(false)\nconst duplicateLoading = ref(false)\n\nconst showModalAdd = ref(false)\nconst showModalAddRequest = ref(false)\nconst showModalAddFolder = ref(false)\nconst showModalEditCollection = ref(false)\nconst showModalEditFolder = ref(false)\nconst showModalEditRequest = ref(false)\nconst showModalImportExport = ref(false)\nconst showConfirmModal = ref(false)\nconst showTeamModalAdd = ref(false)\n\nconst displayModalAdd = (show: boolean) => {\n  showModalAdd.value = show\n\n  if (!show) resetSelectedData()\n}\n\nconst displayModalAddRequest = (show: boolean) => {\n  showModalAddRequest.value = show\n\n  if (!show) resetSelectedData()\n}\n\nconst displayModalAddFolder = (show: boolean) => {\n  showModalAddFolder.value = show\n\n  if (!show) resetSelectedData()\n}\n\nconst displayModalEditCollection = (show: boolean) => {\n  showModalEditCollection.value = show\n\n  if (!show) resetSelectedData()\n}\n\nconst displayModalEditFolder = (show: boolean) => {\n  showModalEditFolder.value = show\n\n  if (!show) resetSelectedData()\n}\n\nconst displayModalEditRequest = (show: boolean) => {\n  showModalEditRequest.value = show\n\n  if (!show) resetSelectedData()\n}\n\nconst displayModalImportExport = (show: boolean) => {\n  showModalImportExport.value = show\n\n  if (!show) resetSelectedData()\n}\n\nconst displayConfirmModal = (show: boolean) => {\n  showConfirmModal.value = show\n\n  if (!show) resetSelectedData()\n}\n\nconst displayTeamModalAdd = (show: boolean) => {\n  showTeamModalAdd.value = show\n\n  teamListAdapter.fetchList()\n}\n\nconst addNewRootCollection = (name: string) => {\n  if (collectionsType.value.type === \"my-collections\") {\n    addRESTCollection(\n      makeCollection({\n        name,\n        folders: [],\n        requests: [],\n      })\n    )\n\n    platform.analytics?.logEvent({\n      type: \"HOPP_CREATE_COLLECTION\",\n      platform: \"rest\",\n      workspaceType: \"personal\",\n      isRootCollection: true,\n    })\n\n    displayModalAdd(false)\n  } else if (hasTeamWriteAccess.value) {\n    if (!collectionsType.value.selectedTeam) return\n    modalLoadingState.value = true\n\n    platform.analytics?.logEvent({\n      type: \"HOPP_CREATE_COLLECTION\",\n      platform: \"rest\",\n      workspaceType: \"team\",\n      isRootCollection: true,\n    })\n\n    pipe(\n      createNewRootCollection(name, collectionsType.value.selectedTeam.id),\n      TE.match(\n        (err: GQLError<string>) => {\n          toast.error(`${getErrorMessage(err)}`)\n          modalLoadingState.value = false\n        },\n        () => {\n          modalLoadingState.value = false\n          toast.success(t(\"collection.created\"))\n          displayModalAdd(false)\n        }\n      )\n    )()\n  }\n}\n\nconst addRequest = (payload: {\n  path: string\n  folder: HoppCollection<HoppRESTRequest> | TeamCollection\n}) => {\n  const { path, folder } = payload\n  editingFolder.value = folder\n  editingFolderPath.value = path\n  displayModalAddRequest(true)\n}\n\nconst onAddRequest = (requestName: string) => {\n  const newRequest = {\n    ...cloneDeep(currentActiveTab.value.document.request),\n    name: requestName,\n  }\n\n  if (collectionsType.value.type === \"my-collections\") {\n    const path = editingFolderPath.value\n    if (!path) return\n    const insertionIndex = saveRESTRequestAs(path, newRequest)\n\n    createNewTab({\n      request: newRequest,\n      isDirty: false,\n      saveContext: {\n        originLocation: \"user-collection\",\n        folderPath: path,\n        requestIndex: insertionIndex,\n      },\n    })\n\n    platform.analytics?.logEvent({\n      type: \"HOPP_SAVE_REQUEST\",\n      workspaceType: \"personal\",\n      createdNow: true,\n      platform: \"rest\",\n    })\n\n    displayModalAddRequest(false)\n  } else if (hasTeamWriteAccess.value) {\n    const folder = editingFolder.value\n\n    if (!folder || !collectionsType.value.selectedTeam) return\n    if (!folder.id) return\n\n    modalLoadingState.value = true\n\n    const data = {\n      request: JSON.stringify(newRequest),\n      teamID: collectionsType.value.selectedTeam.id,\n      title: requestName,\n    }\n\n    platform.analytics?.logEvent({\n      type: \"HOPP_SAVE_REQUEST\",\n      workspaceType: \"team\",\n      platform: \"rest\",\n      createdNow: true,\n    })\n\n    pipe(\n      createRequestInCollection(folder.id, data),\n      TE.match(\n        (err: GQLError<string>) => {\n          toast.error(`${getErrorMessage(err)}`)\n          modalLoadingState.value = false\n        },\n        (result) => {\n          const { createRequestInCollection } = result\n\n          createNewTab({\n            request: newRequest,\n            isDirty: false,\n            saveContext: {\n              originLocation: \"team-collection\",\n              requestID: createRequestInCollection.id,\n              collectionID: createRequestInCollection.collection.id,\n              teamID: createRequestInCollection.collection.team.id,\n            },\n          })\n\n          modalLoadingState.value = false\n          displayModalAddRequest(false)\n        }\n      )\n    )()\n  }\n}\n\nconst addFolder = (payload: {\n  path: string\n  folder: HoppCollection<HoppRESTRequest> | TeamCollection\n}) => {\n  const { path, folder } = payload\n  editingFolder.value = folder\n  editingFolderPath.value = path\n  displayModalAddFolder(true)\n}\n\nconst onAddFolder = (folderName: string) => {\n  const path = editingFolderPath.value\n\n  if (collectionsType.value.type === \"my-collections\") {\n    if (!path) return\n    addRESTFolder(folderName, path)\n\n    platform.analytics?.logEvent({\n      type: \"HOPP_CREATE_COLLECTION\",\n      workspaceType: \"personal\",\n      isRootCollection: false,\n      platform: \"rest\",\n    })\n\n    displayModalAddFolder(false)\n  } else if (hasTeamWriteAccess.value) {\n    const folder = editingFolder.value\n    if (!folder || !folder.id) return\n\n    modalLoadingState.value = true\n\n    platform.analytics?.logEvent({\n      type: \"HOPP_CREATE_COLLECTION\",\n      workspaceType: \"personal\",\n      isRootCollection: false,\n      platform: \"rest\",\n    })\n\n    pipe(\n      createChildCollection(folderName, folder.id),\n      TE.match(\n        (err: GQLError<string>) => {\n          if (err.error === \"team_coll/short_title\") {\n            toast.error(t(\"folder.name_length_insufficient\"))\n          } else {\n            toast.error(`${getErrorMessage(err)}`)\n          }\n          modalLoadingState.value = false\n        },\n        () => {\n          toast.success(t(\"folder.created\"))\n          modalLoadingState.value = false\n          displayModalAddFolder(false)\n        }\n      )\n    )()\n  }\n}\n\nconst editCollection = (payload: {\n  collectionIndex: string\n  collection: HoppCollection<HoppRESTRequest> | TeamCollection\n}) => {\n  const { collectionIndex, collection } = payload\n  editingCollection.value = collection\n  if (collectionsType.value.type === \"my-collections\") {\n    editingCollectionIndex.value = parseInt(collectionIndex)\n    editingCollectionName.value = (\n      collection as HoppCollection<HoppRESTRequest>\n    ).name\n  } else {\n    editingCollectionName.value = (collection as TeamCollection).title\n  }\n\n  displayModalEditCollection(true)\n}\n\nconst updateEditingCollection = (newName: string) => {\n  if (!editingCollection.value) return\n\n  if (!newName) {\n    toast.error(t(\"collection.invalid_name\"))\n    return\n  }\n\n  if (collectionsType.value.type === \"my-collections\") {\n    const collectionIndex = editingCollectionIndex.value\n    if (collectionIndex === null) return\n\n    const collectionUpdated = {\n      ...editingCollection.value,\n      name: newName,\n    }\n\n    editRESTCollection(\n      collectionIndex,\n      collectionUpdated as NodeCollection[\"data\"][\"data\"]\n    )\n    displayModalEditCollection(false)\n  } else if (hasTeamWriteAccess.value) {\n    if (!editingCollection.value.id) return\n    modalLoadingState.value = true\n\n    pipe(\n      renameCollection(editingCollection.value.id, newName),\n      TE.match(\n        (err: GQLError<string>) => {\n          toast.error(`${getErrorMessage(err)}`)\n          modalLoadingState.value = false\n        },\n        () => {\n          modalLoadingState.value = false\n          toast.success(t(\"collection.renamed\"))\n          displayModalEditCollection(false)\n        }\n      )\n    )()\n  }\n}\n\nconst editFolder = (payload: {\n  folderPath: string | undefined\n  folder: HoppCollection<HoppRESTRequest> | TeamCollection\n}) => {\n  const { folderPath, folder } = payload\n  editingFolder.value = folder\n  if (collectionsType.value.type === \"my-collections\" && folderPath) {\n    editingFolderPath.value = folderPath\n    editingFolderName.value = (folder as HoppCollection<HoppRESTRequest>).name\n  } else {\n    editingFolderName.value = (folder as TeamCollection).title\n  }\n  displayModalEditFolder(true)\n}\n\nconst updateEditingFolder = (newName: string) => {\n  if (!editingFolder.value) return\n\n  if (collectionsType.value.type === \"my-collections\") {\n    if (!editingFolderPath.value) return\n\n    editRESTFolder(editingFolderPath.value, {\n      ...(editingFolder.value as HoppCollection<HoppRESTRequest>),\n      name: newName,\n    })\n    displayModalEditFolder(false)\n  } else if (hasTeamWriteAccess.value) {\n    if (!editingFolder.value.id) return\n    modalLoadingState.value = true\n\n    /* renameCollection can be used to rename both collections and folders\n     since folder is treated as collection in the BE. */\n    pipe(\n      renameCollection(editingFolder.value.id, newName),\n      TE.match(\n        (err: GQLError<string>) => {\n          if (err.error === \"team_coll/short_title\") {\n            toast.error(t(\"folder.name_length_insufficient\"))\n          } else {\n            toast.error(`${getErrorMessage(err)}`)\n          }\n          modalLoadingState.value = false\n        },\n        () => {\n          modalLoadingState.value = false\n          toast.success(t(\"folder.renamed\"))\n          displayModalEditFolder(false)\n        }\n      )\n    )()\n  }\n}\n\nconst editRequest = (payload: {\n  folderPath: string | undefined\n  requestIndex: string\n  request: HoppRESTRequest\n}) => {\n  const { folderPath, requestIndex, request } = payload\n  editingRequest.value = request\n  editingRequestName.value = request.name ?? \"\"\n  if (collectionsType.value.type === \"my-collections\" && folderPath) {\n    editingFolderPath.value = folderPath\n    editingRequestIndex.value = parseInt(requestIndex)\n  } else {\n    editingRequestID.value = requestIndex\n  }\n  displayModalEditRequest(true)\n}\n\nconst updateEditingRequest = (newName: string) => {\n  const request = editingRequest.value\n  if (!request) return\n\n  const requestUpdated = {\n    ...request,\n    name: newName || request.name,\n  }\n  if (collectionsType.value.type === \"my-collections\") {\n    const folderPath = editingFolderPath.value\n    const requestIndex = editingRequestIndex.value\n\n    if (folderPath === null || requestIndex === null) return\n\n    const possibleActiveTab = getTabRefWithSaveContext({\n      originLocation: \"user-collection\",\n      requestIndex,\n      folderPath,\n    })\n\n    editRESTRequest(folderPath, requestIndex, requestUpdated)\n\n    if (possibleActiveTab) {\n      possibleActiveTab.value.document.request.name = requestUpdated.name\n      nextTick(() => {\n        possibleActiveTab.value.document.isDirty = false\n      })\n    }\n\n    displayModalEditRequest(false)\n  } else if (hasTeamWriteAccess.value) {\n    modalLoadingState.value = true\n\n    const requestID = editingRequestID.value\n    const requestName = newName || request.name\n\n    if (!requestID) return\n\n    const data = {\n      request: JSON.stringify(requestUpdated),\n      title: requestName,\n    }\n\n    pipe(\n      updateTeamRequest(requestID, data),\n      TE.match(\n        (err: GQLError<string>) => {\n          toast.error(`${getErrorMessage(err)}`)\n          modalLoadingState.value = false\n        },\n        () => {\n          modalLoadingState.value = false\n          toast.success(t(\"request.renamed\"))\n          displayModalEditRequest(false)\n        }\n      )\n    )()\n\n    const possibleTab = getTabRefWithSaveContext({\n      originLocation: \"team-collection\",\n      requestID,\n    })\n\n    if (possibleTab) {\n      possibleTab.value.document.request.name = requestName\n      nextTick(() => {\n        possibleTab.value.document.isDirty = false\n      })\n    }\n  }\n}\n\nconst duplicateRequest = (payload: {\n  folderPath: string\n  request: HoppRESTRequest\n}) => {\n  const { folderPath, request } = payload\n  if (!folderPath) return\n\n  const newRequest = {\n    ...cloneDeep(request),\n    name: `${request.name} - ${t(\"action.duplicate\")}`,\n  }\n\n  if (collectionsType.value.type === \"my-collections\") {\n    saveRESTRequestAs(folderPath, newRequest)\n    toast.success(t(\"request.duplicated\"))\n  } else if (hasTeamWriteAccess.value) {\n    duplicateLoading.value = true\n\n    if (!collectionsType.value.selectedTeam) return\n\n    const data = {\n      request: JSON.stringify(newRequest),\n      teamID: collectionsType.value.selectedTeam.id,\n      title: `${request.name} - ${t(\"action.duplicate\")}`,\n    }\n\n    pipe(\n      createRequestInCollection(folderPath, data),\n      TE.match(\n        (err: GQLError<string>) => {\n          toast.error(`${getErrorMessage(err)}`)\n          duplicateLoading.value = false\n        },\n        () => {\n          duplicateLoading.value = false\n          toast.success(t(\"request.duplicated\"))\n          displayModalAddRequest(false)\n        }\n      )\n    )()\n  }\n}\n\nconst removeCollection = (id: string) => {\n  if (collectionsType.value.type === \"my-collections\")\n    editingCollectionIndex.value = parseInt(id)\n  else editingCollectionID.value = id\n\n  confirmModalTitle.value = `${t(\"confirm.remove_collection\")}`\n  displayConfirmModal(true)\n}\n\n/**\n * Used to delete both collections and folders\n * since folder is treated as collection in the BE.\n * @param collectionID - ID of the collection or folder to be deleted.\n */\nconst removeTeamCollectionOrFolder = async (collectionID: string) => {\n  modalLoadingState.value = true\n\n  await pipe(\n    deleteCollection(collectionID),\n    TE.match(\n      (err: GQLError<string>) => {\n        toast.error(`${getErrorMessage(err)}`)\n        modalLoadingState.value = false\n      },\n      () => {\n        modalLoadingState.value = false\n        toast.success(t(\"state.deleted\"))\n        displayConfirmModal(false)\n      }\n    )\n  )()\n}\n\nconst onRemoveCollection = () => {\n  if (collectionsType.value.type === \"my-collections\") {\n    const collectionIndex = editingCollectionIndex.value\n\n    const collectionToRemove =\n      collectionIndex || collectionIndex == 0\n        ? navigateToFolderWithIndexPath(restCollectionStore.value.state, [\n            collectionIndex,\n          ])\n        : undefined\n\n    if (collectionIndex === null) return\n\n    if (\n      isSelected({\n        collectionIndex,\n      })\n    ) {\n      emit(\"select\", null)\n    }\n\n    removeRESTCollection(\n      collectionIndex,\n      collectionToRemove ? collectionToRemove.id : undefined\n    )\n\n    resolveSaveContextOnCollectionReorder({\n      lastIndex: collectionIndex,\n      newIndex: -1,\n      folderPath: \"\", // root folder\n      length: myCollections.value.length,\n    })\n\n    toast.success(t(\"state.deleted\"))\n    displayConfirmModal(false)\n  } else if (hasTeamWriteAccess.value) {\n    const collectionID = editingCollectionID.value\n\n    if (!collectionID) return\n\n    if (\n      isSelected({\n        collectionID,\n      })\n    ) {\n      emit(\"select\", null)\n    }\n\n    removeTeamCollectionOrFolder(collectionID).then(() => {\n      resetTeamRequestsContext()\n    })\n  }\n}\n\nconst removeFolder = (id: string) => {\n  if (collectionsType.value.type === \"my-collections\")\n    editingFolderPath.value = id\n  else editingCollectionID.value = id\n\n  confirmModalTitle.value = `${t(\"confirm.remove_folder\")}`\n  displayConfirmModal(true)\n}\n\nconst onRemoveFolder = () => {\n  if (collectionsType.value.type === \"my-collections\") {\n    const folderPath = editingFolderPath.value\n\n    if (!folderPath) return\n\n    if (\n      isSelected({\n        folderPath,\n      })\n    ) {\n      emit(\"select\", null)\n    }\n\n    const folderToRemove = folderPath\n      ? navigateToFolderWithIndexPath(\n          restCollectionStore.value.state,\n          folderPath.split(\"/\").map((i) => parseInt(i))\n        )\n      : undefined\n\n    removeRESTFolder(folderPath, folderToRemove ? folderToRemove.id : undefined)\n\n    const parentFolder = folderPath.split(\"/\").slice(0, -1).join(\"/\") // remove last folder to get parent folder\n    resolveSaveContextOnCollectionReorder({\n      lastIndex: pathToLastIndex(folderPath),\n      newIndex: -1,\n      folderPath: parentFolder,\n      length: getFoldersByPath(myCollections.value, parentFolder).length,\n    })\n\n    toast.success(t(\"state.deleted\"))\n    displayConfirmModal(false)\n  } else if (hasTeamWriteAccess.value) {\n    const collectionID = editingCollectionID.value\n\n    if (!collectionID) return\n\n    if (\n      isSelected({\n        collectionID,\n      })\n    ) {\n      emit(\"select\", null)\n    }\n\n    removeTeamCollectionOrFolder(collectionID).then(() => {\n      resetTeamRequestsContext()\n    })\n  }\n}\n\nconst removeRequest = (payload: {\n  folderPath: string | null\n  requestIndex: string\n}) => {\n  const { folderPath, requestIndex } = payload\n  if (collectionsType.value.type === \"my-collections\" && folderPath) {\n    editingFolderPath.value = folderPath\n    editingRequestIndex.value = parseInt(requestIndex)\n  } else {\n    editingRequestID.value = requestIndex\n  }\n  confirmModalTitle.value = `${t(\"confirm.remove_request\")}`\n  displayConfirmModal(true)\n}\n\nconst onRemoveRequest = () => {\n  if (collectionsType.value.type === \"my-collections\") {\n    const folderPath = editingFolderPath.value\n    const requestIndex = editingRequestIndex.value\n\n    if (folderPath === null || requestIndex === null) return\n\n    if (\n      isSelected({\n        folderPath,\n        requestIndex,\n      })\n    ) {\n      emit(\"select\", null)\n    }\n\n    const possibleTab = getTabRefWithSaveContext({\n      originLocation: \"user-collection\",\n      folderPath,\n      requestIndex,\n    })\n\n    // If there is a tab attached to this request, dissociate its state and mark it dirty\n    if (possibleTab) {\n      possibleTab.value.document.saveContext = null\n      possibleTab.value.document.isDirty = true\n    }\n\n    const requestToRemove = navigateToFolderWithIndexPath(\n      restCollectionStore.value.state,\n      folderPath.split(\"/\").map((i) => parseInt(i))\n    )?.requests[requestIndex]\n\n    removeRESTRequest(folderPath, requestIndex, requestToRemove?.id)\n\n    // the same function is used to reorder requests since after removing, it's basically doing reorder\n    resolveSaveContextOnRequestReorder({\n      lastIndex: requestIndex,\n      newIndex: -1,\n      folderPath,\n      length: getRequestsByPath(myCollections.value, folderPath).length,\n    })\n\n    toast.success(t(\"state.deleted\"))\n    displayConfirmModal(false)\n  } else if (hasTeamWriteAccess.value) {\n    const requestID = editingRequestID.value\n\n    if (!requestID) return\n\n    if (\n      isSelected({\n        requestID,\n      })\n    ) {\n      emit(\"select\", null)\n    }\n\n    modalLoadingState.value = true\n\n    pipe(\n      deleteTeamRequest(requestID),\n      TE.match(\n        (err: GQLError<string>) => {\n          toast.error(`${getErrorMessage(err)}`)\n          modalLoadingState.value = false\n        },\n        () => {\n          modalLoadingState.value = false\n          toast.success(t(\"state.deleted\"))\n          displayConfirmModal(false)\n        }\n      )\n    )()\n\n    // If there is a tab attached to this request, dissociate its state and mark it dirty\n    const possibleTab = getTabRefWithSaveContext({\n      originLocation: \"team-collection\",\n      requestID,\n    })\n\n    if (possibleTab) {\n      possibleTab.value.document.saveContext = null\n      possibleTab.value.document.isDirty = true\n    }\n  }\n}\n\n// The request is picked in the save request as modal\nconst selectPicked = (payload: Picked | null) => {\n  emit(\"select\", payload)\n}\n\n/**\n * This function is called when the user clicks on a request\n * @param selectedRequest The request that the user clicked on emited from the collection tree\n */\nconst selectRequest = (selectedRequest: {\n  request: HoppRESTRequest\n  folderPath: string | undefined\n  requestIndex: string\n  isActive: boolean\n}) => {\n  const { request, folderPath, requestIndex } = selectedRequest\n\n  // If there is a request with this save context, switch into it\n  let possibleTab = null\n\n  if (collectionsType.value.type === \"team-collections\") {\n    possibleTab = getTabRefWithSaveContext({\n      originLocation: \"team-collection\",\n      requestID: requestIndex,\n    })\n    if (possibleTab) {\n      currentTabID.value = possibleTab.value.id\n    } else {\n      createNewTab({\n        request: cloneDeep(request),\n        isDirty: false,\n        saveContext: {\n          originLocation: \"team-collection\",\n          requestID: requestIndex,\n        },\n      })\n    }\n  } else {\n    possibleTab = getTabRefWithSaveContext({\n      originLocation: \"user-collection\",\n      requestIndex: parseInt(requestIndex),\n      folderPath: folderPath!,\n    })\n    if (possibleTab) {\n      currentTabID.value = possibleTab.value.id\n    } else {\n      // If not, open the request in a new tab\n      createNewTab({\n        request: cloneDeep(request),\n        isDirty: false,\n        saveContext: {\n          originLocation: \"user-collection\",\n          folderPath: folderPath!,\n          requestIndex: parseInt(requestIndex),\n        },\n      })\n    }\n  }\n}\n\n/**\n * Used to get the index of the request from the path\n * @param path The path of the request\n * @returns The index of the request\n */\nconst pathToLastIndex = (path: string) => {\n  const pathArr = path.split(\"/\")\n  return parseInt(pathArr[pathArr.length - 1])\n}\n\n/**\n * This function is called when the user drops the request inside a collection\n * @param payload Object that contains the folder path, request index and the destination collection index\n */\nconst dropRequest = (payload: {\n  folderPath?: string | undefined\n  requestIndex: string\n  destinationCollectionIndex: string\n}) => {\n  const { folderPath, requestIndex, destinationCollectionIndex } = payload\n\n  if (!requestIndex || !destinationCollectionIndex) return\n\n  if (collectionsType.value.type === \"my-collections\" && folderPath) {\n    moveRESTRequest(\n      folderPath,\n      pathToLastIndex(requestIndex),\n      destinationCollectionIndex\n    )\n\n    const possibleTab = getTabRefWithSaveContext({\n      originLocation: \"user-collection\",\n      folderPath,\n      requestIndex: pathToLastIndex(requestIndex),\n    })\n\n    // If there is a tab attached to this request, change save its save context\n    if (possibleTab) {\n      possibleTab.value.document.saveContext = {\n        originLocation: \"user-collection\",\n        folderPath: destinationCollectionIndex,\n        requestIndex: getRequestsByPath(\n          myCollections.value,\n          destinationCollectionIndex\n        ).length,\n      }\n    }\n\n    // When it's drop it's basically getting deleted from last folder. reordering last folder accordingly\n    resolveSaveContextOnRequestReorder({\n      lastIndex: pathToLastIndex(requestIndex),\n      newIndex: -1, // being deleted from last folder\n      folderPath,\n      length: getRequestsByPath(myCollections.value, folderPath).length,\n    })\n\n    toast.success(`${t(\"request.moved\")}`)\n    draggingToRoot.value = false\n  } else if (hasTeamWriteAccess.value) {\n    // add the request index to the loading array\n    requestMoveLoading.value.push(requestIndex)\n\n    pipe(\n      moveRESTTeamRequest(destinationCollectionIndex, requestIndex),\n      TE.match(\n        (err: GQLError<string>) => {\n          toast.error(`${getErrorMessage(err)}`)\n          requestMoveLoading.value.splice(\n            requestMoveLoading.value.indexOf(requestIndex),\n            1\n          )\n        },\n        () => {\n          // remove the request index from the loading array\n          requestMoveLoading.value.splice(\n            requestMoveLoading.value.indexOf(requestIndex),\n            1\n          )\n\n          const possibleTab = getTabRefWithSaveContext({\n            originLocation: \"team-collection\",\n            requestID: requestIndex,\n          })\n\n          if (possibleTab) {\n            possibleTab.value.document.saveContext = {\n              originLocation: \"team-collection\",\n              requestID: requestIndex,\n            }\n          }\n          toast.success(`${t(\"request.moved\")}`)\n        }\n      )\n    )()\n  }\n}\n\n/**\n * @param path The path of the collection or request\n * @returns The index of the collection or request\n */\nconst pathToIndex = (path: string) => {\n  const pathArr = path.split(\"/\")\n  return pathArr\n}\n\n/**\n * Used to check if the collection exist as the parent of the childrens\n * @param collectionIndexDragged The index of the collection dragged\n * @param destinationCollectionIndex The index of the destination collection\n * @returns True if the collection exist as the parent of the childrens\n */\nconst checkIfCollectionIsAParentOfTheChildren = (\n  collectionIndexDragged: string,\n  destinationCollectionIndex: string\n) => {\n  const collectionDraggedPath = pathToIndex(collectionIndexDragged)\n  const destinationCollectionPath = pathToIndex(destinationCollectionIndex)\n\n  if (collectionDraggedPath.length < destinationCollectionPath.length) {\n    const slicedDestinationCollectionPath = destinationCollectionPath.slice(\n      0,\n      collectionDraggedPath.length\n    )\n    if (isEqual(slicedDestinationCollectionPath, collectionDraggedPath)) {\n      return true\n    } else {\n      return false\n    }\n  }\n\n  return false\n}\n\nconst isMoveToSameLocation = (\n  draggedItemPath: string,\n  destinationPath: string\n) => {\n  const draggedItemPathArr = pathToIndex(draggedItemPath)\n  const destinationPathArr = pathToIndex(destinationPath)\n\n  if (draggedItemPathArr.length > 0) {\n    const draggedItemParentPathArr = draggedItemPathArr.slice(\n      0,\n      draggedItemPathArr.length - 1\n    )\n\n    if (isEqual(draggedItemParentPathArr, destinationPathArr)) {\n      return true\n    } else {\n      return false\n    }\n  }\n}\n\n/**\n * This function is called when the user moves the collection\n * to a different collection or folder\n * @param payload - object containing the collection index dragged and the destination collection index\n */\nconst dropCollection = (payload: {\n  collectionIndexDragged: string\n  destinationCollectionIndex: string\n}) => {\n  const { collectionIndexDragged, destinationCollectionIndex } = payload\n  if (!collectionIndexDragged || !destinationCollectionIndex) return\n  if (collectionIndexDragged === destinationCollectionIndex) return\n\n  if (collectionsType.value.type === \"my-collections\") {\n    if (\n      checkIfCollectionIsAParentOfTheChildren(\n        collectionIndexDragged,\n        destinationCollectionIndex\n      )\n    ) {\n      toast.error(`${t(\"team.parent_coll_move\")}`)\n      return\n    }\n\n    //check if the collection is being moved to its own parent\n    if (\n      isMoveToSameLocation(collectionIndexDragged, destinationCollectionIndex)\n    ) {\n      return\n    }\n\n    const parentFolder = collectionIndexDragged\n      .split(\"/\")\n      .slice(0, -1)\n      .join(\"/\") // remove last folder to get parent folder\n    const totalFoldersOfDestinationCollection =\n      getFoldersByPath(myCollections.value, destinationCollectionIndex).length -\n      (parentFolder === destinationCollectionIndex ? 1 : 0)\n\n    moveRESTFolder(collectionIndexDragged, destinationCollectionIndex)\n\n    resolveSaveContextOnCollectionReorder(\n      {\n        lastIndex: pathToLastIndex(collectionIndexDragged),\n        newIndex: -1,\n        folderPath: parentFolder,\n        length: getFoldersByPath(myCollections.value, parentFolder).length,\n      },\n      \"drop\"\n    )\n\n    updateSaveContextForAffectedRequests(\n      collectionIndexDragged,\n      `${destinationCollectionIndex}/${totalFoldersOfDestinationCollection}`\n    )\n\n    draggingToRoot.value = false\n    toast.success(`${t(\"collection.moved\")}`)\n  } else if (hasTeamWriteAccess.value) {\n    // add the collection index to the loading array\n    collectionMoveLoading.value.push(collectionIndexDragged)\n    pipe(\n      moveRESTTeamCollection(\n        collectionIndexDragged,\n        destinationCollectionIndex\n      ),\n      TE.match(\n        (err: GQLError<string>) => {\n          toast.error(`${getErrorMessage(err)}`)\n          collectionMoveLoading.value.splice(\n            collectionMoveLoading.value.indexOf(collectionIndexDragged),\n            1\n          )\n        },\n        () => {\n          toast.success(`${t(\"collection.moved\")}`)\n          // remove the collection index from the loading array\n          collectionMoveLoading.value.splice(\n            collectionMoveLoading.value.indexOf(collectionIndexDragged),\n            1\n          )\n        }\n      )\n    )()\n  }\n}\n\n/**\n * Checks if the collection is already in the root\n * @param id - path of the collection\n * @returns boolean - true if the collection is already in the root\n */\nconst isAlreadyInRoot = (id: string) => {\n  const indexPath = pathToIndex(id)\n  return indexPath.length === 1\n}\n\n/**\n * This function is called when the user drops the collection\n * to the root\n * @param payload - object containing the collection index dragged\n */\nconst dropToRoot = ({ dataTransfer }: DragEvent) => {\n  if (dataTransfer) {\n    const collectionIndexDragged = dataTransfer.getData(\"collectionIndex\")\n    if (!collectionIndexDragged) return\n    if (collectionsType.value.type === \"my-collections\") {\n      // check if the collection is already in the root\n      if (isAlreadyInRoot(collectionIndexDragged)) {\n        toast.error(`${t(\"collection.invalid_root_move\")}`)\n      } else {\n        moveRESTFolder(collectionIndexDragged, null)\n        toast.success(`${t(\"collection.moved\")}`)\n      }\n\n      draggingToRoot.value = false\n    } else if (hasTeamWriteAccess.value) {\n      // add the collection index to the loading array\n      collectionMoveLoading.value.push(collectionIndexDragged)\n\n      // destination collection index is null since we are moving to root\n      pipe(\n        moveRESTTeamCollection(collectionIndexDragged, null),\n        TE.match(\n          (err: GQLError<string>) => {\n            collectionMoveLoading.value.splice(\n              collectionMoveLoading.value.indexOf(collectionIndexDragged),\n              1\n            )\n            toast.error(`${getErrorMessage(err)}`)\n          },\n          () => {\n            // remove the collection index from the loading array\n            collectionMoveLoading.value.splice(\n              collectionMoveLoading.value.indexOf(collectionIndexDragged),\n              1\n            )\n            toast.success(`${t(\"collection.moved\")}`)\n          }\n        )\n      )()\n    }\n  }\n}\n\n/**\n * Used to check if the request/collection is being moved to the same parent since reorder is only allowed within the same parent\n * @param draggedItem - path index of the dragged request\n * @param destinationItem - path index of the destination request\n * @param destinationCollectionIndex -  index of the destination collection\n * @returns boolean - true if the request is being moved to the same parent\n */\nconst isSameSameParent = (\n  draggedItemPath: string,\n  destinationItemPath: string | null,\n  destinationCollectionIndex: string | null\n) => {\n  const draggedItemIndex = pathToIndex(draggedItemPath)\n\n  // if the destinationItemPath and destinationCollectionIndex is null, it means the request is being moved to the root\n  if (destinationItemPath === null && destinationCollectionIndex === null) {\n    return draggedItemIndex.length === 1\n  } else if (\n    destinationItemPath === null &&\n    destinationCollectionIndex !== null &&\n    draggedItemIndex.length === 1\n  ) {\n    return draggedItemIndex[0] === destinationCollectionIndex\n  } else if (\n    destinationItemPath === null &&\n    draggedItemIndex.length !== 1 &&\n    destinationCollectionIndex !== null\n  ) {\n    const dragedItemParent = draggedItemIndex.slice(0, -1)\n\n    return dragedItemParent.join(\"/\") === destinationCollectionIndex\n  } else {\n    if (destinationItemPath === null) return false\n    const destinationItemIndex = pathToIndex(destinationItemPath)\n\n    // length of 1 means the request is in the root\n    if (draggedItemIndex.length === 1 && destinationItemIndex.length === 1) {\n      return true\n    } else if (draggedItemIndex.length === destinationItemIndex.length) {\n      const dragedItemParent = draggedItemIndex.slice(0, -1)\n      const destinationItemParent = destinationItemIndex.slice(0, -1)\n      if (isEqual(dragedItemParent, destinationItemParent)) {\n        return true\n      } else {\n        return false\n      }\n    } else {\n      return false\n    }\n  }\n}\n\n/**\n * This function is called when the user updates the request order in a collection\n * @param payload - object containing the request index dragged and the destination request index\n *  with the destination collection index\n */\nconst updateRequestOrder = (payload: {\n  dragedRequestIndex: string\n  destinationRequestIndex: string | null\n  destinationCollectionIndex: string\n}) => {\n  const {\n    dragedRequestIndex,\n    destinationRequestIndex,\n    destinationCollectionIndex,\n  } = payload\n\n  if (!dragedRequestIndex || !destinationCollectionIndex) return\n\n  if (dragedRequestIndex === destinationRequestIndex) return\n\n  if (collectionsType.value.type === \"my-collections\") {\n    if (\n      !isSameSameParent(\n        dragedRequestIndex,\n        destinationRequestIndex,\n        destinationCollectionIndex\n      )\n    ) {\n      toast.error(`${t(\"collection.different_parent\")}`)\n    } else {\n      updateRESTRequestOrder(\n        pathToLastIndex(dragedRequestIndex),\n        destinationRequestIndex\n          ? pathToLastIndex(destinationRequestIndex)\n          : null,\n        destinationCollectionIndex\n      )\n\n      toast.success(`${t(\"request.order_changed\")}`)\n    }\n  } else if (hasTeamWriteAccess.value) {\n    // add the request index to the loading array\n    requestMoveLoading.value.push(dragedRequestIndex)\n\n    pipe(\n      updateOrderRESTTeamRequest(\n        dragedRequestIndex,\n        destinationRequestIndex,\n        destinationCollectionIndex\n      ),\n      TE.match(\n        (err: GQLError<string>) => {\n          toast.error(`${getErrorMessage(err)}`)\n          requestMoveLoading.value.splice(\n            requestMoveLoading.value.indexOf(dragedRequestIndex),\n            1\n          )\n        },\n        () => {\n          toast.success(`${t(\"request.order_changed\")}`)\n\n          // remove the request index from the loading array\n          requestMoveLoading.value.splice(\n            requestMoveLoading.value.indexOf(dragedRequestIndex),\n            1\n          )\n        }\n      )\n    )()\n  }\n}\n\n/**\n * This function is called when the user updates the collection or folder order\n * @param payload - object containing the collection index dragged and the destination collection index\n */\nconst updateCollectionOrder = (payload: {\n  dragedCollectionIndex: string\n  destinationCollection: {\n    destinationCollectionIndex: string | null\n    destinationCollectionParentIndex: string | null\n  }\n}) => {\n  const { dragedCollectionIndex, destinationCollection } = payload\n  const { destinationCollectionIndex, destinationCollectionParentIndex } =\n    destinationCollection\n  if (!dragedCollectionIndex) return\n  if (dragedCollectionIndex === destinationCollectionIndex) return\n\n  if (collectionsType.value.type === \"my-collections\") {\n    if (\n      !isSameSameParent(\n        dragedCollectionIndex,\n        destinationCollectionIndex,\n        destinationCollectionParentIndex\n      )\n    ) {\n      toast.error(`${t(\"collection.different_parent\")}`)\n    } else {\n      updateRESTCollectionOrder(\n        dragedCollectionIndex,\n        destinationCollectionIndex\n      )\n      resolveSaveContextOnCollectionReorder({\n        lastIndex: pathToLastIndex(dragedCollectionIndex),\n        newIndex: pathToLastIndex(\n          destinationCollectionIndex ? destinationCollectionIndex : \"\"\n        ),\n        folderPath: dragedCollectionIndex.split(\"/\").slice(0, -1).join(\"/\"),\n      })\n      toast.success(`${t(\"collection.order_changed\")}`)\n    }\n  } else if (hasTeamWriteAccess.value) {\n    collectionMoveLoading.value.push(dragedCollectionIndex)\n    pipe(\n      updateOrderRESTTeamCollection(\n        dragedCollectionIndex,\n        destinationCollectionIndex\n      ),\n      TE.match(\n        (err: GQLError<string>) => {\n          toast.error(`${getErrorMessage(err)}`)\n          collectionMoveLoading.value.splice(\n            collectionMoveLoading.value.indexOf(dragedCollectionIndex),\n            1\n          )\n        },\n        () => {\n          toast.success(`${t(\"collection.order_changed\")}`)\n          collectionMoveLoading.value.splice(\n            collectionMoveLoading.value.indexOf(dragedCollectionIndex),\n            1\n          )\n        }\n      )\n    )()\n  }\n}\n// Import - Export Collection functions\n/**\n * Export the whole my collection or specific team collection to JSON\n */\nconst getJSONCollection = async () => {\n  if (collectionsType.value.type === \"my-collections\") {\n    collectionJSON.value = JSON.stringify(myCollections.value, null, 2)\n  } else {\n    if (!collectionsType.value.selectedTeam) return\n    exportingTeamCollections.value = true\n    pipe(\n      await getTeamCollectionJSON(collectionsType.value.selectedTeam.id),\n      E.match(\n        (err) => {\n          toast.error(`${getErrorMessage(err)}`)\n          exportingTeamCollections.value = false\n        },\n        (result) => {\n          const { exportCollectionsToJSON } = result\n          collectionJSON.value = exportCollectionsToJSON\n          exportingTeamCollections.value = false\n        }\n      )\n    )\n  }\n\n  return collectionJSON.value\n}\n\n/**\n * Create a downloadable file from a collection and prompts the user to download it.\n * @param collectionJSON - JSON string of the collection\n * @param name - Name of the collection set as the file name\n */\nconst initializeDownloadCollection = (\n  collectionJSON: string,\n  name: string | null\n) => {\n  const file = new Blob([collectionJSON], { type: \"application/json\" })\n  const a = document.createElement(\"a\")\n  const url = URL.createObjectURL(file)\n  a.href = url\n\n  if (name) {\n    a.download = `${name}.json`\n  } else {\n    a.download = `${url.split(\"/\").pop()!.split(\"#\")[0].split(\"?\")[0]}.json`\n  }\n\n  document.body.appendChild(a)\n  a.click()\n  toast.success(t(\"state.download_started\").toString())\n  setTimeout(() => {\n    document.body.removeChild(a)\n    URL.revokeObjectURL(url)\n  }, 1000)\n}\n\n/**\n * Export a specific collection or folder\n * Triggered by the export button in the tippy menu\n * @param collection - Collection or folder to be exported\n */\nconst exportData = async (\n  collection: HoppCollection<HoppRESTRequest> | TeamCollection\n) => {\n  if (collectionsType.value.type === \"my-collections\") {\n    const collectionJSON = JSON.stringify(collection)\n\n    const name = (collection as HoppCollection<HoppRESTRequest>).name\n\n    initializeDownloadCollection(collectionJSON, name)\n  } else {\n    if (!collection.id) return\n    exportLoading.value = true\n\n    pipe(\n      getCompleteCollectionTree(collection.id),\n      TE.match(\n        (err: GQLError<string>) => {\n          toast.error(`${getErrorMessage(err)}`)\n          exportLoading.value = false\n          return\n        },\n        (coll) => {\n          const hoppColl = teamCollToHoppRESTColl(coll)\n          const collectionJSONString = JSON.stringify(hoppColl)\n\n          initializeDownloadCollection(collectionJSONString, hoppColl.name)\n          exportLoading.value = false\n        }\n      )\n    )()\n  }\n}\n\nconst exportJSONCollection = async () => {\n  platform.analytics?.logEvent({\n    type: \"HOPP_EXPORT_COLLECTION\",\n    exporter: \"json\",\n    platform: \"rest\",\n  })\n\n  await getJSONCollection()\n\n  initializeDownloadCollection(collectionJSON.value, null)\n}\n\nconst createCollectionGist = async () => {\n  if (!currentUser.value || !currentUser.value.accessToken) {\n    toast.error(t(\"profile.no_permission\").toString())\n    return\n  }\n\n  platform.analytics?.logEvent({\n    type: \"HOPP_EXPORT_COLLECTION\",\n    exporter: \"gist\",\n    platform: \"rest\",\n  })\n\n  creatingGistCollection.value = true\n  await getJSONCollection()\n\n  pipe(\n    createCollectionGists(collectionJSON.value, currentUser.value.accessToken),\n    TE.match(\n      (err) => {\n        toast.error(t(\"error.something_went_wrong\").toString())\n        console.error(err)\n        creatingGistCollection.value = false\n      },\n      (result) => {\n        toast.success(t(\"export.gist_created\").toString())\n        creatingGistCollection.value = false\n        window.open(result.data.html_url)\n      }\n    )\n  )()\n}\n\nconst importToTeams = async (collection: HoppCollection<HoppRESTRequest>[]) => {\n  if (!hasTeamWriteAccess.value) {\n    toast.error(t(\"team.no_access\").toString())\n    return\n  }\n\n  if (!collectionsType.value.selectedTeam) return\n\n  importingMyCollections.value = true\n\n  platform.analytics?.logEvent({\n    type: \"HOPP_EXPORT_COLLECTION\",\n    exporter: \"import-to-teams\",\n    platform: \"rest\",\n  })\n\n  pipe(\n    importJSONToTeam(\n      JSON.stringify(collection),\n      collectionsType.value.selectedTeam.id\n    ),\n    TE.match(\n      (err: GQLError<string>) => {\n        toast.error(`${getErrorMessage(err)}`)\n        importingMyCollections.value = false\n      },\n      () => {\n        importingMyCollections.value = false\n        displayModalImportExport(false)\n      }\n    )\n  )()\n}\n\nconst resolveConfirmModal = (title: string | null) => {\n  if (title === `${t(\"confirm.remove_collection\")}`) onRemoveCollection()\n  else if (title === `${t(\"confirm.remove_request\")}`) onRemoveRequest()\n  else if (title === `${t(\"confirm.remove_folder\")}`) onRemoveFolder()\n  else {\n    console.error(\n      `Confirm modal title ${title} is not handled by the component`\n    )\n    toast.error(t(\"error.something_went_wrong\"))\n    displayConfirmModal(false)\n  }\n}\n\nconst resetSelectedData = () => {\n  editingCollection.value = null\n  editingCollectionIndex.value = null\n  editingCollectionID.value = null\n  editingFolder.value = null\n  editingFolderPath.value = null\n  editingRequest.value = null\n  editingRequestIndex.value = null\n  editingRequestID.value = null\n  confirmModalTitle.value = null\n}\n\nconst getErrorMessage = (err: GQLError<string>) => {\n  console.error(err)\n  if (err.type === \"network_error\") {\n    return t(\"error.network_error\")\n  } else {\n    switch (err.error) {\n      case \"team_coll/short_title\":\n        return t(\"collection.name_length_insufficient\")\n      case \"team/invalid_coll_id\":\n      case \"bug/team_coll/no_coll_id\":\n      case \"team_req/invalid_target_id\":\n        return t(\"team.invalid_coll_id\")\n      case \"team/not_required_role\":\n        return t(\"profile.no_permission\")\n      case \"team_req/not_required_role\":\n        return t(\"profile.no_permission\")\n      case \"Forbidden resource\":\n        return t(\"profile.no_permission\")\n      case \"team_req/not_found\":\n        return t(\"team.no_request_found\")\n      case \"bug/team_req/no_req_id\":\n        return t(\"team.no_request_found\")\n      case \"team/collection_is_parent_coll\":\n        return t(\"team.parent_coll_move\")\n      case \"team/target_and_destination_collection_are_same\":\n        return t(\"team.same_target_destination\")\n      case \"team/target_collection_is_already_root_collection\":\n        return t(\"collection.invalid_root_move\")\n      case \"team_req/requests_not_from_same_collection\":\n        return t(\"request.different_collection\")\n      case \"team/team_collections_have_different_parents\":\n        return t(\"collection.different_parent\")\n      default:\n        return t(\"error.something_went_wrong\")\n    }\n  }\n}\n</script>\n","<template>\n  <HoppSmartModal\n    v-if=\"show\"\n    dialog\n    :title=\"`${t('modal.collections')}`\"\n    styles=\"sm:max-w-md\"\n    @close=\"hideModal\"\n  >\n    <template #actions>\n      <span>\n        <tippy interactive trigger=\"click\" theme=\"popover\">\n          <HoppButtonSecondary\n            v-tippy=\"{ theme: 'tooltip' }\"\n            :title=\"t('action.more')\"\n            :icon=\"IconMoreVertical\"\n            :on-shown=\"() => tippyActions.focus()\"\n          />\n          <template #content=\"{ hide }\">\n            <div\n              ref=\"tippyActions\"\n              class=\"flex flex-col focus:outline-none\"\n              tabindex=\"0\"\n              @keyup.escape=\"hide()\"\n            >\n              <HoppSmartItem\n                :icon=\"IconGithub\"\n                :label=\"t('import.from_gist')\"\n                @click=\"\n                  () => {\n                    readCollectionGist()\n                    hide()\n                  }\n                \"\n              />\n              <span\n                v-tippy=\"{ theme: 'tooltip' }\"\n                :title=\"\n                  !currentUser\n                    ? `${t('export.require_github')}`\n                    : currentUser.provider !== 'github.com'\n                    ? `${t('export.require_github')}`\n                    : undefined\n                \"\n              >\n                <HoppSmartItem\n                  :disabled=\"\n                    !currentUser\n                      ? true\n                      : currentUser.provider !== 'github.com'\n                      ? true\n                      : false\n                  \"\n                  :icon=\"IconGithub\"\n                  :label=\"t('export.create_secret_gist')\"\n                  @click=\"\n                    () => {\n                      createCollectionGist()\n                      hide()\n                    }\n                  \"\n                />\n              </span>\n            </div>\n          </template>\n        </tippy>\n      </span>\n    </template>\n    <template #body>\n      <div class=\"flex flex-col space-y-2\">\n        <HoppSmartItem\n          :icon=\"IconFolderPlus\"\n          :label=\"t('import.from_json')\"\n          @click=\"openDialogChooseFileToImportFrom\"\n        />\n        <input\n          ref=\"inputChooseFileToImportFrom\"\n          class=\"input\"\n          type=\"file\"\n          accept=\"application/json\"\n          @change=\"importFromJSON\"\n        />\n        <hr />\n        <HoppSmartItem\n          v-tippy=\"{ theme: 'tooltip' }\"\n          :title=\"t('action.download_file')\"\n          :icon=\"IconDownload\"\n          :label=\"t('export.as_json')\"\n          @click=\"exportJSON\"\n        />\n      </div>\n    </template>\n  </HoppSmartModal>\n</template>\n\n<script setup lang=\"ts\">\nimport axios from \"axios\"\nimport IconMoreVertical from \"~icons/lucide/more-vertical\"\nimport IconFolderPlus from \"~icons/lucide/folder-plus\"\nimport IconDownload from \"~icons/lucide/download\"\nimport IconGithub from \"~icons/lucide/github\"\nimport { computed, ref } from \"vue\"\nimport { platform } from \"~/platform\"\nimport { useI18n } from \"@composables/i18n\"\nimport { useReadonlyStream } from \"@composables/stream\"\nimport { useToast } from \"@composables/toast\"\nimport {\n  graphqlCollections$,\n  setGraphqlCollections,\n  appendGraphqlCollections,\n} from \"~/newstore/collections\"\n\ndefineProps<{\n  show: boolean\n}>()\n\nconst emit = defineEmits<{\n  (e: \"hide-modal\"): void\n}>()\n\nconst toast = useToast()\nconst t = useI18n()\nconst collections = useReadonlyStream(graphqlCollections$, [])\nconst currentUser = useReadonlyStream(\n  platform.auth.getCurrentUserStream(),\n  platform.auth.getCurrentUser()\n)\n\n// Template refs\nconst tippyActions = ref<any | null>(null)\nconst inputChooseFileToImportFrom = ref<HTMLInputElement>()\n\nconst collectionJson = computed(() => {\n  return JSON.stringify(collections.value, null, 2)\n})\n\nconst createCollectionGist = async () => {\n  if (!currentUser.value) {\n    toast.error(t(\"profile.no_permission\").toString())\n\n    return\n  }\n\n  try {\n    const res = await axios.post(\n      \"https://api.github.com/gists\",\n      {\n        files: {\n          \"hoppscotch-collections.json\": {\n            content: collectionJson.value,\n          },\n        },\n      },\n      {\n        headers: {\n          Authorization: `token ${currentUser.value.accessToken}`,\n          Accept: \"application/vnd.github.v3+json\",\n        },\n      }\n    )\n\n    toast.success(t(\"export.gist_created\").toString())\n    window.open(res.data.html_url)\n  } catch (e) {\n    toast.error(t(\"error.something_went_wrong\").toString())\n    console.error(e)\n  }\n}\n\nconst fileImported = () => {\n  toast.success(t(\"state.file_imported\").toString())\n}\n\nconst failedImport = () => {\n  toast.error(t(\"import.failed\").toString())\n}\n\nconst readCollectionGist = async () => {\n  const gist = prompt(t(\"import.gist_url\").toString())\n  if (!gist) return\n\n  try {\n    const { files } = (await axios.get(\n      `https://api.github.com/gists/${gist.split(\"/\").pop()}`,\n      {\n        headers: {\n          Accept: \"application/vnd.github.v3+json\",\n        },\n      }\n    )) as {\n      files: {\n        [fileName: string]: {\n          content: any\n        }\n      }\n    }\n\n    const collections = JSON.parse(Object.values(files)[0].content)\n    setGraphqlCollections(collections)\n    fileImported()\n  } catch (e) {\n    failedImport()\n    console.error(e)\n  }\n}\n\nconst hideModal = () => {\n  emit(\"hide-modal\")\n}\n\nconst openDialogChooseFileToImportFrom = () => {\n  if (inputChooseFileToImportFrom.value)\n    inputChooseFileToImportFrom.value.click()\n}\n\nconst importFromJSON = () => {\n  if (!inputChooseFileToImportFrom.value) return\n\n  if (\n    !inputChooseFileToImportFrom.value.files ||\n    inputChooseFileToImportFrom.value.files.length === 0\n  ) {\n    toast.show(t(\"action.choose_file\").toString())\n    return\n  }\n\n  const reader = new FileReader()\n\n  reader.onload = ({ target }) => {\n    const content = target!.result as string | null\n\n    if (!content) {\n      toast.show(t(\"action.choose_file\").toString())\n      return\n    }\n\n    const collections = JSON.parse(content)\n    if (collections[0]) {\n      const [name, folders, requests] = Object.keys(collections[0])\n      if (name === \"name\" && folders === \"folders\" && requests === \"requests\") {\n        // Do nothing\n      }\n    } else {\n      failedImport()\n      return\n    }\n    appendGraphqlCollections(collections)\n\n    platform.analytics?.logEvent({\n      type: \"HOPP_IMPORT_COLLECTION\",\n      importer: \"json\",\n      workspaceType: \"personal\",\n      platform: \"gql\",\n    })\n\n    fileImported()\n  }\n  reader.readAsText(inputChooseFileToImportFrom.value.files[0])\n  inputChooseFileToImportFrom.value.value = \"\"\n}\n\nconst exportJSON = () => {\n  const dataToWrite = collectionJson.value\n  const file = new Blob([dataToWrite], { type: \"application/json\" })\n  const a = document.createElement(\"a\")\n  const url = URL.createObjectURL(file)\n  a.href = url\n\n  platform?.analytics?.logEvent({\n    type: \"HOPP_EXPORT_COLLECTION\",\n    exporter: \"json\",\n    platform: \"gql\",\n  })\n\n  // TODO: get uri from meta\n  a.download = `${url.split(\"/\").pop()!.split(\"#\")[0].split(\"?\")[0]}.json`\n  document.body.appendChild(a)\n  a.click()\n  toast.success(t(\"state.download_started\").toString())\n  setTimeout(() => {\n    document.body.removeChild(a)\n    URL.revokeObjectURL(url)\n  }, 1000)\n}\n</script>\n","<template>\n  <HoppSmartModal\n    v-if=\"show\"\n    dialog\n    :title=\"`${t('modal.edit_request')}`\"\n    @close=\"hideModal\"\n  >\n    <template #body>\n      <div class=\"flex flex-col\">\n        <input\n          id=\"selectLabelGqlEditReq\"\n          v-model=\"requestUpdateData.name\"\n          v-focus\n          class=\"input floating-input\"\n          placeholder=\" \"\n          type=\"text\"\n          autocomplete=\"off\"\n          @keyup.enter=\"saveRequest\"\n        />\n        <label for=\"selectLabelGqlEditReq\">\n          {{ t(\"action.label\") }}\n        </label>\n      </div>\n    </template>\n    <template #footer>\n      <span class=\"flex space-x-2\">\n        <HoppButtonPrimary\n          :label=\"`${t('action.save')}`\"\n          outline\n          @click=\"saveRequest\"\n        />\n        <HoppButtonSecondary\n          :label=\"`${t('action.cancel')}`\"\n          outline\n          filled\n          @click=\"hideModal\"\n        />\n      </span>\n    </template>\n  </HoppSmartModal>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, PropType } from \"vue\"\nimport { useI18n } from \"@composables/i18n\"\nimport { useToast } from \"@composables/toast\"\nimport { HoppGQLRequest } from \"@hoppscotch/data\"\nimport { editGraphqlRequest } from \"~/newstore/collections\"\n\nexport default defineComponent({\n  props: {\n    show: Boolean,\n    folderPath: { type: String, default: null },\n    request: { type: Object as PropType<HoppGQLRequest>, default: () => ({}) },\n    requestIndex: { type: Number, default: null },\n    editingRequestName: { type: String, default: null },\n  },\n  emits: [\"hide-modal\"],\n  setup() {\n    return {\n      toast: useToast(),\n      t: useI18n(),\n    }\n  },\n  data() {\n    return {\n      requestUpdateData: {\n        name: null as any | null,\n      },\n    }\n  },\n  watch: {\n    editingRequestName(val) {\n      this.requestUpdateData.name = val\n    },\n  },\n  methods: {\n    saveRequest() {\n      if (!this.requestUpdateData.name) {\n        this.toast.error(`${this.t(\"collection.invalid_name\")}`)\n        return\n      }\n\n      // TODO: Type safety goes brrrr. Proper typing plz\n      const requestUpdated = {\n        ...this.$props.request,\n        name: this.$data.requestUpdateData.name || this.$props.request.name,\n      }\n\n      editGraphqlRequest(this.folderPath, this.requestIndex, requestUpdated)\n\n      this.hideModal()\n    },\n    hideModal() {\n      this.requestUpdateData = { name: null }\n      this.$emit(\"hide-modal\")\n    },\n  },\n})\n</script>\n","<template>\n  <HoppSmartModal\n    v-if=\"show\"\n    dialog\n    :title=\"`${t('folder.edit')}`\"\n    @close=\"$emit('hide-modal')\"\n  >\n    <template #body>\n      <div class=\"flex flex-col\">\n        <input\n          id=\"selectLabelGqlEditFolder\"\n          v-model=\"name\"\n          v-focus\n          class=\"input floating-input\"\n          placeholder=\" \"\n          type=\"text\"\n          autocomplete=\"off\"\n          @keyup.enter=\"editFolder\"\n        />\n        <label for=\"selectLabelGqlEditFolder\">\n          {{ t(\"action.label\") }}\n        </label>\n      </div>\n    </template>\n    <template #footer>\n      <span class=\"flex space-x-2\">\n        <HoppButtonPrimary\n          :label=\"`${t('action.save')}`\"\n          outline\n          @click=\"editFolder\"\n        />\n        <HoppButtonSecondary\n          :label=\"`${t('action.cancel')}`\"\n          outline\n          filled\n          @click=\"hideModal\"\n        />\n      </span>\n    </template>\n  </HoppSmartModal>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from \"vue\"\nimport { useI18n } from \"@composables/i18n\"\nimport { useToast } from \"@composables/toast\"\nimport { editGraphqlFolder } from \"~/newstore/collections\"\n\nexport default defineComponent({\n  props: {\n    show: Boolean,\n    folder: { type: Object, default: () => ({}) },\n    folderPath: { type: String, default: null },\n    editingFolderName: { type: String, default: null },\n  },\n  emits: [\"hide-modal\"],\n  setup() {\n    return {\n      toast: useToast(),\n      t: useI18n(),\n    }\n  },\n  data() {\n    return {\n      name: \"\",\n    }\n  },\n  watch: {\n    editingFolderName(val) {\n      this.name = val\n    },\n  },\n  methods: {\n    editFolder() {\n      if (!this.name) {\n        this.toast.error(`${this.t(\"collection.invalid_name\")}`)\n        return\n      }\n      editGraphqlFolder(this.folderPath, {\n        ...(this.folder as any),\n        name: this.name,\n      })\n      this.hideModal()\n    },\n    hideModal() {\n      this.name = \"\"\n      this.$emit(\"hide-modal\")\n    },\n  },\n})\n</script>\n","<template>\n  <HoppSmartModal\n    v-if=\"show\"\n    dialog\n    :title=\"t('folder.new')\"\n    @close=\"$emit('hide-modal')\"\n  >\n    <template #body>\n      <div class=\"flex flex-col\">\n        <input\n          id=\"selectLabelGqlAddFolder\"\n          v-model=\"name\"\n          v-focus\n          class=\"input floating-input\"\n          placeholder=\" \"\n          type=\"text\"\n          autocomplete=\"off\"\n          @keyup.enter=\"addFolder\"\n        />\n        <label for=\"selectLabelGqlAddFolder\">\n          {{ t(\"action.label\") }}\n        </label>\n      </div>\n    </template>\n    <template #footer>\n      <span class=\"flex space-x-2\">\n        <HoppButtonPrimary\n          :label=\"t('action.save')\"\n          outline\n          @click=\"addFolder\"\n        />\n        <HoppButtonSecondary\n          :label=\"t('action.cancel')\"\n          outline\n          filled\n          @click=\"hideModal\"\n        />\n      </span>\n    </template>\n  </HoppSmartModal>\n</template>\n\n<script lang=\"ts\">\nimport { useToast } from \"@composables/toast\"\nimport { useI18n } from \"@composables/i18n\"\nimport { defineComponent } from \"vue\"\n\nexport default defineComponent({\n  props: {\n    show: Boolean,\n    folderPath: { type: String, default: null },\n    collectionIndex: { type: Number, default: null },\n  },\n  emits: [\"hide-modal\", \"add-folder\"],\n  setup() {\n    return {\n      toast: useToast(),\n      t: useI18n(),\n    }\n  },\n  data() {\n    return {\n      name: null,\n    }\n  },\n  methods: {\n    addFolder() {\n      if (!this.name) {\n        this.toast.error(`${this.t(\"folder.name_length_insufficient\")}`)\n        return\n      }\n\n      this.$emit(\"add-folder\", {\n        name: this.name,\n        path: this.folderPath || `${this.collectionIndex}`,\n      })\n\n      this.hideModal()\n    },\n    hideModal() {\n      this.name = null\n      this.$emit(\"hide-modal\")\n    },\n  },\n})\n</script>\n","<template>\n  <HoppSmartModal\n    v-if=\"show\"\n    dialog\n    :title=\"t('request.new')\"\n    @close=\"emit('hide-modal')\"\n  >\n    <template #body>\n      <div class=\"flex flex-col\">\n        <input\n          id=\"selectLabelGqlAddRequest\"\n          v-model=\"name\"\n          v-focus\n          class=\"input floating-input\"\n          placeholder=\" \"\n          type=\"text\"\n          autocomplete=\"off\"\n          @keyup.enter=\"addRequest\"\n        />\n        <label for=\"selectLabelGqlAddRequest\">\n          {{ t(\"action.label\") }}\n        </label>\n      </div>\n    </template>\n    <template #footer>\n      <span class=\"flex space-x-2\">\n        <HoppButtonPrimary\n          :label=\"t('action.save')\"\n          outline\n          @click=\"addRequest\"\n        />\n        <HoppButtonSecondary\n          :label=\"t('action.cancel')\"\n          outline\n          filled\n          @click=\"hideModal\"\n        />\n      </span>\n    </template>\n  </HoppSmartModal>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, watch } from \"vue\"\nimport { useI18n } from \"@composables/i18n\"\nimport { useToast } from \"@composables/toast\"\nimport { getGQLSession } from \"~/newstore/GQLSession\"\n\nconst toast = useToast()\nconst t = useI18n()\n\nconst props = defineProps<{\n  show: boolean\n  folderPath?: string\n}>()\n\nconst emit = defineEmits<{\n  (e: \"hide-modal\"): void\n  (\n    e: \"add-request\",\n    v: {\n      name: string\n      path: string | undefined\n    }\n  ): void\n}>()\n\nconst name = ref(\"\")\n\nwatch(\n  () => props.show,\n  (show) => {\n    if (show) {\n      name.value = getGQLSession().request.name\n    }\n  }\n)\n\nconst addRequest = () => {\n  if (!name.value) {\n    toast.error(`${t(\"error.empty_req_name\")}`)\n    return\n  }\n  emit(\"add-request\", {\n    name: name.value,\n    path: props.folderPath,\n  })\n  hideModal()\n}\n\nconst hideModal = () => {\n  emit(\"hide-modal\")\n}\n</script>\n","<template>\n  <HoppSmartModal\n    v-if=\"show\"\n    dialog\n    :title=\"`${t('collection.edit')}`\"\n    @close=\"hideModal\"\n  >\n    <template #body>\n      <div class=\"flex flex-col\">\n        <input\n          id=\"selectLabelGqlEdit\"\n          v-model=\"name\"\n          v-focus\n          class=\"input floating-input\"\n          placeholder=\" \"\n          type=\"text\"\n          autocomplete=\"off\"\n          @keyup.enter=\"saveCollection\"\n        />\n        <label for=\"selectLabelGqlEdit\">\n          {{ t(\"action.label\") }}\n        </label>\n      </div>\n    </template>\n    <template #footer>\n      <span class=\"flex space-x-2\">\n        <HoppButtonPrimary\n          :label=\"`${t('action.save')}`\"\n          outline\n          @click=\"saveCollection\"\n        />\n        <HoppButtonSecondary\n          :label=\"`${t('action.cancel')}`\"\n          outline\n          filled\n          @click=\"hideModal\"\n        />\n      </span>\n    </template>\n  </HoppSmartModal>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, watch } from \"vue\"\nimport { editGraphqlCollection } from \"~/newstore/collections\"\nimport { useToast } from \"@composables/toast\"\nimport { useI18n } from \"@composables/i18n\"\n\nconst props = defineProps({\n  show: Boolean,\n  editingCollection: { type: Object, default: () => ({}) },\n  editingCollectionIndex: { type: Number, default: null },\n  editingCollectionName: { type: String, default: null },\n})\n\nconst emit = defineEmits<{\n  (e: \"hide-modal\"): void\n}>()\n\nconst t = useI18n()\nconst toast = useToast()\n\nconst name = ref<string | null>()\n\nwatch(\n  () => props.editingCollectionName,\n  (val) => {\n    name.value = val\n  }\n)\n\nconst saveCollection = () => {\n  if (!name.value) {\n    toast.error(`${t(\"collection.invalid_name\")}`)\n    return\n  }\n\n  // TODO: Better typechecking here ?\n  const collectionUpdated = {\n    ...(props.editingCollection as any),\n    name: name.value,\n  }\n\n  editGraphqlCollection(props.editingCollectionIndex, collectionUpdated)\n  hideModal()\n}\n\nconst hideModal = () => {\n  name.value = null\n  emit(\"hide-modal\")\n}\n</script>\n","<template>\n  <HoppSmartModal\n    v-if=\"show\"\n    dialog\n    :title=\"`${t('collection.new')}`\"\n    @close=\"hideModal\"\n  >\n    <template #body>\n      <div class=\"flex flex-col\">\n        <input\n          id=\"selectLabelGqlAdd\"\n          v-model=\"name\"\n          v-focus\n          class=\"input floating-input\"\n          placeholder=\" \"\n          type=\"text\"\n          autocomplete=\"off\"\n          @keyup.enter=\"addNewCollection\"\n        />\n        <label for=\"selectLabelGqlAdd\">\n          {{ t(\"action.label\") }}\n        </label>\n      </div>\n    </template>\n    <template #footer>\n      <span class=\"flex space-x-2\">\n        <HoppButtonPrimary\n          :label=\"`${t('action.save')}`\"\n          outline\n          @click=\"addNewCollection\"\n        />\n        <HoppButtonSecondary\n          :label=\"`${t('action.cancel')}`\"\n          outline\n          filled\n          @click=\"hideModal\"\n        />\n      </span>\n    </template>\n  </HoppSmartModal>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from \"vue\"\nimport { useToast } from \"@composables/toast\"\nimport { useI18n } from \"@composables/i18n\"\nimport { HoppGQLRequest, makeCollection } from \"@hoppscotch/data\"\nimport { addGraphqlCollection } from \"~/newstore/collections\"\nimport { platform } from \"~/platform\"\n\nexport default defineComponent({\n  props: {\n    show: Boolean,\n  },\n  emits: [\"hide-modal\"],\n  setup() {\n    return {\n      toast: useToast(),\n      t: useI18n(),\n    }\n  },\n  data() {\n    return {\n      name: null as string | null,\n    }\n  },\n  methods: {\n    addNewCollection() {\n      if (!this.name) {\n        this.toast.error(`${this.t(\"collection.invalid_name\")}`)\n        return\n      }\n\n      addGraphqlCollection(\n        makeCollection<HoppGQLRequest>({\n          name: this.name,\n          folders: [],\n          requests: [],\n        })\n      )\n\n      this.hideModal()\n\n      platform.analytics?.logEvent({\n        type: \"HOPP_CREATE_COLLECTION\",\n        isRootCollection: true,\n        platform: \"gql\",\n        workspaceType: \"personal\",\n      })\n    },\n    hideModal() {\n      this.name = null\n      this.$emit(\"hide-modal\")\n    },\n  },\n})\n</script>\n","<template>\n  <div class=\"flex flex-col\" :class=\"[{ 'bg-primaryLight': dragging }]\">\n    <div\n      class=\"flex items-stretch group\"\n      draggable=\"true\"\n      @dragstart=\"dragStart\"\n      @dragover.stop\n      @dragleave=\"dragging = false\"\n      @dragend=\"dragging = false\"\n      @contextmenu.prevent=\"options.tippy.show()\"\n    >\n      <span\n        class=\"flex items-center justify-center w-16 px-2 truncate cursor-pointer\"\n        @click=\"selectRequest()\"\n      >\n        <component\n          :is=\"isSelected ? IconCheckCircle : IconFile\"\n          class=\"svg-icons\"\n          :class=\"{ 'text-accent': isSelected }\"\n        />\n      </span>\n      <span\n        class=\"flex flex-1 min-w-0 py-2 pr-2 cursor-pointer transition group-hover:text-secondaryDark\"\n        @click=\"selectRequest()\"\n      >\n        <span class=\"truncate\" :class=\"{ 'text-accent': isSelected }\">\n          {{ request.name }}\n        </span>\n      </span>\n      <div class=\"flex\">\n        <HoppButtonSecondary\n          v-if=\"!saveRequest\"\n          v-tippy=\"{ theme: 'tooltip' }\"\n          :icon=\"IconRotateCCW\"\n          :title=\"t('action.restore')\"\n          class=\"hidden group-hover:inline-flex\"\n          @click=\"selectRequest()\"\n        />\n        <span>\n          <tippy\n            ref=\"options\"\n            interactive\n            trigger=\"click\"\n            theme=\"popover\"\n            :on-shown=\"() => tippyActions.focus()\"\n          >\n            <HoppButtonSecondary\n              v-tippy=\"{ theme: 'tooltip' }\"\n              :title=\"t('action.more')\"\n              :icon=\"IconMoreVertical\"\n            />\n            <template #content=\"{ hide }\">\n              <div\n                ref=\"tippyActions\"\n                class=\"flex flex-col focus:outline-none\"\n                tabindex=\"0\"\n                @keyup.e=\"edit.$el.click()\"\n                @keyup.d=\"duplicate.$el.click()\"\n                @keyup.delete=\"deleteAction.$el.click()\"\n                @keyup.escape=\"hide()\"\n              >\n                <HoppSmartItem\n                  ref=\"edit\"\n                  :icon=\"IconEdit\"\n                  :label=\"`${t('action.edit')}`\"\n                  :shortcut=\"['E']\"\n                  @click=\"\n                    () => {\n                      $emit('edit-request', {\n                        request,\n                        requestIndex,\n                        folderPath,\n                      })\n                      hide()\n                    }\n                  \"\n                />\n                <HoppSmartItem\n                  ref=\"duplicate\"\n                  :icon=\"IconCopy\"\n                  :label=\"`${t('action.duplicate')}`\"\n                  :shortcut=\"['D']\"\n                  @click=\"\n                    () => {\n                      $emit('duplicate-request', {\n                        request,\n                        requestIndex,\n                        folderPath,\n                      })\n                      hide()\n                    }\n                  \"\n                />\n                <HoppSmartItem\n                  ref=\"deleteAction\"\n                  :icon=\"IconTrash2\"\n                  :label=\"`${t('action.delete')}`\"\n                  :shortcut=\"['⌫']\"\n                  @click=\"\n                    () => {\n                      confirmRemove = true\n                      hide()\n                    }\n                  \"\n                />\n              </div>\n            </template>\n          </tippy>\n        </span>\n      </div>\n    </div>\n    <HoppSmartConfirmModal\n      :show=\"confirmRemove\"\n      :title=\"`${t('confirm.remove_request')}`\"\n      @hide-modal=\"confirmRemove = false\"\n      @resolve=\"removeRequest\"\n    />\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport IconCheckCircle from \"~icons/lucide/check-circle\"\nimport IconFile from \"~icons/lucide/file\"\nimport IconRotateCCW from \"~icons/lucide/rotate-ccw\"\nimport IconMoreVertical from \"~icons/lucide/more-vertical\"\nimport IconEdit from \"~icons/lucide/edit\"\nimport IconCopy from \"~icons/lucide/copy\"\nimport IconTrash2 from \"~icons/lucide/trash-2\"\nimport { PropType, computed, ref } from \"vue\"\nimport { useI18n } from \"@composables/i18n\"\nimport { useToast } from \"@composables/toast\"\nimport { HoppGQLRequest, makeGQLRequest } from \"@hoppscotch/data\"\nimport { cloneDeep } from \"lodash-es\"\nimport { removeGraphqlRequest } from \"~/newstore/collections\"\nimport { setGQLSession } from \"~/newstore/GQLSession\"\n\n// Template refs\nconst tippyActions = ref<any | null>(null)\nconst options = ref<any | null>(null)\nconst edit = ref<any | null>(null)\nconst duplicate = ref<any | null>(null)\nconst deleteAction = ref<any | null>(null)\n\nconst t = useI18n()\nconst toast = useToast()\n\nconst props = defineProps({\n  // Whether the object is selected (show the tick mark)\n  picked: { type: Object, default: null },\n  // Whether the request is being saved (activate 'select' event)\n  saveRequest: { type: Boolean, default: false },\n  request: { type: Object as PropType<HoppGQLRequest>, default: () => ({}) },\n  folderPath: { type: String, default: null },\n  requestIndex: { type: Number, default: null },\n})\n\n// TODO: Better types please\nconst emit = defineEmits([\"select\", \"edit-request\", \"duplicate-request\"])\n\nconst dragging = ref(false)\nconst confirmRemove = ref(false)\n\nconst isSelected = computed(\n  () =>\n    props.picked?.pickedType === \"gql-my-request\" &&\n    props.picked?.folderPath === props.folderPath &&\n    props.picked?.requestIndex === props.requestIndex\n)\n\nconst pick = () => {\n  emit(\"select\", {\n    pickedType: \"gql-my-request\",\n    folderPath: props.folderPath,\n    requestIndex: props.requestIndex,\n  })\n}\n\nconst selectRequest = () => {\n  if (props.saveRequest) {\n    pick()\n  } else {\n    setGQLSession({\n      request: cloneDeep(\n        makeGQLRequest({\n          name: props.request.name,\n          url: props.request.url,\n          query: props.request.query,\n          headers: props.request.headers,\n          variables: props.request.variables,\n          auth: props.request.auth,\n        })\n      ),\n      schema: \"\",\n      response: \"\",\n    })\n  }\n}\n\nconst dragStart = ({ dataTransfer }: any) => {\n  dragging.value = !dragging.value\n\n  dataTransfer.setData(\"folderPath\", props.folderPath)\n  dataTransfer.setData(\"requestIndex\", props.requestIndex)\n}\n\nconst removeRequest = () => {\n  // Cancel pick if the picked request is deleted\n  if (\n    props.picked &&\n    props.picked.pickedType === \"gql-my-request\" &&\n    props.picked.folderPath === props.folderPath &&\n    props.picked.requestIndex === props.requestIndex\n  ) {\n    emit(\"select\", null)\n  }\n\n  removeGraphqlRequest(props.folderPath, props.requestIndex, props.request.id)\n  toast.success(`${t(\"state.deleted\")}`)\n}\n</script>\n","<template>\n  <div class=\"flex flex-col\" :class=\"[{ 'bg-primaryLight': dragging }]\">\n    <div\n      class=\"flex items-stretch group\"\n      @dragover.prevent\n      @drop.prevent=\"dropEvent\"\n      @dragover=\"dragging = true\"\n      @drop=\"dragging = false\"\n      @dragleave=\"dragging = false\"\n      @dragend=\"dragging = false\"\n      @contextmenu.prevent=\"options.tippy.show()\"\n    >\n      <span\n        class=\"flex items-center justify-center px-4 cursor-pointer\"\n        @click=\"toggleShowChildren()\"\n      >\n        <component\n          :is=\"collectionIcon\"\n          class=\"svg-icons\"\n          :class=\"{ 'text-accent': isSelected }\"\n        />\n      </span>\n      <span\n        class=\"flex flex-1 min-w-0 py-2 pr-2 cursor-pointer transition group-hover:text-secondaryDark\"\n        @click=\"toggleShowChildren()\"\n      >\n        <span class=\"truncate\" :class=\"{ 'text-accent': isSelected }\">\n          {{ folder.name ? folder.name : folder.title }}\n        </span>\n      </span>\n      <div class=\"flex\">\n        <HoppButtonSecondary\n          v-tippy=\"{ theme: 'tooltip' }\"\n          :icon=\"IconFilePlus\"\n          :title=\"t('request.new')\"\n          class=\"hidden group-hover:inline-flex\"\n          @click=\"emit('add-request', { path: folderPath })\"\n        />\n        <HoppButtonSecondary\n          v-tippy=\"{ theme: 'tooltip' }\"\n          :icon=\"IconFolderPlus\"\n          :title=\"t('folder.new')\"\n          class=\"hidden group-hover:inline-flex\"\n          @click=\"emit('add-folder', { folder, path: folderPath })\"\n        />\n        <span>\n          <tippy\n            ref=\"options\"\n            interactive\n            trigger=\"click\"\n            theme=\"popover\"\n            :on-shown=\"() => tippyActions.focus()\"\n          >\n            <HoppButtonSecondary\n              v-tippy=\"{ theme: 'tooltip' }\"\n              :title=\"t('action.more')\"\n              :icon=\"IconMoreVertical\"\n            />\n            <template #content=\"{ hide }\">\n              <div\n                ref=\"tippyActions\"\n                class=\"flex flex-col focus:outline-none\"\n                tabindex=\"0\"\n                @keyup.r=\"requestAction.$el.click()\"\n                @keyup.n=\"folderAction.$el.click()\"\n                @keyup.e=\"edit.$el.click()\"\n                @keyup.delete=\"deleteAction.$el.click()\"\n                @keyup.escape=\"hide()\"\n              >\n                <HoppSmartItem\n                  ref=\"requestAction\"\n                  :icon=\"IconFilePlus\"\n                  :label=\"`${t('request.new')}`\"\n                  :shortcut=\"['R']\"\n                  @click=\"\n                    () => {\n                      emit('add-request', { path: folderPath })\n                      hide()\n                    }\n                  \"\n                />\n                <HoppSmartItem\n                  ref=\"folderAction\"\n                  :icon=\"IconFolderPlus\"\n                  :label=\"`${t('folder.new')}`\"\n                  :shortcut=\"['N']\"\n                  @click=\"\n                    () => {\n                      emit('add-folder', { folder, path: folderPath })\n                      hide()\n                    }\n                  \"\n                />\n                <HoppSmartItem\n                  ref=\"edit\"\n                  :icon=\"IconEdit\"\n                  :label=\"`${t('action.edit')}`\"\n                  :shortcut=\"['E']\"\n                  @click=\"\n                    () => {\n                      emit('edit-folder', { folder, folderPath })\n                      hide()\n                    }\n                  \"\n                />\n                <HoppSmartItem\n                  ref=\"deleteAction\"\n                  :icon=\"IconTrash2\"\n                  :label=\"`${t('action.delete')}`\"\n                  :shortcut=\"['⌫']\"\n                  @click=\"\n                    () => {\n                      confirmRemove = true\n                      hide()\n                    }\n                  \"\n                />\n              </div>\n            </template>\n          </tippy>\n        </span>\n      </div>\n    </div>\n    <div v-if=\"showChildren || isFiltered\" class=\"flex\">\n      <div\n        class=\"bg-dividerLight cursor-nsResize flex ml-5.5 transform transition w-0.5 hover:bg-dividerDark hover:scale-x-125\"\n        @click=\"toggleShowChildren()\"\n      ></div>\n      <div class=\"flex flex-col flex-1 truncate\">\n        <!-- Referring to this component only (this is recursive) -->\n        <Folder\n          v-for=\"(subFolder, subFolderIndex) in folder.folders\"\n          :key=\"`subFolder-${String(subFolderIndex)}`\"\n          :picked=\"picked\"\n          :save-request=\"saveRequest\"\n          :folder=\"subFolder\"\n          :folder-index=\"subFolderIndex\"\n          :folder-path=\"`${folderPath}/${String(subFolderIndex)}`\"\n          :collection-index=\"collectionIndex\"\n          :is-filtered=\"isFiltered\"\n          @add-request=\"emit('add-request', $event)\"\n          @add-folder=\"emit('add-folder', $event)\"\n          @edit-folder=\"emit('edit-folder', $event)\"\n          @edit-request=\"emit('edit-request', $event)\"\n          @duplicate-request=\"emit('duplicate-request', $event)\"\n          @select=\"emit('select', $event)\"\n        />\n        <CollectionsGraphqlRequest\n          v-for=\"(request, index) in folder.requests\"\n          :key=\"`request-${String(index)}`\"\n          :picked=\"picked\"\n          :save-request=\"saveRequest\"\n          :request=\"request\"\n          :collection-index=\"collectionIndex\"\n          :folder-index=\"folderIndex\"\n          :folder-path=\"folderPath\"\n          :folder-name=\"folder.name\"\n          :request-index=\"index\"\n          @edit-request=\"emit('edit-request', $event)\"\n          @duplicate-request=\"emit('duplicate-request', $event)\"\n          @select=\"emit('select', $event)\"\n        />\n        <div\n          v-if=\"\n            folder.folders &&\n            folder.folders.length === 0 &&\n            folder.requests &&\n            folder.requests.length === 0\n          \"\n          class=\"flex flex-col items-center justify-center p-4 text-secondaryLight\"\n        >\n          <img\n            :src=\"`/images/states/${colorMode.value}/pack.svg`\"\n            loading=\"lazy\"\n            class=\"inline-flex flex-col object-contain object-center w-16 h-16 mb-4\"\n            :alt=\"`${t('empty.folder')}`\"\n          />\n          <span class=\"text-center\">\n            {{ t(\"empty.folder\") }}\n          </span>\n        </div>\n      </div>\n    </div>\n    <HoppSmartConfirmModal\n      :show=\"confirmRemove\"\n      :title=\"`${t('confirm.remove_folder')}`\"\n      @hide-modal=\"confirmRemove = false\"\n      @resolve=\"removeFolder\"\n    />\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport IconEdit from \"~icons/lucide/edit\"\nimport IconTrash2 from \"~icons/lucide/trash-2\"\nimport IconFolderPlus from \"~icons/lucide/folder-plus\"\nimport IconFilePlus from \"~icons/lucide/file-plus\"\nimport IconMoreVertical from \"~icons/lucide/more-vertical\"\nimport IconCheckCircle from \"~icons/lucide/check-circle\"\nimport IconFolder from \"~icons/lucide/folder\"\nimport IconFolderOpen from \"~icons/lucide/folder-open\"\nimport { useToast } from \"@composables/toast\"\nimport { useI18n } from \"@composables/i18n\"\nimport { useColorMode } from \"@composables/theming\"\nimport { removeGraphqlFolder, moveGraphqlRequest } from \"~/newstore/collections\"\nimport { computed, ref } from \"vue\"\n\nconst toast = useToast()\nconst t = useI18n()\nconst colorMode = useColorMode()\n\nconst props = defineProps({\n  picked: { type: Object, default: null },\n  // Whether the request is in a selectable mode (activates 'select' event)\n  saveRequest: { type: Boolean, default: false },\n  folder: { type: Object, default: () => ({}) },\n  folderIndex: { type: Number, default: null },\n  collectionIndex: { type: Number, default: null },\n  folderPath: { type: String, default: null },\n  isFiltered: Boolean,\n})\n\nconst emit = defineEmits([\n  \"select\",\n  \"add-request\",\n  \"edit-request\",\n  \"add-folder\",\n  \"edit-folder\",\n  \"duplicate-request\",\n])\n\n// Template refs\nconst tippyActions = ref<any | null>(null)\nconst options = ref<any | null>(null)\nconst requestAction = ref<any | null>(null)\nconst folderAction = ref<any | null>(null)\nconst edit = ref<any | null>(null)\nconst deleteAction = ref<any | null>(null)\n\nconst showChildren = ref(false)\nconst dragging = ref(false)\nconst confirmRemove = ref(false)\n\nconst isSelected = computed(\n  () =>\n    props.picked?.pickedType === \"gql-my-folder\" &&\n    props.picked?.folderPath === props.folderPath\n)\nconst collectionIcon = computed(() => {\n  if (isSelected.value) return IconCheckCircle\n  else if (!showChildren.value && !props.isFiltered) return IconFolder\n  else if (showChildren.value || !props.isFiltered) return IconFolderOpen\n  else return IconFolder\n})\n\nconst pick = () => {\n  emit(\"select\", {\n    picked: {\n      pickedType: \"gql-my-folder\",\n      folderPath: props.folderPath,\n    },\n  })\n}\n\nconst toggleShowChildren = () => {\n  if (props.saveRequest) {\n    pick()\n  }\n\n  showChildren.value = !showChildren.value\n}\n\nconst removeFolder = () => {\n  // Cancel pick if the picked folder is deleted\n  if (\n    props.picked?.pickedType === \"gql-my-folder\" &&\n    props.picked?.folderPath === props.folderPath\n  ) {\n    emit(\"select\", { picked: null })\n  }\n\n  removeGraphqlFolder(props.folderPath, props.folder.id)\n  toast.success(t(\"state.deleted\"))\n}\n\nconst dropEvent = ({ dataTransfer }: any) => {\n  dragging.value = !dragging.value\n  const folderPath = dataTransfer.getData(\"folderPath\")\n  const requestIndex = dataTransfer.getData(\"requestIndex\")\n  moveGraphqlRequest(folderPath, requestIndex, props.folderPath)\n}\n</script>\n","<template>\n  <div class=\"flex flex-col\" :class=\"[{ 'bg-primaryLight': dragging }]\">\n    <div\n      class=\"flex items-stretch group\"\n      @dragover.prevent\n      @drop.prevent=\"dropEvent\"\n      @dragover=\"dragging = true\"\n      @drop=\"dragging = false\"\n      @dragleave=\"dragging = false\"\n      @dragend=\"dragging = false\"\n      @contextmenu.prevent=\"options.tippy.show()\"\n    >\n      <span\n        class=\"flex items-center justify-center px-4 cursor-pointer\"\n        @click=\"toggleShowChildren()\"\n      >\n        <component\n          :is=\"collectionIcon\"\n          class=\"svg-icons\"\n          :class=\"{ 'text-accent': isSelected }\"\n        />\n      </span>\n      <span\n        class=\"flex flex-1 min-w-0 py-2 pr-2 cursor-pointer transition group-hover:text-secondaryDark\"\n        @click=\"toggleShowChildren()\"\n      >\n        <span class=\"truncate\" :class=\"{ 'text-accent': isSelected }\">\n          {{ collection.name }}\n        </span>\n      </span>\n      <div class=\"flex\">\n        <HoppButtonSecondary\n          v-tippy=\"{ theme: 'tooltip' }\"\n          :icon=\"IconFilePlus\"\n          :title=\"t('request.new')\"\n          class=\"hidden group-hover:inline-flex\"\n          @click=\"\n            emit('add-request', {\n              path: `${collectionIndex}`,\n            })\n          \"\n        />\n        <HoppButtonSecondary\n          v-tippy=\"{ theme: 'tooltip' }\"\n          :icon=\"IconFolderPlus\"\n          :title=\"t('folder.new')\"\n          class=\"hidden group-hover:inline-flex\"\n          @click=\"\n            emit('add-folder', {\n              path: `${collectionIndex}`,\n            })\n          \"\n        />\n        <span>\n          <tippy\n            ref=\"options\"\n            interactive\n            trigger=\"click\"\n            theme=\"popover\"\n            :on-shown=\"() => tippyActions.focus()\"\n          >\n            <HoppButtonSecondary\n              v-tippy=\"{ theme: 'tooltip' }\"\n              :title=\"t('action.more')\"\n              :icon=\"IconMoreVertical\"\n            />\n            <template #content=\"{ hide }\">\n              <div\n                ref=\"tippyActions\"\n                class=\"flex flex-col focus:outline-none\"\n                tabindex=\"0\"\n                @keyup.r=\"requestAction.$el.click()\"\n                @keyup.n=\"folderAction.$el.click()\"\n                @keyup.e=\"edit.$el.click()\"\n                @keyup.delete=\"deleteAction.$el.click()\"\n                @keyup.escape=\"hide()\"\n              >\n                <HoppSmartItem\n                  ref=\"requestAction\"\n                  :icon=\"IconFilePlus\"\n                  :label=\"`${t('request.new')}`\"\n                  :shortcut=\"['R']\"\n                  @click=\"\n                    () => {\n                      $emit('add-request', {\n                        path: `${collectionIndex}`,\n                      })\n                      hide()\n                    }\n                  \"\n                />\n                <HoppSmartItem\n                  ref=\"folderAction\"\n                  :icon=\"IconFolderPlus\"\n                  :label=\"`${t('folder.new')}`\"\n                  :shortcut=\"['N']\"\n                  @click=\"\n                    () => {\n                      emit('add-folder', {\n                        path: `${collectionIndex}`,\n                      })\n                      hide()\n                    }\n                  \"\n                />\n                <HoppSmartItem\n                  ref=\"edit\"\n                  :icon=\"IconEdit\"\n                  :label=\"`${t('action.edit')}`\"\n                  :shortcut=\"['E']\"\n                  @click=\"\n                    () => {\n                      emit('edit-collection')\n                      hide()\n                    }\n                  \"\n                />\n                <HoppSmartItem\n                  ref=\"deleteAction\"\n                  :icon=\"IconTrash2\"\n                  :label=\"`${t('action.delete')}`\"\n                  :shortcut=\"['⌫']\"\n                  @click=\"\n                    () => {\n                      confirmRemove = true\n                      hide()\n                    }\n                  \"\n                />\n              </div>\n            </template>\n          </tippy>\n        </span>\n      </div>\n    </div>\n    <div v-if=\"showChildren || isFiltered\" class=\"flex\">\n      <div\n        class=\"bg-dividerLight cursor-nsResize flex ml-5.5 transform transition w-0.5 hover:bg-dividerDark hover:scale-x-125\"\n        @click=\"toggleShowChildren()\"\n      ></div>\n      <div class=\"flex flex-col flex-1 truncate\">\n        <CollectionsGraphqlFolder\n          v-for=\"(folder, index) in collection.folders\"\n          :key=\"`folder-${String(index)}`\"\n          :picked=\"picked\"\n          :save-request=\"saveRequest\"\n          :folder=\"folder\"\n          :folder-index=\"index\"\n          :folder-path=\"`${collectionIndex}/${String(index)}`\"\n          :collection-index=\"collectionIndex\"\n          :is-filtered=\"isFiltered\"\n          @add-request=\"$emit('add-request', $event)\"\n          @add-folder=\"$emit('add-folder', $event)\"\n          @edit-folder=\"$emit('edit-folder', $event)\"\n          @edit-request=\"$emit('edit-request', $event)\"\n          @duplicate-request=\"$emit('duplicate-request', $event)\"\n          @select=\"$emit('select', $event)\"\n        />\n        <CollectionsGraphqlRequest\n          v-for=\"(request, index) in collection.requests\"\n          :key=\"`request-${String(index)}`\"\n          :picked=\"picked\"\n          :save-request=\"saveRequest\"\n          :request=\"request\"\n          :collection-index=\"collectionIndex\"\n          :folder-index=\"-1\"\n          :folder-name=\"collection.name\"\n          :folder-path=\"`${collectionIndex}`\"\n          :request-index=\"index\"\n          @edit-request=\"$emit('edit-request', $event)\"\n          @duplicate-request=\"$emit('duplicate-request', $event)\"\n          @select=\"$emit('select', $event)\"\n        />\n        <div\n          v-if=\"\n            collection.folders.length === 0 && collection.requests.length === 0\n          \"\n          class=\"flex flex-col items-center justify-center p-4 text-secondaryLight\"\n        >\n          <img\n            :src=\"`/images/states/${colorMode.value}/pack.svg`\"\n            loading=\"lazy\"\n            class=\"inline-flex flex-col object-contain object-center w-16 h-16 mb-4\"\n            :alt=\"`${t('empty.collection')}`\"\n          />\n          <span class=\"pb-4 text-center\">\n            {{ t(\"empty.collection\") }}\n          </span>\n          <HoppButtonSecondary\n            :label=\"t('add.new')\"\n            filled\n            outline\n            @click=\"\n              emit('add-folder', {\n                path: `${collectionIndex}`,\n              })\n            \"\n          />\n        </div>\n      </div>\n    </div>\n    <HoppSmartConfirmModal\n      :show=\"confirmRemove\"\n      :title=\"`${t('confirm.remove_collection')}`\"\n      @hide-modal=\"confirmRemove = false\"\n      @resolve=\"removeCollection\"\n    />\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { computed, ref } from \"vue\"\nimport IconCheckCircle from \"~icons/lucide/check-circle\"\nimport IconFolder from \"~icons/lucide/folder\"\nimport IconFolderOpen from \"~icons/lucide/folder-open\"\nimport IconFilePlus from \"~icons/lucide/file-plus\"\nimport IconFolderPlus from \"~icons/lucide/folder-plus\"\nimport IconMoreVertical from \"~icons/lucide/more-vertical\"\nimport IconEdit from \"~icons/lucide/edit\"\nimport IconTrash2 from \"~icons/lucide/trash-2\"\nimport { useToast } from \"@composables/toast\"\nimport { useI18n } from \"@composables/i18n\"\nimport { useColorMode } from \"@composables/theming\"\nimport {\n  removeGraphqlCollection,\n  moveGraphqlRequest,\n} from \"~/newstore/collections\"\nimport { Picked } from \"~/helpers/types/HoppPicked\"\n\nconst props = defineProps({\n  picked: { type: Object, default: null },\n  // Whether the viewing context is related to picking (activates 'select' events)\n  saveRequest: { type: Boolean, default: false },\n  collectionIndex: { type: Number, default: null },\n  collection: { type: Object, default: () => ({}) },\n  isFiltered: Boolean,\n})\n\nconst colorMode = useColorMode()\nconst toast = useToast()\nconst t = useI18n()\n\n// TODO: improve types plz\nconst emit = defineEmits<{\n  (e: \"select\", i: Picked | null): void\n  (e: \"edit-request\", i: any): void\n  (e: \"duplicate-request\", i: any): void\n  (e: \"add-request\", i: any): void\n  (e: \"add-folder\", i: any): void\n  (e: \"edit-folder\", i: any): void\n  (e: \"edit-collection\"): void\n}>()\n\n// Template refs\nconst tippyActions = ref<any | null>(null)\nconst options = ref<any | null>(null)\nconst requestAction = ref<any | null>(null)\nconst folderAction = ref<any | null>(null)\nconst edit = ref<any | null>(null)\nconst deleteAction = ref<any | null>(null)\n\nconst showChildren = ref(false)\nconst dragging = ref(false)\n\nconst confirmRemove = ref(false)\n\nconst isSelected = computed(\n  () =>\n    props.picked?.pickedType === \"gql-my-collection\" &&\n    props.picked?.collectionIndex === props.collectionIndex\n)\nconst collectionIcon = computed(() => {\n  if (isSelected.value) return IconCheckCircle\n  else if (!showChildren.value && !props.isFiltered) return IconFolder\n  else if (!showChildren.value || props.isFiltered) return IconFolderOpen\n  else return IconFolder\n})\n\nconst pick = () => {\n  emit(\"select\", {\n    pickedType: \"gql-my-collection\",\n    collectionIndex: props.collectionIndex,\n  })\n}\n\nconst toggleShowChildren = () => {\n  if (props.saveRequest) {\n    pick()\n  }\n\n  showChildren.value = !showChildren.value\n}\n\nconst removeCollection = () => {\n  // Cancel pick if picked collection is deleted\n  if (\n    props.picked?.pickedType === \"gql-my-collection\" &&\n    props.picked?.collectionIndex === props.collectionIndex\n  ) {\n    emit(\"select\", null)\n  }\n\n  removeGraphqlCollection(props.collectionIndex, props.collection.id)\n  toast.success(`${t(\"state.deleted\")}`)\n}\n\nconst dropEvent = ({ dataTransfer }: any) => {\n  dragging.value = !dragging.value\n  const folderPath = dataTransfer.getData(\"folderPath\")\n  const requestIndex = dataTransfer.getData(\"requestIndex\")\n  moveGraphqlRequest(folderPath, requestIndex, `${props.collectionIndex}`)\n}\n</script>\n","<template>\n  <div :class=\"{ 'rounded border border-divider': saveRequest }\">\n    <div\n      class=\"sticky z-10 flex flex-col flex-shrink-0 overflow-x-auto rounded-t bg-primary\"\n      :style=\"\n        saveRequest ? 'top: calc(-1 * var(--line-height-body))' : 'top: 0'\n      \"\n    >\n      <input\n        v-model=\"filterText\"\n        type=\"search\"\n        autocomplete=\"off\"\n        :placeholder=\"t('action.search')\"\n        class=\"py-2 pl-4 pr-2 bg-transparent\"\n      />\n      <div\n        class=\"flex justify-between flex-1 flex-shrink-0 border-y bg-primary border-dividerLight\"\n      >\n        <HoppButtonSecondary\n          :icon=\"IconPlus\"\n          :label=\"t('action.new')\"\n          class=\"!rounded-none\"\n          @click=\"displayModalAdd(true)\"\n        />\n        <div class=\"flex\">\n          <HoppButtonSecondary\n            v-tippy=\"{ theme: 'tooltip' }\"\n            to=\"https://docs.hoppscotch.io/documentation/features/collections\"\n            blank\n            :title=\"t('app.wiki')\"\n            :icon=\"IconHelpCircle\"\n          />\n          <HoppButtonSecondary\n            v-if=\"!saveRequest\"\n            v-tippy=\"{ theme: 'tooltip' }\"\n            :title=\"t('modal.import_export')\"\n            :icon=\"IconArchive\"\n            @click=\"displayModalImportExport(true)\"\n          />\n        </div>\n      </div>\n    </div>\n    <div class=\"flex flex-col\">\n      <CollectionsGraphqlCollection\n        v-for=\"(collection, index) in filteredCollections\"\n        :key=\"`collection-${index}`\"\n        :picked=\"picked\"\n        :name=\"collection.name\"\n        :collection-index=\"index\"\n        :collection=\"collection\"\n        :is-filtered=\"filterText.length > 0\"\n        :save-request=\"saveRequest\"\n        @edit-collection=\"editCollection(collection, index)\"\n        @add-request=\"addRequest($event)\"\n        @add-folder=\"addFolder($event)\"\n        @edit-folder=\"editFolder($event)\"\n        @edit-request=\"editRequest($event)\"\n        @duplicate-request=\"duplicateRequest($event)\"\n        @select-collection=\"$emit('use-collection', collection)\"\n        @select=\"$emit('select', $event)\"\n      />\n    </div>\n    <div\n      v-if=\"collections.length === 0\"\n      class=\"flex flex-col items-center justify-center p-4 text-secondaryLight\"\n    >\n      <img\n        :src=\"`/images/states/${colorMode.value}/pack.svg`\"\n        loading=\"lazy\"\n        class=\"inline-flex flex-col object-contain object-center w-16 h-16 my-4\"\n        :alt=\"t('empty.collections')\"\n      />\n      <span class=\"pb-4 text-center\">\n        {{ t(\"empty.collections\") }}\n      </span>\n      <HoppButtonSecondary\n        :label=\"t('add.new')\"\n        filled\n        outline\n        @click=\"displayModalAdd(true)\"\n      />\n    </div>\n    <div\n      v-if=\"!(filteredCollections.length !== 0 || collections.length === 0)\"\n      class=\"flex flex-col items-center justify-center p-4 text-secondaryLight\"\n    >\n      <icon-lucide-search class=\"pb-2 opacity-75 svg-icons\" />\n      <span class=\"my-2 text-center\">\n        {{ t(\"state.nothing_found\") }} \"{{ filterText }}\"\n      </span>\n    </div>\n    <CollectionsGraphqlAdd\n      :show=\"showModalAdd\"\n      @hide-modal=\"displayModalAdd(false)\"\n    />\n    <CollectionsGraphqlEdit\n      :show=\"showModalEdit\"\n      :editing-collection=\"editingCollection\"\n      :editing-collection-index=\"editingCollectionIndex\"\n      :editing-collection-name=\"editingCollection ? editingCollection.name : ''\"\n      @hide-modal=\"displayModalEdit(false)\"\n    />\n    <CollectionsGraphqlAddRequest\n      :show=\"showModalAddRequest\"\n      :folder-path=\"editingFolderPath\"\n      @add-request=\"onAddRequest($event)\"\n      @hide-modal=\"displayModalAddRequest(false)\"\n    />\n    <CollectionsGraphqlAddFolder\n      :show=\"showModalAddFolder\"\n      :folder-path=\"editingFolderPath\"\n      @add-folder=\"onAddFolder($event)\"\n      @hide-modal=\"displayModalAddFolder(false)\"\n    />\n    <CollectionsGraphqlEditFolder\n      :show=\"showModalEditFolder\"\n      :collection-index=\"editingCollectionIndex\"\n      :folder=\"editingFolder\"\n      :folder-index=\"editingFolderIndex\"\n      :folder-path=\"editingFolderPath\"\n      :editing-folder-name=\"editingFolder ? editingFolder.name : ''\"\n      @hide-modal=\"displayModalEditFolder(false)\"\n    />\n    <CollectionsGraphqlEditRequest\n      :show=\"showModalEditRequest\"\n      :folder-path=\"editingFolderPath\"\n      :request=\"editingRequest\"\n      :request-index=\"editingRequestIndex\"\n      :editing-request-name=\"editingRequest ? editingRequest.name : ''\"\n      @hide-modal=\"displayModalEditRequest(false)\"\n    />\n    <CollectionsGraphqlImportExport\n      :show=\"showModalImportExport\"\n      @hide-modal=\"displayModalImportExport(false)\"\n    />\n  </div>\n</template>\n\n<script lang=\"ts\">\n// TODO: TypeScript + Script Setup this :)\nimport { defineComponent } from \"vue\"\nimport { cloneDeep, clone } from \"lodash-es\"\nimport {\n  graphqlCollections$,\n  addGraphqlFolder,\n  saveGraphqlRequestAs,\n} from \"~/newstore/collections\"\nimport { getGQLSession, setGQLSession } from \"~/newstore/GQLSession\"\n\nimport IconPlus from \"~icons/lucide/plus\"\nimport IconHelpCircle from \"~icons/lucide/help-circle\"\nimport IconArchive from \"~icons/lucide/archive\"\nimport { useI18n } from \"@composables/i18n\"\nimport { useReadonlyStream } from \"@composables/stream\"\nimport { useColorMode } from \"@composables/theming\"\nimport { platform } from \"~/platform\"\n\nexport default defineComponent({\n  props: {\n    // Whether to activate the ability to pick items (activates 'select' events)\n    saveRequest: { type: Boolean, default: false },\n    picked: { type: Object, default: null },\n  },\n  emits: [\"select\", \"use-collection\"],\n  setup() {\n    const collections = useReadonlyStream(graphqlCollections$, [], \"deep\")\n    const colorMode = useColorMode()\n    const t = useI18n()\n\n    return {\n      collections,\n      colorMode,\n      t,\n      IconPlus,\n      IconHelpCircle,\n      IconArchive,\n    }\n  },\n  data() {\n    return {\n      showModalAdd: false,\n      showModalEdit: false,\n      showModalImportExport: false,\n      showModalAddRequest: false,\n      showModalAddFolder: false,\n      showModalEditFolder: false,\n      showModalEditRequest: false,\n      editingCollection: undefined,\n      editingCollectionIndex: undefined,\n      editingFolder: undefined,\n      editingFolderName: undefined,\n      editingFolderIndex: undefined,\n      editingFolderPath: undefined,\n      editingRequest: undefined,\n      editingRequestIndex: undefined,\n      filterText: \"\",\n    }\n  },\n  computed: {\n    filteredCollections() {\n      const collections = clone(this.collections)\n\n      if (!this.filterText) return collections\n\n      const filterText = this.filterText.toLowerCase()\n      const filteredCollections = []\n\n      for (const collection of collections) {\n        const filteredRequests = []\n        const filteredFolders = []\n        for (const request of collection.requests) {\n          if (request.name.toLowerCase().includes(filterText))\n            filteredRequests.push(request)\n        }\n        for (const folder of collection.folders) {\n          const filteredFolderRequests = []\n          for (const request of folder.requests) {\n            if (request.name.toLowerCase().includes(filterText))\n              filteredFolderRequests.push(request)\n          }\n          if (filteredFolderRequests.length > 0) {\n            const filteredFolder = Object.assign({}, folder)\n            filteredFolder.requests = filteredFolderRequests\n            filteredFolders.push(filteredFolder)\n          }\n        }\n\n        if (filteredRequests.length + filteredFolders.length > 0) {\n          const filteredCollection = Object.assign({}, collection)\n          filteredCollection.requests = filteredRequests\n          filteredCollection.folders = filteredFolders\n          filteredCollections.push(filteredCollection)\n        }\n      }\n\n      return filteredCollections\n    },\n  },\n  methods: {\n    displayModalAdd(shouldDisplay) {\n      this.showModalAdd = shouldDisplay\n    },\n    displayModalEdit(shouldDisplay) {\n      this.showModalEdit = shouldDisplay\n\n      if (!shouldDisplay) this.resetSelectedData()\n    },\n    displayModalImportExport(shouldDisplay) {\n      this.showModalImportExport = shouldDisplay\n    },\n    displayModalAddRequest(shouldDisplay) {\n      this.showModalAddRequest = shouldDisplay\n\n      if (!shouldDisplay) this.resetSelectedData()\n    },\n    displayModalAddFolder(shouldDisplay) {\n      this.showModalAddFolder = shouldDisplay\n\n      if (!shouldDisplay) this.resetSelectedData()\n    },\n    displayModalEditFolder(shouldDisplay) {\n      this.showModalEditFolder = shouldDisplay\n\n      if (!shouldDisplay) this.resetSelectedData()\n    },\n    displayModalEditRequest(shouldDisplay) {\n      this.showModalEditRequest = shouldDisplay\n\n      if (!shouldDisplay) this.resetSelectedData()\n    },\n    editCollection(collection, collectionIndex) {\n      this.$data.editingCollection = collection\n      this.$data.editingCollectionIndex = collectionIndex\n      this.displayModalEdit(true)\n    },\n    onAddRequest({ name, path }) {\n      const newRequest = {\n        ...getGQLSession().request,\n        name,\n      }\n\n      saveGraphqlRequestAs(path, newRequest)\n      setGQLSession({\n        request: newRequest,\n        schema: \"\",\n        response: \"\",\n      })\n\n      platform.analytics?.logEvent({\n        type: \"HOPP_SAVE_REQUEST\",\n        platform: \"gql\",\n        createdNow: true,\n        workspaceType: \"personal\",\n      })\n\n      this.displayModalAddRequest(false)\n    },\n    addRequest(payload) {\n      const { path } = payload\n      this.$data.editingFolderPath = path\n      this.displayModalAddRequest(true)\n    },\n    onAddFolder({ name, path }) {\n      addGraphqlFolder(name, path)\n\n      platform.analytics?.logEvent({\n        type: \"HOPP_CREATE_COLLECTION\",\n        isRootCollection: false,\n        platform: \"gql\",\n        workspaceType: \"personal\",\n      })\n\n      this.displayModalAddFolder(false)\n    },\n    addFolder(payload) {\n      const { path } = payload\n      this.$data.editingFolderPath = path\n      this.displayModalAddFolder(true)\n    },\n    editFolder(payload) {\n      const { folder, folderPath } = payload\n      this.editingFolder = folder\n      this.editingFolderPath = folderPath\n      this.displayModalEditFolder(true)\n    },\n    editRequest(payload) {\n      const {\n        collectionIndex,\n        folderIndex,\n        folderName,\n        request,\n        requestIndex,\n        folderPath,\n      } = payload\n      this.$data.editingFolderPath = folderPath\n      this.$data.editingCollectionIndex = collectionIndex\n      this.$data.editingFolderIndex = folderIndex\n      this.$data.editingFolderName = folderName\n      this.$data.editingRequest = request\n      this.$data.editingRequestIndex = requestIndex\n      this.displayModalEditRequest(true)\n    },\n    resetSelectedData() {\n      this.$data.editingCollection = undefined\n      this.$data.editingCollectionIndex = undefined\n      this.$data.editingFolder = undefined\n      this.$data.editingFolderIndex = undefined\n      this.$data.editingRequest = undefined\n      this.$data.editingRequestIndex = undefined\n    },\n    duplicateRequest({ folderPath, request }) {\n      saveGraphqlRequestAs(folderPath, {\n        ...cloneDeep(request),\n        name: `${request.name} - ${this.t(\"action.duplicate\")}`,\n      })\n    },\n  },\n})\n</script>\n","<!-- eslint-disable prettier/prettier -->\n<template>\n  <HoppSmartModal\n    v-if=\"show\"\n    dialog\n    :title=\"`${t('collection.save_as')}`\"\n    @close=\"hideModal\"\n  >\n    <template #body>\n      <div class=\"flex flex-col\">\n        <div class=\"relative flex\">\n          <input\n            id=\"selectLabelSaveReq\"\n            v-model=\"requestName\"\n            v-focus\n            class=\"input floating-input\"\n            placeholder=\" \"\n            type=\"text\"\n            autocomplete=\"off\"\n            @keyup.enter=\"saveRequestAs\"\n          />\n          <label for=\"selectLabelSaveReq\">\n            {{ t(\"request.name\") }}\n          </label>\n        </div>\n        <label class=\"p-4\">\n          {{ t(\"collection.select_location\") }}\n        </label>\n        <CollectionsGraphql\n          v-if=\"mode === 'graphql'\"\n          :picked=\"picked\"\n          :save-request=\"true\"\n          @select=\"onSelect\"\n        />\n        <Collections\n          v-else\n          :picked=\"picked\"\n          :save-request=\"true\"\n          @select=\"onSelect\"\n          @update-team=\"updateTeam\"\n          @update-collection-type=\"updateCollectionType\"\n        />\n      </div>\n    </template>\n    <template #footer>\n      <span class=\"flex space-x-2\">\n        <HoppButtonPrimary\n          :label=\"`${t('action.save')}`\"\n          :loading=\"modalLoadingState\"\n          outline\n          @click=\"saveRequestAs\"\n        />\n        <HoppButtonSecondary\n          :label=\"`${t('action.cancel')}`\"\n          outline\n          filled\n          @click=\"hideModal\"\n        />\n      </span>\n    </template>\n  </HoppSmartModal>\n</template>\n\n<script setup lang=\"ts\">\nimport { nextTick, reactive, ref, watch } from \"vue\"\nimport { cloneDeep } from \"lodash-es\"\nimport {\n  HoppGQLRequest,\n  HoppRESTRequest,\n  isHoppRESTRequest,\n} from \"@hoppscotch/data\"\nimport { pipe } from \"fp-ts/function\"\nimport * as TE from \"fp-ts/TaskEither\"\nimport { GetMyTeamsQuery } from \"~/helpers/backend/graphql\"\nimport {\n  createRequestInCollection,\n  updateTeamRequest,\n} from \"~/helpers/backend/mutations/TeamRequest\"\nimport { Picked } from \"~/helpers/types/HoppPicked\"\nimport { getGQLSession, useGQLRequestName } from \"~/newstore/GQLSession\"\nimport { useI18n } from \"@composables/i18n\"\nimport { useToast } from \"@composables/toast\"\nimport {\n  editGraphqlRequest,\n  editRESTRequest,\n  saveGraphqlRequestAs,\n  saveRESTRequestAs,\n} from \"~/newstore/collections\"\nimport { GQLError } from \"~/helpers/backend/GQLClient\"\nimport { computedWithControl } from \"@vueuse/core\"\nimport { currentActiveTab } from \"~/helpers/rest/tab\"\nimport { platform } from \"~/platform\"\n\nconst t = useI18n()\nconst toast = useToast()\n\ntype SelectedTeam = GetMyTeamsQuery[\"myTeams\"][number] | undefined\n\ntype CollectionType =\n  | {\n      type: \"team-collections\"\n      selectedTeam: SelectedTeam\n    }\n  | { type: \"my-collections\"; selectedTeam: undefined }\n\nconst props = withDefaults(\n  defineProps<{\n    show: boolean\n    mode: \"rest\" | \"graphql\"\n  }>(),\n  {\n    show: false,\n    mode: \"rest\",\n  }\n)\n\nconst emit = defineEmits<{\n  (\n    event: \"edit-request\",\n    payload: {\n      folderPath: string\n      requestIndex: string\n      request: HoppRESTRequest\n    }\n  ): void\n  (e: \"hide-modal\"): void\n}>()\n\nconst gqlRequestName = useGQLRequestName()\nconst restRequestName = computedWithControl(\n  () => currentActiveTab.value,\n  () => currentActiveTab.value.document.request.name\n)\n\nconst requestName = ref(\n  props.mode === \"rest\" ? restRequestName.value : gqlRequestName.value\n)\n\nwatch(\n  () => [currentActiveTab.value, gqlRequestName.value],\n  () => {\n    if (props.mode === \"rest\") {\n      requestName.value = currentActiveTab.value?.document.request.name ?? \"\"\n    } else requestName.value = gqlRequestName.value\n  }\n)\n\nconst requestData = reactive({\n  name: requestName,\n  collectionIndex: undefined as number | undefined,\n  folderName: undefined as number | undefined,\n  requestIndex: undefined as number | undefined,\n})\n\nconst collectionsType = ref<CollectionType>({\n  type: \"my-collections\",\n  selectedTeam: undefined,\n})\n\nconst picked = ref<Picked | null>(null)\n\nconst modalLoadingState = ref(false)\n\n// Resets\nwatch(\n  () => requestData.collectionIndex,\n  () => {\n    requestData.folderName = undefined\n    requestData.requestIndex = undefined\n  }\n)\nwatch(\n  () => requestData.folderName,\n  () => {\n    requestData.requestIndex = undefined\n  }\n)\n\nconst updateTeam = (newTeam: SelectedTeam) => {\n  collectionsType.value.selectedTeam = newTeam\n}\n\nconst updateCollectionType = (type: CollectionType[\"type\"]) => {\n  collectionsType.value.type = type\n}\n\nconst onSelect = (pickedVal: Picked | null) => {\n  picked.value = pickedVal\n}\n\nconst saveRequestAs = async () => {\n  if (!requestName.value) {\n    toast.error(`${t(\"error.empty_req_name\")}`)\n    return\n  }\n  if (picked.value === null) {\n    toast.error(`${t(\"collection.select\")}`)\n    return\n  }\n\n  const requestUpdated =\n    props.mode === \"rest\"\n      ? cloneDeep(currentActiveTab.value.document.request)\n      : cloneDeep(getGQLSession().request)\n\n  requestUpdated.name = requestName.value\n\n  if (picked.value.pickedType === \"my-collection\") {\n    if (!isHoppRESTRequest(requestUpdated))\n      throw new Error(\"requestUpdated is not a REST Request\")\n\n    const insertionIndex = saveRESTRequestAs(\n      `${picked.value.collectionIndex}`,\n      requestUpdated\n    )\n\n    currentActiveTab.value.document = {\n      request: requestUpdated,\n      isDirty: false,\n      saveContext: {\n        originLocation: \"user-collection\",\n        folderPath: `${picked.value.collectionIndex}`,\n        requestIndex: insertionIndex,\n      },\n    }\n\n    platform.analytics?.logEvent({\n      type: \"HOPP_SAVE_REQUEST\",\n      createdNow: true,\n      platform: \"rest\",\n      workspaceType: \"personal\",\n    })\n\n    requestSaved()\n  } else if (picked.value.pickedType === \"my-folder\") {\n    if (!isHoppRESTRequest(requestUpdated))\n      throw new Error(\"requestUpdated is not a REST Request\")\n\n    const insertionIndex = saveRESTRequestAs(\n      picked.value.folderPath,\n      requestUpdated\n    )\n\n    currentActiveTab.value.document = {\n      request: requestUpdated,\n      isDirty: false,\n      saveContext: {\n        originLocation: \"user-collection\",\n        folderPath: picked.value.folderPath,\n        requestIndex: insertionIndex,\n      },\n    }\n\n    platform.analytics?.logEvent({\n      type: \"HOPP_SAVE_REQUEST\",\n      createdNow: true,\n      platform: \"rest\",\n      workspaceType: \"personal\",\n    })\n\n    requestSaved()\n  } else if (picked.value.pickedType === \"my-request\") {\n    if (!isHoppRESTRequest(requestUpdated))\n      throw new Error(\"requestUpdated is not a REST Request\")\n\n    editRESTRequest(\n      picked.value.folderPath,\n      picked.value.requestIndex,\n      requestUpdated\n    )\n\n    currentActiveTab.value.document = {\n      request: requestUpdated,\n      isDirty: false,\n      saveContext: {\n        originLocation: \"user-collection\",\n        folderPath: picked.value.folderPath,\n        requestIndex: picked.value.requestIndex,\n      },\n    }\n\n    platform.analytics?.logEvent({\n      type: \"HOPP_SAVE_REQUEST\",\n      createdNow: false,\n      platform: \"rest\",\n      workspaceType: \"personal\",\n    })\n\n    requestSaved()\n  } else if (picked.value.pickedType === \"teams-collection\") {\n    if (!isHoppRESTRequest(requestUpdated))\n      throw new Error(\"requestUpdated is not a REST Request\")\n\n    updateTeamCollectionOrFolder(picked.value.collectionID, requestUpdated)\n\n    platform.analytics?.logEvent({\n      type: \"HOPP_SAVE_REQUEST\",\n      createdNow: true,\n      platform: \"rest\",\n      workspaceType: \"team\",\n    })\n  } else if (picked.value.pickedType === \"teams-folder\") {\n    if (!isHoppRESTRequest(requestUpdated))\n      throw new Error(\"requestUpdated is not a REST Request\")\n\n    updateTeamCollectionOrFolder(picked.value.folderID, requestUpdated)\n\n    platform.analytics?.logEvent({\n      type: \"HOPP_SAVE_REQUEST\",\n      createdNow: true,\n      platform: \"rest\",\n      workspaceType: \"team\",\n    })\n  } else if (picked.value.pickedType === \"teams-request\") {\n    if (!isHoppRESTRequest(requestUpdated))\n      throw new Error(\"requestUpdated is not a REST Request\")\n\n    if (\n      collectionsType.value.type !== \"team-collections\" ||\n      !collectionsType.value.selectedTeam\n    )\n      throw new Error(\"Collections Type mismatch\")\n\n    modalLoadingState.value = true\n\n    const data = {\n      request: JSON.stringify(requestUpdated),\n      title: requestUpdated.name,\n    }\n\n    platform.analytics?.logEvent({\n      type: \"HOPP_SAVE_REQUEST\",\n      createdNow: false,\n      platform: \"rest\",\n      workspaceType: \"team\",\n    })\n\n    pipe(\n      updateTeamRequest(picked.value.requestID, data),\n      TE.match(\n        (err: GQLError<string>) => {\n          toast.error(`${getErrorMessage(err)}`)\n          modalLoadingState.value = false\n        },\n        () => {\n          modalLoadingState.value = false\n          requestSaved()\n        }\n      )\n    )()\n  } else if (picked.value.pickedType === \"gql-my-request\") {\n    // TODO: Check for GQL request ?\n    editGraphqlRequest(\n      picked.value.folderPath,\n      picked.value.requestIndex,\n      requestUpdated as HoppGQLRequest\n    )\n\n    platform.analytics?.logEvent({\n      type: \"HOPP_SAVE_REQUEST\",\n      createdNow: false,\n      platform: \"gql\",\n      workspaceType: \"team\",\n    })\n\n    requestSaved()\n  } else if (picked.value.pickedType === \"gql-my-folder\") {\n    // TODO: Check for GQL request ?\n    saveGraphqlRequestAs(\n      picked.value.folderPath,\n      requestUpdated as HoppGQLRequest\n    )\n\n    platform.analytics?.logEvent({\n      type: \"HOPP_SAVE_REQUEST\",\n      createdNow: true,\n      platform: \"gql\",\n      workspaceType: \"team\",\n    })\n\n    requestSaved()\n  } else if (picked.value.pickedType === \"gql-my-collection\") {\n    // TODO: Check for GQL request ?\n    saveGraphqlRequestAs(\n      `${picked.value.collectionIndex}`,\n      requestUpdated as HoppGQLRequest\n    )\n\n    platform.analytics?.logEvent({\n      type: \"HOPP_SAVE_REQUEST\",\n      createdNow: true,\n      platform: \"gql\",\n      workspaceType: \"team\",\n    })\n\n    requestSaved()\n  }\n}\n\n/**\n * Updates a team collection or folder and sets the save context to the updated request\n * @param collectionID - ID of the collection or folder\n * @param requestUpdated - Updated request\n */\nconst updateTeamCollectionOrFolder = (\n  collectionID: string,\n  requestUpdated: HoppRESTRequest\n) => {\n  if (\n    collectionsType.value.type !== \"team-collections\" ||\n    !collectionsType.value.selectedTeam\n  )\n    throw new Error(\"Collections Type mismatch\")\n\n  modalLoadingState.value = true\n\n  const data = {\n    title: requestUpdated.name,\n    request: JSON.stringify(requestUpdated),\n    teamID: collectionsType.value.selectedTeam.id,\n  }\n  pipe(\n    createRequestInCollection(collectionID, data),\n    TE.match(\n      (err: GQLError<string>) => {\n        toast.error(`${getErrorMessage(err)}`)\n        modalLoadingState.value = false\n      },\n      (result) => {\n        const { createRequestInCollection } = result\n\n        currentActiveTab.value.document = {\n          request: requestUpdated,\n          isDirty: false,\n          saveContext: {\n            originLocation: \"team-collection\",\n            requestID: createRequestInCollection.id,\n            collectionID: createRequestInCollection.collection.id,\n            teamID: createRequestInCollection.collection.team.id,\n          },\n        }\n\n        modalLoadingState.value = false\n        requestSaved()\n      }\n    )\n  )()\n}\n\nconst requestSaved = () => {\n  toast.success(`${t(\"request.added\")}`)\n  nextTick(() => {\n    currentActiveTab.value.document.isDirty = false\n  })\n  hideModal()\n}\n\nconst hideModal = () => {\n  picked.value = null\n  emit(\"hide-modal\")\n}\n\nconst getErrorMessage = (err: GQLError<string>) => {\n  console.error(err)\n  if (err.type === \"network_error\") {\n    return t(\"error.network_error\")\n  } else {\n    switch (err.error) {\n      case \"team_coll/short_title\":\n        return t(\"collection.name_length_insufficient\")\n      case \"team/invalid_coll_id\":\n        return t(\"team.invalid_id\")\n      case \"team/not_required_role\":\n        return t(\"profile.no_permission\")\n      case \"team_req/not_required_role\":\n        return t(\"profile.no_permission\")\n      case \"Forbidden resource\":\n        return t(\"profile.no_permission\")\n      default:\n        return t(\"error.something_went_wrong\")\n    }\n  }\n}\n</script>\n","export default function (responseStatus) {\n  if (responseStatus >= 100 && responseStatus < 200)\n    return {\n      name: \"informational\",\n      className: \"info-response\",\n    }\n\n  if (responseStatus >= 200 && responseStatus < 300)\n    return {\n      name: \"successful\",\n      className: \"success-response\",\n    }\n\n  if (responseStatus >= 300 && responseStatus < 400)\n    return {\n      name: \"redirection\",\n      className: \"redir-response\",\n    }\n\n  if (responseStatus >= 400 && responseStatus < 500)\n    return {\n      name: \"client error\",\n      className: \"cl-error-response\",\n    }\n\n  if (responseStatus >= 500 && responseStatus < 600)\n    return {\n      name: \"server error\",\n      className: \"sv-error-response\",\n    }\n\n  // this object is a catch-all for when no other objects match and should always be last\n  return {\n    name: \"unknown\",\n    className: \"missing-data-response\",\n  }\n}\n","<template>\n  <div class=\"flex items-stretch group\">\n    <span\n      v-tippy=\"{ theme: 'tooltip', delay: [500, 20] }\"\n      class=\"flex items-center justify-center w-16 px-2 truncate cursor-pointer\"\n      :class=\"entryStatus.className\"\n      data-testid=\"restore_history_entry\"\n      :title=\"`${duration}`\"\n      @click=\"emit('use-entry')\"\n    >\n      <span class=\"font-semibold truncate text-tiny\">\n        {{ entry.request.method }}\n      </span>\n    </span>\n    <span\n      v-tippy=\"{\n        theme: 'tooltip',\n        delay: [500, 20],\n        content: entry.updatedOn ? shortDateTime(entry.updatedOn) : null,\n      }\"\n      class=\"flex flex-1 min-w-0 py-2 pr-2 cursor-pointer transition group-hover:text-secondaryDark\"\n      data-testid=\"restore_history_entry\"\n      @click=\"emit('use-entry')\"\n    >\n      <span class=\"truncate\">\n        {{ entry.request.endpoint }}\n      </span>\n    </span>\n    <HoppButtonSecondary\n      v-tippy=\"{ theme: 'tooltip' }\"\n      :icon=\"IconTrash\"\n      color=\"red\"\n      :title=\"t('action.remove')\"\n      class=\"hidden group-hover:inline-flex\"\n      data-testid=\"delete_history_entry\"\n      @click=\"emit('delete-entry')\"\n    />\n    <HoppButtonSecondary\n      v-tippy=\"{ theme: 'tooltip' }\"\n      :title=\"!entry.star ? t('add.star') : t('remove.star')\"\n      :class=\"{ 'group-hover:inline-flex hidden': !entry.star }\"\n      :icon=\"entry.star ? IconStarOff : IconStar\"\n      color=\"yellow\"\n      data-testid=\"star_button\"\n      @click=\"emit('toggle-star')\"\n    />\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { computed } from \"vue\"\nimport findStatusGroup from \"~/helpers/findStatusGroup\"\nimport { useI18n } from \"@composables/i18n\"\nimport { RESTHistoryEntry } from \"~/newstore/history\"\nimport { shortDateTime } from \"~/helpers/utils/date\"\n\nimport IconStar from \"~icons/lucide/star\"\nimport IconStarOff from \"~icons/lucide/star-off\"\nimport IconTrash from \"~icons/lucide/trash\"\n\nconst props = defineProps<{\n  entry: RESTHistoryEntry\n  showMore: boolean\n}>()\n\nconst emit = defineEmits<{\n  (e: \"use-entry\"): void\n  (e: \"delete-entry\"): void\n  (e: \"toggle-star\"): void\n}>()\n\nconst t = useI18n()\n\nconst duration = computed(() => {\n  if (props.entry.responseMeta.duration) {\n    const responseDuration = props.entry.responseMeta.duration\n    if (!responseDuration) return \"\"\n\n    return responseDuration > 0\n      ? `${t(\"request.duration\")}: ${responseDuration}ms`\n      : t(\"error.no_duration\")\n  } else return t(\"error.no_duration\")\n})\n\nconst entryStatus = computed(() => {\n  const foundStatusGroup = findStatusGroup(props.entry.responseMeta.statusCode)\n  return (\n    foundStatusGroup || {\n      className: \"\",\n    }\n  )\n})\n</script>\n","<template>\n  <div class=\"flex flex-col group\">\n    <div class=\"flex items-center\">\n      <span\n        v-tippy=\"{\n          theme: 'tooltip',\n          delay: [500, 20],\n          content: entry.updatedOn ? shortDateTime(entry.updatedOn) : null,\n        }\"\n        class=\"flex flex-1 min-w-0 py-2 pl-4 pr-2 cursor-pointer transition group-hover:text-secondaryDark\"\n        data-testid=\"restore_history_entry\"\n        @click=\"useEntry\"\n      >\n        <span class=\"truncate\">\n          {{ entry.request.url }}\n        </span>\n      </span>\n      <HoppButtonSecondary\n        v-tippy=\"{ theme: 'tooltip' }\"\n        :icon=\"IconTrash\"\n        color=\"red\"\n        :title=\"t('action.remove')\"\n        class=\"hidden group-hover:inline-flex\"\n        data-testid=\"delete_history_entry\"\n        @click=\"emit('delete-entry')\"\n      />\n      <HoppButtonSecondary\n        v-tippy=\"{ theme: 'tooltip' }\"\n        :title=\"expand ? t('hide.more') : t('show.more')\"\n        :icon=\"expand ? IconMinimize2 : IconMaximize2\"\n        class=\"hidden group-hover:inline-flex\"\n        @click=\"expand = !expand\"\n      />\n      <HoppButtonSecondary\n        v-tippy=\"{ theme: 'tooltip' }\"\n        :title=\"!entry.star ? t('add.star') : t('remove.star')\"\n        :icon=\"entry.star ? IconStarOff : IconStar\"\n        color=\"yellow\"\n        :class=\"{ 'group-hover:inline-flex hidden': !entry.star }\"\n        data-testid=\"star_button\"\n        @click=\"emit('toggle-star')\"\n      />\n    </div>\n    <div class=\"flex flex-col text-tiny\">\n      <span\n        v-for=\"(line, index) in query\"\n        :key=\"`line-${index}`\"\n        class=\"px-4 font-mono truncate whitespace-pre cursor-pointer text-secondaryLight\"\n        data-testid=\"restore_history_entry\"\n        @click=\"useEntry\"\n        >{{ line }}</span\n      >\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { computed, ref } from \"vue\"\nimport { makeGQLRequest } from \"@hoppscotch/data\"\nimport { cloneDeep } from \"lodash-es\"\nimport { setGQLSession } from \"~/newstore/GQLSession\"\nimport { GQLHistoryEntry } from \"~/newstore/history\"\nimport { shortDateTime } from \"~/helpers/utils/date\"\n\nimport IconStar from \"~icons/lucide/star\"\nimport IconStarOff from \"~icons/lucide/star-off\"\nimport IconTrash from \"~icons/lucide/trash\"\nimport IconMinimize2 from \"~icons/lucide/minimize-2\"\nimport IconMaximize2 from \"~icons/lucide/maximize-2\"\n\nimport { useI18n } from \"@composables/i18n\"\n\nconst t = useI18n()\n\nconst props = defineProps<{\n  entry: GQLHistoryEntry\n  showMore: boolean\n}>()\n\nconst emit = defineEmits<{\n  (e: \"delete-entry\"): void\n  (e: \"toggle-star\"): void\n}>()\n\nconst expand = ref(false)\n\nconst query = computed(() =>\n  expand.value\n    ? (props.entry.request.query.split(\"\\n\") as string[])\n    : (props.entry.request.query\n        .split(\"\\n\")\n        .slice(0, 2)\n        .concat([\"...\"]) as string[])\n)\n\nconst useEntry = () => {\n  setGQLSession({\n    request: cloneDeep(\n      makeGQLRequest({\n        name: props.entry.request.name,\n        url: props.entry.request.url,\n        headers: props.entry.request.headers,\n        query: props.entry.request.query,\n        variables: props.entry.request.variables,\n        auth: props.entry.request.auth,\n      })\n    ),\n    schema: \"\",\n    response: props.entry.response,\n  })\n}\n</script>\n","<template>\n  <div>\n    <div\n      class=\"sticky top-0 z-10 flex flex-col flex-shrink-0 overflow-x-auto border-b bg-primary border-dividerLight\"\n    >\n      <WorkspaceCurrent :section=\"t('tab.history')\" />\n      <div class=\"flex\">\n        <input\n          v-model=\"filterText\"\n          type=\"search\"\n          autocomplete=\"off\"\n          class=\"flex flex-1 p-4 py-2 bg-transparent\"\n          :placeholder=\"`${t('action.search')}`\"\n        />\n        <div class=\"flex\">\n          <HoppButtonSecondary\n            v-tippy=\"{ theme: 'tooltip' }\"\n            to=\"https://docs.hoppscotch.io/documentation/features/history\"\n            blank\n            :title=\"t('app.wiki')\"\n            :icon=\"IconHelpCircle\"\n          />\n          <tippy interactive trigger=\"click\" theme=\"popover\">\n            <HoppButtonSecondary\n              v-tippy=\"{ theme: 'tooltip' }\"\n              :title=\"t('action.filter')\"\n              :icon=\"IconFilter\"\n            />\n            <template #content=\"{ hide }\">\n              <div ref=\"tippyActions\" class=\"flex flex-col focus:outline-none\">\n                <div class=\"pb-2 pl-4 text-tiny text-secondaryLight\">\n                  {{ t(\"action.filter\") }}\n                </div>\n                <HoppSmartRadioGroup\n                  v-model=\"filterSelection\"\n                  :radios=\"filters\"\n                  @update:model-value=\"hide()\"\n                />\n                <hr />\n                <div class=\"pb-2 pl-4 text-tiny text-secondaryLight\">\n                  {{ t(\"action.group_by\") }}\n                </div>\n                <HoppSmartRadioGroup\n                  v-model=\"groupSelection\"\n                  :radios=\"groups\"\n                  @update:model-value=\"hide()\"\n                />\n              </div>\n            </template>\n          </tippy>\n          <HoppButtonSecondary\n            v-tippy=\"{ theme: 'tooltip' }\"\n            data-testid=\"clear_history\"\n            :disabled=\"history.length === 0\"\n            :icon=\"IconTrash2\"\n            :title=\"t('action.clear_all')\"\n            @click=\"confirmRemove = true\"\n          />\n        </div>\n      </div>\n    </div>\n    <div class=\"flex flex-col\">\n      <details\n        v-for=\"(\n          filteredHistoryGroup, filteredHistoryGroupIndex\n        ) in filteredHistoryGroups\"\n        :key=\"`filteredHistoryGroup-${filteredHistoryGroupIndex}`\"\n        class=\"flex flex-col\"\n        open\n      >\n        <summary\n          class=\"flex items-center justify-between flex-1 min-w-0 transition cursor-pointer focus:outline-none text-secondaryLight text-tiny group\"\n        >\n          <span\n            class=\"inline-flex items-center justify-center px-4 py-2 transition group-hover:text-secondary truncate\"\n          >\n            <icon-lucide-chevron-right\n              class=\"mr-2 indicator flex flex-shrink-0\"\n            />\n            <span\n              :class=\"[\n                { 'capitalize-first': groupSelection === 'TIME' },\n                'truncate',\n              ]\"\n            >\n              {{ filteredHistoryGroupIndex }}\n            </span>\n          </span>\n          <HoppButtonSecondary\n            v-tippy=\"{ theme: 'tooltip' }\"\n            :icon=\"IconTrash\"\n            color=\"red\"\n            :title=\"t('action.remove')\"\n            class=\"hidden group-hover:inline-flex\"\n            @click=\"deleteBatchHistoryEntry(filteredHistoryGroup)\"\n          />\n        </summary>\n        <component\n          :is=\"page === 'rest' ? HistoryRestCard : HistoryGraphqlCard\"\n          v-for=\"(entry, index) in filteredHistoryGroup\"\n          :id=\"index\"\n          :key=\"`entry-${index}`\"\n          :entry=\"entry.entry\"\n          :show-more=\"showMore\"\n          @toggle-star=\"toggleStar(entry.entry)\"\n          @delete-entry=\"deleteHistory(entry.entry)\"\n          @use-entry=\"useHistory(toRaw(entry.entry))\"\n        />\n      </details>\n    </div>\n    <div\n      v-if=\"history.length === 0\"\n      class=\"flex flex-col items-center justify-center p-4 text-secondaryLight\"\n    >\n      <img\n        :src=\"`/images/states/${colorMode.value}/history.svg`\"\n        loading=\"lazy\"\n        class=\"inline-flex flex-col object-contain object-center w-16 h-16 my-4\"\n        :alt=\"`${t('empty.history')}`\"\n      />\n      <span class=\"mb-4 text-center\">\n        {{ t(\"empty.history\") }}\n      </span>\n    </div>\n    <div\n      v-else-if=\"\n        Object.keys(filteredHistoryGroups).length === 0 ||\n        filteredHistory.length === 0\n      \"\n      class=\"flex flex-col items-center justify-center p-4 text-secondaryLight\"\n    >\n      <icon-lucide-search class=\"pb-2 opacity-75 svg-icons\" />\n      <span class=\"mt-2 mb-4 text-center\">\n        {{ t(\"state.nothing_found\") }} \"{{ filterText || filterSelection }}\"\n      </span>\n      <HoppButtonSecondary\n        :label=\"t('action.clear')\"\n        outline\n        @click=\"\n          () => {\n            filterText = ''\n            filterSelection = 'ALL'\n          }\n        \"\n      />\n    </div>\n    <HoppSmartConfirmModal\n      :show=\"confirmRemove\"\n      :title=\"`${t('confirm.remove_history')}`\"\n      @hide-modal=\"confirmRemove = false\"\n      @resolve=\"clearHistory\"\n    />\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport IconHelpCircle from \"~icons/lucide/help-circle\"\nimport IconTrash2 from \"~icons/lucide/trash-2\"\nimport IconTrash from \"~icons/lucide/trash\"\nimport IconFilter from \"~icons/lucide/filter\"\nimport { computed, ref, Ref, toRaw } from \"vue\"\nimport { useColorMode } from \"@composables/theming\"\nimport { HoppGQLRequest, HoppRESTRequest } from \"@hoppscotch/data\"\nimport { groupBy, escapeRegExp, filter } from \"lodash-es\"\nimport { useTimeAgo } from \"@vueuse/core\"\nimport { pipe } from \"fp-ts/function\"\nimport * as A from \"fp-ts/Array\"\nimport { useI18n } from \"@composables/i18n\"\nimport { useReadonlyStream } from \"@composables/stream\"\nimport { useToast } from \"@composables/toast\"\nimport {\n  restHistory$,\n  graphqlHistory$,\n  clearRESTHistory,\n  clearGraphqlHistory,\n  toggleGraphqlHistoryEntryStar,\n  toggleRESTHistoryEntryStar,\n  deleteGraphqlHistoryEntry,\n  deleteRESTHistoryEntry,\n  RESTHistoryEntry,\n  GQLHistoryEntry,\n} from \"~/newstore/history\"\n\nimport HistoryRestCard from \"./rest/Card.vue\"\nimport HistoryGraphqlCard from \"./graphql/Card.vue\"\nimport { createNewTab } from \"~/helpers/rest/tab\"\n\ntype HistoryEntry = GQLHistoryEntry | RESTHistoryEntry\n\ntype TimedHistoryEntry = {\n  entry: HistoryEntry\n  timeAgo: Ref<string>\n}\n\nconst props = defineProps<{\n  page: \"rest\" | \"graphql\"\n}>()\n\nconst toast = useToast()\nconst t = useI18n()\nconst colorMode = useColorMode()\n\nconst filterText = ref(\"\")\nconst showMore = ref(false)\nconst confirmRemove = ref(false)\n\nconst history = useReadonlyStream<RESTHistoryEntry[] | GQLHistoryEntry[]>(\n  props.page === \"rest\" ? restHistory$ : graphqlHistory$,\n  []\n)\n\nconst deepCheckForRegex = (value: unknown, regExp: RegExp): boolean => {\n  if (value === null || value === undefined) return false\n\n  if (typeof value === \"string\") return regExp.test(value)\n  if (typeof value === \"number\") return regExp.test(value.toString())\n\n  if (typeof value === \"object\")\n    return Object.values(value).some((input) =>\n      deepCheckForRegex(input, regExp)\n    )\n  if (Array.isArray(value))\n    return value.some((input) => deepCheckForRegex(input, regExp))\n\n  return false\n}\n\nconst filteredHistory = computed(() =>\n  pipe(\n    history.value as HistoryEntry[],\n    A.filter(\n      (\n        input\n      ): input is HistoryEntry & {\n        updatedOn: NonNullable<HistoryEntry[\"updatedOn\"]>\n      } => {\n        return (\n          !!input.updatedOn &&\n          (filterText.value.length === 0 ||\n            deepCheckForRegex(\n              input,\n              new RegExp(escapeRegExp(filterText.value), \"gi\")\n            ))\n        )\n      }\n    ),\n    A.map(\n      (entry): TimedHistoryEntry => ({\n        entry,\n        timeAgo: useTimeAgo(entry.updatedOn),\n      })\n    )\n  )\n)\n\nconst filters = computed(() => [\n  { value: \"ALL\" as const, label: t(\"filter.all\") },\n  { value: \"STARRED\" as const, label: t(\"filter.starred\") },\n])\n\ntype FilterMode = (typeof filters)[\"value\"][number][\"value\"]\n\nconst filterSelection = ref<FilterMode>(\"ALL\")\n\nconst groups = computed(() => [\n  { value: \"TIME\" as const, label: t(\"group.time\") },\n  { value: \"URL\" as const, label: t(\"group.url\") },\n])\n\ntype GroupMode = (typeof groups)[\"value\"][number][\"value\"]\n\nconst groupSelection = ref<GroupMode>(\"TIME\")\n\nconst filteredHistoryGroups = computed(() =>\n  groupBy(\n    filter(filteredHistory.value, (input) =>\n      filterSelection.value === \"STARRED\" ? input.entry.star : true\n    ),\n    (input) =>\n      groupSelection.value === \"TIME\"\n        ? input.timeAgo.value\n        : getAppropriateURL(input.entry)\n  )\n)\n\nconst getAppropriateURL = (entry: HistoryEntry) => {\n  if (props.page === \"rest\") {\n    return (entry.request as HoppRESTRequest).endpoint\n  } else if (props.page === \"graphql\") {\n    return (entry.request as HoppGQLRequest).url\n  }\n}\n\nconst clearHistory = () => {\n  if (props.page === \"rest\") clearRESTHistory()\n  else clearGraphqlHistory()\n  toast.success(`${t(\"state.history_deleted\")}`)\n}\n\n// NOTE: For GQL, the HistoryGraphqlCard component already implements useEntry\n// (That is not a really good behaviour tho ¯\\_(ツ)_/¯)\nconst useHistory = (entry: RESTHistoryEntry) => {\n  createNewTab({\n    request: entry.request,\n    isDirty: false,\n  })\n}\n\nconst isRESTHistoryEntry = (\n  entries: TimedHistoryEntry[]\n): entries is Array<TimedHistoryEntry & { entry: RESTHistoryEntry }> =>\n  // If the page is rest, then we can guarantee what we have is a RESTHistoryEnry\n  props.page === \"rest\"\n\nconst deleteBatchHistoryEntry = (entries: TimedHistoryEntry[]) => {\n  if (isRESTHistoryEntry(entries)) {\n    entries.forEach((entry) => {\n      deleteRESTHistoryEntry(entry.entry)\n    })\n  } else {\n    entries.forEach((entry) => {\n      deleteGraphqlHistoryEntry(entry.entry as GQLHistoryEntry)\n    })\n  }\n  toast.success(`${t(\"state.deleted\")}`)\n}\n\nconst deleteHistory = (entry: HistoryEntry) => {\n  if (props.page === \"rest\") deleteRESTHistoryEntry(entry as RESTHistoryEntry)\n  else deleteGraphqlHistoryEntry(entry as GQLHistoryEntry)\n  toast.success(`${t(\"state.deleted\")}`)\n}\n\nconst toggleStar = (entry: HistoryEntry) => {\n  // History entry type specified because function does not know the type\n  if (props.page === \"rest\")\n    toggleRESTHistoryEntryStar(entry as RESTHistoryEntry)\n  else toggleGraphqlHistoryEntryStar(entry as GQLHistoryEntry)\n}\n</script>\n","import { customRef, onBeforeUnmount, Ref, watch } from \"vue\"\n\nexport function pluckRef<T, K extends keyof T>(ref: Ref<T>, key: K): Ref<T[K]> {\n  return customRef((track, trigger) => {\n    const stopWatching = watch(ref, (newVal, oldVal) => {\n      if (newVal[key] !== oldVal[key]) {\n        trigger()\n      }\n    })\n\n    onBeforeUnmount(() => {\n      stopWatching()\n    })\n\n    return {\n      get() {\n        track()\n        return ref.value[key]\n      },\n      set(value: T[K]) {\n        trigger()\n        ref.value = Object.assign(ref.value, { [key]: value })\n      },\n    }\n  })\n}\n\nexport function pluckMultipleFromRef<T, K extends Array<keyof T>>(\n  sourceRef: Ref<T>,\n  keys: K\n): { [key in K[number]]: Ref<T[key]> } {\n  return Object.fromEntries(keys.map((x) => [x, pluckRef(sourceRef, x)])) as any\n}\n","import {\n  getLocalConfig,\n  setLocalConfig,\n  removeLocalConfig,\n} from \"~/newstore/localpersistence\"\n\nconst redirectUri = `${window.location.origin}/`\n\n// GENERAL HELPER FUNCTIONS\n\n/**\n * Makes a POST request and parse the response as JSON\n *\n * @param {String} url - The resource\n * @param {Object} params - Configuration options\n * @returns {Object}\n */\n\nconst sendPostRequest = async (url, params) => {\n  const body = Object.keys(params)\n    .map((key) => `${key}=${params[key]}`)\n    .join(\"&\")\n  const options = {\n    method: \"POST\",\n    headers: {\n      \"Content-type\": \"application/x-www-form-urlencoded; charset=UTF-8\",\n    },\n    body,\n  }\n  try {\n    const response = await fetch(url, options)\n    const data = await response.json()\n    return data\n  } catch (e) {\n    console.error(e)\n  }\n}\n\n/**\n * Parse a query string into an object\n *\n * @param {String} searchQuery - The search query params\n * @returns {Object}\n */\n\nconst parseQueryString = (searchQuery) => {\n  if (searchQuery === \"\") {\n    return {}\n  }\n  const segments = searchQuery.split(\"&\").map((s) => s.split(\"=\"))\n  const queryString = segments.reduce(\n    (obj, el) => ({ ...obj, [el[0]]: el[1] }),\n    {}\n  )\n  return queryString\n}\n\n/**\n * Get OAuth configuration from OpenID Discovery endpoint\n *\n * @returns {Object}\n */\n\nconst getTokenConfiguration = async (endpoint) => {\n  const options = {\n    method: \"GET\",\n    headers: {\n      \"Content-type\": \"application/json\",\n    },\n  }\n  try {\n    const response = await fetch(endpoint, options)\n    const config = await response.json()\n    return config\n  } catch (e) {\n    console.error(e)\n  }\n}\n\n// PKCE HELPER FUNCTIONS\n\n/**\n * Generates a secure random string using the browser crypto functions\n *\n * @returns {Object}\n */\n\nconst generateRandomString = () => {\n  const array = new Uint32Array(28)\n  window.crypto.getRandomValues(array)\n  return Array.from(array, (dec) => `0${dec.toString(16)}`.slice(-2)).join(\"\")\n}\n\n/**\n * Calculate the SHA256 hash of the input text\n *\n * @returns {Promise<ArrayBuffer>}\n */\n\nconst sha256 = (plain) => {\n  const encoder = new TextEncoder()\n  const data = encoder.encode(plain)\n  return window.crypto.subtle.digest(\"SHA-256\", data)\n}\n\n/**\n * Encodes the input string into Base64 format\n *\n * @param {String} str - The string to be converted\n * @returns {Promise<ArrayBuffer>}\n */\n\nconst base64urlencode = (\n  str // Converts the ArrayBuffer to string using Uint8 array to convert to what btoa accepts.\n) =>\n  // btoa accepts chars only within ascii 0-255 and base64 encodes them.\n  // Then convert the base64 encoded to base64url encoded\n  //   (replace + with -, replace / with _, trim trailing =)\n  btoa(String.fromCharCode.apply(null, new Uint8Array(str)))\n    .replace(/\\+/g, \"-\")\n    .replace(/\\//g, \"_\")\n    .replace(/=+$/, \"\")\n\n/**\n * Return the base64-urlencoded sha256 hash for the PKCE challenge\n *\n * @param {String} v - The randomly generated string\n * @returns {String}\n */\n\nconst pkceChallengeFromVerifier = async (v) => {\n  const hashed = await sha256(v)\n  return base64urlencode(hashed)\n}\n\n// OAUTH REQUEST\n\n/**\n * Initiates PKCE Auth Code flow when requested\n *\n * @param {Object} - The necessary params\n * @returns {Void}\n */\n\nconst tokenRequest = async ({\n  oidcDiscoveryUrl,\n  grantType,\n  authUrl,\n  accessTokenUrl,\n  clientId,\n  clientSecret,\n  scope,\n}) => {\n  // Check oauth configuration\n  if (oidcDiscoveryUrl !== \"\") {\n    // eslint-disable-next-line camelcase\n    const { authorization_endpoint, token_endpoint } =\n      await getTokenConfiguration(oidcDiscoveryUrl)\n    // eslint-disable-next-line camelcase\n    authUrl = authorization_endpoint\n    // eslint-disable-next-line camelcase\n    accessTokenUrl = token_endpoint\n  }\n  // Store oauth information\n  setLocalConfig(\"tokenEndpoint\", accessTokenUrl)\n  setLocalConfig(\"client_id\", clientId)\n  setLocalConfig(\"client_secret\", clientSecret)\n\n  // Create and store a random state value\n  const state = generateRandomString()\n  setLocalConfig(\"pkce_state\", state)\n\n  // Create and store a new PKCE codeVerifier (the plaintext random secret)\n  const codeVerifier = generateRandomString()\n  setLocalConfig(\"pkce_codeVerifier\", codeVerifier)\n\n  // Hash and base64-urlencode the secret to use as the challenge\n  const codeChallenge = await pkceChallengeFromVerifier(codeVerifier)\n\n  // Build the authorization URL\n  const buildUrl = () =>\n    `${authUrl + `?response_type=${grantType}`}&client_id=${encodeURIComponent(\n      clientId\n    )}&state=${encodeURIComponent(state)}&scope=${encodeURIComponent(\n      scope\n    )}&redirect_uri=${encodeURIComponent(\n      redirectUri\n    )}&code_challenge=${encodeURIComponent(\n      codeChallenge\n    )}&code_challenge_method=S256`\n\n  // Redirect to the authorization server\n  window.location = buildUrl()\n}\n\n// OAUTH REDIRECT HANDLING\n\n/**\n * Handle the redirect back from the authorization server and\n * get an access token from the token endpoint\n *\n * @returns {Promise<any | void>}\n */\n\nconst oauthRedirect = () => {\n  let tokenResponse = \"\"\n  const q = parseQueryString(window.location.search.substring(1))\n  // Check if the server returned an error string\n  if (q.error) {\n    alert(`Error returned from authorization server: ${q.error}`)\n  }\n  // If the server returned an authorization code, attempt to exchange it for an access token\n  if (q.code) {\n    // Verify state matches what we set at the beginning\n    if (getLocalConfig(\"pkce_state\") !== q.state) {\n      alert(\"Invalid state\")\n      Promise.reject(tokenResponse)\n    } else {\n      try {\n        // Exchange the authorization code for an access token\n        tokenResponse = sendPostRequest(getLocalConfig(\"tokenEndpoint\"), {\n          grant_type: \"authorization_code\",\n          code: q.code,\n          client_id: getLocalConfig(\"client_id\"),\n          client_secret: getLocalConfig(\"client_secret\"),\n          redirect_uri: redirectUri,\n          code_verifier: getLocalConfig(\"pkce_codeVerifier\"),\n        })\n      } catch (e) {\n        console.error(e)\n        return Promise.reject(tokenResponse)\n      }\n    }\n    // Clean these up since we don't need them anymore\n    removeLocalConfig(\"pkce_state\")\n    removeLocalConfig(\"pkce_codeVerifier\")\n    removeLocalConfig(\"tokenEndpoint\")\n    removeLocalConfig(\"client_id\")\n    removeLocalConfig(\"client_secret\")\n    return tokenResponse\n  }\n  return Promise.reject(tokenResponse)\n}\n\nexport { tokenRequest, oauthRedirect }\n","<template>\n  <div class=\"flex flex-col\">\n    <div class=\"flex flex-1 border-b border-dividerLight\">\n      <SmartEnvInput\n        v-model=\"oidcDiscoveryURL\"\n        placeholder=\"OpenID Connect Discovery URL\"\n      />\n    </div>\n    <div class=\"flex flex-1 border-b border-dividerLight\">\n      <SmartEnvInput v-model=\"authURL\" placeholder=\"Authorization URL\" />\n    </div>\n    <div class=\"flex flex-1 border-b border-dividerLight\">\n      <SmartEnvInput v-model=\"accessTokenURL\" placeholder=\"Access Token URL\" />\n    </div>\n    <div class=\"flex flex-1 border-b border-dividerLight\">\n      <SmartEnvInput v-model=\"clientID\" placeholder=\"Client ID\" />\n    </div>\n    <div class=\"flex flex-1 border-b border-dividerLight\">\n      <SmartEnvInput v-model=\"clientSecret\" placeholder=\"Client Secret\" />\n    </div>\n    <div class=\"flex flex-1 border-b border-dividerLight\">\n      <SmartEnvInput v-model=\"scope\" placeholder=\"Scope\" />\n    </div>\n    <div class=\"p-2\">\n      <HoppButtonSecondary\n        filled\n        :label=\"`${t('authorization.generate_token')}`\"\n        @click=\"handleAccessTokenRequest()\"\n      />\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, watch } from \"vue\"\nimport { HoppRESTAuthOAuth2, parseTemplateString } from \"@hoppscotch/data\"\nimport { pluckRef } from \"@composables/ref\"\nimport { useI18n } from \"@composables/i18n\"\nimport { useToast } from \"@composables/toast\"\nimport { tokenRequest } from \"~/helpers/oauth\"\nimport { getCombinedEnvVariables } from \"~/helpers/preRequest\"\n\nconst t = useI18n()\nconst toast = useToast()\n\nconst props = defineProps<{\n  modelValue: HoppRESTAuthOAuth2\n}>()\n\nconst emit = defineEmits<{\n  (e: \"update:modelValue\", value: HoppRESTAuthOAuth2): void\n}>()\n\nconst auth = ref(props.modelValue)\n\nwatch(\n  () => auth.value,\n  (val) => {\n    emit(\"update:modelValue\", val)\n  }\n)\n\nconst oidcDiscoveryURL = pluckRef(auth, \"oidcDiscoveryURL\")\n\nconst authURL = pluckRef(auth, \"authURL\")\n\nconst accessTokenURL = pluckRef(auth, \"accessTokenURL\")\n\nconst clientID = pluckRef(auth, \"clientID\")\n\n// TODO: Fix this type error. currently there is no type for clientSecret\nconst clientSecret = pluckRef(auth, \"clientSecret\" as any)\n\nconst scope = pluckRef(auth, \"scope\")\n\nconst handleAccessTokenRequest = async () => {\n  if (\n    oidcDiscoveryURL.value === \"\" &&\n    (authURL.value === \"\" || accessTokenURL.value === \"\")\n  ) {\n    toast.error(`${t(\"error.incomplete_config_urls\")}`)\n    return\n  }\n  const envs = getCombinedEnvVariables()\n  const envVars = [...envs.selected, ...envs.global]\n\n  try {\n    const tokenReqParams = {\n      grantType: \"code\",\n      oidcDiscoveryUrl: parseTemplateString(oidcDiscoveryURL.value, envVars),\n      authUrl: parseTemplateString(authURL.value, envVars),\n      accessTokenUrl: parseTemplateString(accessTokenURL.value, envVars),\n      clientId: parseTemplateString(clientID.value, envVars),\n      clientSecret: parseTemplateString(clientSecret.value, envVars),\n      scope: parseTemplateString(scope.value, envVars),\n    }\n    await tokenRequest(tokenReqParams)\n  } catch (e) {\n    toast.error(`${e}`)\n  }\n}\n</script>\n","export const commonHeaders = [\n  \"WWW-Authenticate\",\n  \"Authorization\",\n  \"Proxy-Authenticate\",\n  \"Proxy-Authorization\",\n  \"Age\",\n  \"Cache-Control\",\n  \"Clear-Site-Data\",\n  \"Expires\",\n  \"Pragma\",\n  \"Warning\",\n  \"Accept-CH\",\n  \"Accept-CH-Lifetime\",\n  \"Early-Data\",\n  \"Content-DPR\",\n  \"DPR\",\n  \"Device-Memory\",\n  \"Save-Data\",\n  \"Viewport-Width\",\n  \"Width\",\n  \"Last-Modified\",\n  \"ETag\",\n  \"If-Match\",\n  \"If-None-Match\",\n  \"If-Modified-Since\",\n  \"If-Unmodified-Since\",\n  \"Vary\",\n  \"Connection\",\n  \"Keep-Alive\",\n  \"Accept\",\n  \"Accept-Charset\",\n  \"Accept-Encoding\",\n  \"Accept-Language\",\n  \"Expect\",\n  \"Max-Forwards\",\n  \"Cookie\",\n  \"Set-Cookie\",\n  \"Cookie2\",\n  \"Set-Cookie2\",\n  \"Access-Control-Allow-Origin\",\n  \"Access-Control-Allow-Credentials\",\n  \"Access-Control-Allow-Headers\",\n  \"Access-Control-Allow-Methods\",\n  \"Access-Control-Expose-Headers\",\n  \"Access-Control-Max-Age\",\n  \"Access-Control-Request-Headers\",\n  \"Access-Control-Request-Method\",\n  \"Origin\",\n  \"Service-Worker-Allowed\",\n  \"Timing-Allow-Origin\",\n  \"X-Permitted-Cross-Domain-Policies\",\n  \"DNT\",\n  \"Tk\",\n  \"Content-Disposition\",\n  \"Content-Length\",\n  \"Content-Type\",\n  \"Content-Encoding\",\n  \"Content-Language\",\n  \"Content-Location\",\n  \"Forwarded\",\n  \"X-Forwarded-For\",\n  \"X-Forwarded-Host\",\n  \"X-Forwarded-Proto\",\n  \"Via\",\n  \"Location\",\n  \"From\",\n  \"Host\",\n  \"Referer\",\n  \"Referrer-Policy\",\n  \"User-Agent\",\n  \"Allow\",\n  \"Server\",\n  \"Accept-Ranges\",\n  \"Range\",\n  \"If-Range\",\n  \"Content-Range\",\n  \"Cross-Origin-Opener-Policy\",\n  \"Cross-Origin-Resource-Policy\",\n  \"Content-Security-Policy\",\n  \"Content-Security-Policy-Report-Only\",\n  \"Expect-CT\",\n  \"Feature-Policy\",\n  \"Public-Key-Pins\",\n  \"Public-Key-Pins-Report-Only\",\n  \"Strict-Transport-Security\",\n  \"Upgrade-Insecure-Requests\",\n  \"X-Content-Type-Options\",\n  \"X-Download-Options\",\n  \"X-Frame-Options\",\n  \"X-Powered-By\",\n  \"X-XSS-Protection\",\n  \"Last-Event-ID\",\n  \"NEL\",\n  \"Ping-From\",\n  \"Ping-To\",\n  \"Report-To\",\n  \"Transfer-Encoding\",\n  \"TE\",\n  \"Trailer\",\n  \"Sec-WebSocket-Key\",\n  \"Sec-WebSocket-Extensions\",\n  \"Sec-WebSocket-Accept\",\n  \"Sec-WebSocket-Protocol\",\n  \"Sec-WebSocket-Version\",\n  \"Accept-Push-Policy\",\n  \"Accept-Signature\",\n  \"Alt-Svc\",\n  \"Date\",\n  \"Large-Allocation\",\n  \"Link\",\n  \"Push-Policy\",\n  \"Retry-After\",\n  \"Signature\",\n  \"Signed-Headers\",\n  \"Server-Timing\",\n  \"SourceMap\",\n  \"Upgrade\",\n  \"X-DNS-Prefetch-Control\",\n  \"X-Firefox-Spdy\",\n  \"X-Pingback\",\n  \"X-Requested-With\",\n  \"X-Robots-Tag\",\n  \"X-UA-Compatible\",\n]\n","import { pipe } from \"fp-ts/function\"\nimport { isEqual, cloneDeep } from \"lodash-es\"\nimport { JSPrimitive, TypeFromPrimitive } from \"./primtive\"\n\nexport const objRemoveKey =\n  <T, K extends keyof T>(key: K) =>\n  (obj: T): Omit<T, K> =>\n    pipe(cloneDeep(obj), (e) => {\n      delete e[key]\n      return e\n    })\n\nexport const objFieldMatches =\n  <T, K extends keyof T, V extends T[K]>(\n    fieldName: K,\n    matches: ReadonlyArray<V>\n  ) =>\n  // eslint-disable-next-line no-unused-vars\n  (obj: T): obj is T & { [_ in K]: V } =>\n    matches.findIndex((x) => isEqual(obj[fieldName], x)) !== -1\n\nexport const objHasProperty =\n  <O extends object, K extends string, P extends JSPrimitive | undefined>(\n    prop: K,\n    type?: P\n  ) =>\n  // eslint-disable-next-line\n  (obj: O): obj is O & { [_ in K]: TypeFromPrimitive<P> } =>\n    // eslint-disable-next-line\n    prop in obj && (type === undefined || typeof (obj as any)[prop] === type)\n\ntype TypeFromPrimitiveArray<P extends JSPrimitive | undefined> =\n  P extends \"undefined\"\n    ? undefined\n    : P extends \"object\"\n    ? object[] | null\n    : P extends \"boolean\"\n    ? boolean[]\n    : P extends \"number\"\n    ? number[]\n    : P extends \"bigint\"\n    ? bigint[]\n    : P extends \"string\"\n    ? string[]\n    : P extends \"symbol\"\n    ? symbol[]\n    : P extends \"function\"\n    ? Function[] // eslint-disable-line @typescript-eslint/ban-types\n    : unknown[]\n\n// The ban-types silence is because in this case,\n// we can't get the Function type info to make a better guess\n\nexport const objHasArrayProperty =\n  <O extends object, K extends string, P extends JSPrimitive>(\n    prop: K,\n    type: P\n  ) =>\n  // eslint-disable-next-line\n  (obj: O): obj is O & { [_ in K]: TypeFromPrimitiveArray<P> } =>\n    prop in obj &&\n    Array.isArray((obj as any)[prop]) &&\n    (obj as any)[prop].every(\n      (val: unknown) => typeof val === type // eslint-disable-line\n    )\n"],"names":["baseFindIndex","array","predicate","fromIndex","fromRight","length","index","baseIsNaN","value","strictIndexOf","baseIndexOf","baseGet","object","path","castPath","toKey","get","defaultValue","result","baseSlice","start","end","COMPARE_PARTIAL_FLAG","COMPARE_UNORDERED_FLAG","baseIsMatch","source","matchData","customizer","noCustomizer","data","key","objValue","srcValue","stack","Stack","baseIsEqual","isStrictComparable","isObject","getMatchData","keys","matchesStrictComparable","baseMatches","baseHasIn","hasIn","hasPath","baseMatchesProperty","isKey","baseProperty","basePropertyDeep","property","baseIteratee","identity","isArray","arrayAggregator","setter","iteratee","accumulator","createBaseFor","keysFunc","iterable","props","baseFor","baseFor$1","baseForOwn","createBaseEach","eachFunc","collection","isArrayLike","baseEach","baseEach$1","baseAggregator","createAggregator","initializer","func","last","reRegExpChar","reHasRegExpChar","escapeRegExp","string","toString","baseFilter","filter","arrayFilter","objectProto","hasOwnProperty","groupBy","baseAssignValue","groupBy$1","parent","baseUnset","baseIndexOfWith","comparator","arrayProto","splice","basePullAll","values","indexOf","seen","copyArray","arrayMap","baseUnary","computed","pullAll","pull","baseRest","pull$1","basePullAt","indexes","lastIndex","previous","isIndex","remove","toast","useToast","t","useI18n","hasFile","ref","hasGist","importerType","stepResults","inputChooseFileToImportFrom","mySelectedCollectionID","inputChooseGistToImportFrom","importerModules","RESTCollectionImporters","i","_b","_a","importerModule","importerSteps","enableImportButton","watch","newValue","url","myCollections","useReadonlyStream","restCollections$","currentUser","platform","importerAction","stepResults2","pipe","E.match","err","failedImport","emit","appendRESTCollections","fileImported","finishImport","onFileChange","inputFileToImport","reader","target","content","hideModal","resetImport","name","useVModel","editRequest","newName","editFolder","saveCollection","show","addFolder","currentActiveTab","addRequest","addNewCollection","CHILD_SLOT_NAME","childrenRendered","showChildren","isNodeOpen","highlightNode","childNodes","toggleNodeChildren","highlightNodeChildren","id","rootNodes","initialState","dispatchers","defineDispatchers","_","reorderItem","currentReorderStore","DispatchingStore","currentReorderingStatus$","pluck","distinctUntilChanged","changeCurrentReorderStatus","REQUEST_METHOD_LABEL_COLORS","getMethodLabelColorClassOf","request","RR.lookup","O.getOrElseW","tippyActions","edit","deleteAction","options","duplicate","dragging","ordering","orderingLastItem","currentReorderingStatus","requestLabelColor","val","selectRequest","dragStart","dataTransfer","isSameRequest","isCollectionDragging","isSameParent","isReorderable","isLastItemReorderable","handleDragOver","e","handelDrop","updateRequestOrder","updateLastItemOrder","resetDragState","isRequestLoading","requestAction","folderAction","exportAction","dropItemID","notSameDestination","notSameParentDestination","collectionIcon","IconCheckCircle","IconFolderOpen","IconFolder","collectionName","isRequestDragging","orderUpdateCollectionEvent","dropEvent","isCollLoading","colorMode","useColorMode","teamCollectionsList","toRef","hasNoTeamAccess","isSelected","collectionID","folderID","requestID","active","isActiveRequest","O.fromNullable","O.filter","active2","O.isSome","requestIndex","dragRequest","folderPath","dragEvent","collectionIndex","destinationCollectionIndex","collectionIndexDragged","dragedRequestIndex","updateCollectionOrder","destinationCollection","dragedCollectionIndex","TeamCollectionsAdapter","tree","targetID","coll","item","cloneDeep","parsedID","items","teamAdapter","refFilterCollection","pathToIndex","pathArr","MyCollectionsAdapter","collections","indexPaths","item2","indexPath","x","folder","requests","myAdapter","workspace","workspaceStatus$","teamWorkspaceName","TEAMS_BACKEND_PAGE_SIZE","findParentOfColl","collID","currentParent","findCollInTree","deleteCollInTree","el","updateCollInTree","updateColl","findReqInTree","reqID","match","req","findCollWithReqIDInTree","NewTeamCollectionAdapter","teamID","__publicField","from","to","destinationCollectionID","collLast","destinationIndex","BehaviorSubject","newTeamID","_c","_d","_e","_f","_g","_h","_i","_j","_k","_l","_m","_n","_o","_p","_q","_r","_s","_t","parentCollectionID","parentCollection","totalCollections","runGQLQuery","RootCollectionsOfTeamDocument","E.isLeft","collectionUpdate","requestUpdate","currentRequest","translateToNewRequest","parentID","title","dragedRequestID","destinationRequestID","teamCollAdded$","teamCollAddedSub","runGQLSubscription","TeamCollectionAddedDocument","teamCollUpdated$","teamCollUpdatedSub","TeamCollectionUpdatedDocument","teamCollRemoved$","teamCollRemovedSub","TeamCollectionRemovedDocument","teamReqAdded$","teamReqAddedSub","TeamRequestAddedDocument","teamReqUpdated$","teamReqUpdatedSub","TeamRequestUpdatedDocument","teamReqDeleted$","teamReqDeleted","TeamRequestDeletedDocument","teamRequestMoved$","teamRequestMoved","TeamRequestMovedDocument","requestMoved","teamCollectionMoved$","teamCollectionMoved","TeamCollectionMovedDocument","teamRequestOrderUpdated$","teamRequestOrderUpdated","TeamRequestOrderUpdatedDocument","requestOrderUpdated","nextRequest","teamCollectionOrderUpdated$","teamCollectionOrderUpdated","TeamCollectionOrderUpdatedDocument","collectionOrderUpdated","nextCollection","GetCollectionChildrenDocument","GetCollectionRequestsDocument","createNewRootCollection","runMutation","CreateNewRootCollectionDocument","createChildCollection","childTitle","CreateChildCollectionDocument","renameCollection","newTitle","RenameCollectionDocument","deleteCollection","DeleteCollectionDocument","moveRESTTeamCollection","MoveRestTeamCollectionDocument","updateOrderRESTTeamCollection","destCollID","UpdateCollectionOrderDocument","importJSONToTeam","collectionJSON","ImportFromJsonDocument","createRequestInCollection","CreateRequestInCollectionDocument","updateTeamRequest","UpdateRequestDocument","deleteTeamRequest","DeleteRequestDocument","moveRESTTeamRequest","MoveRestTeamRequestDocument","updateOrderRESTTeamRequest","nextRequestID","UpdateLookUpRequestOrderDocument","createCollectionGists","accessToken","TE.tryCatch","axios","reason","resolveSaveContextOnCollectionReorder","payload","type","newIndex","affectedIndexes","getAffectedIndexes","resetSaveContextForAffectedRequests","affectedPaths","tabs","getTabsRefTo","tab","newPath","updateSaveContextForAffectedRequests","oldFolderPath","newFolderPath","resetTeamRequestsContext","GetSingleRequestDocument","E.isRight","getFoldersByPath","pathArray","currentCollection","collectionsType","editingCollection","editingCollectionName","editingCollectionIndex","editingCollectionID","editingFolder","editingFolderName","editingFolderPath","editingRequest","editingRequestName","editingRequestIndex","editingRequestID","confirmModalTitle","filterTexts","draggingToRoot","collectionMoveLoading","requestMoveLoading","exportingTeamCollections","creatingGistCollection","importingMyCollections","teamListAdapter","TeamListAdapter","myTeams","REMEMBERED_TEAM_ID","useLocalState","teamListFetched","teamCollectionAdapter","TeamCollectionAdapter","teamCollectionList","teamLoadingCollections","newTeams","team","t2","updateSelectedTeam","newTeam","switchToMyCollections","expandTeamCollection","onLoggedIn","user","hasTeamWriteAccess","filteredCollections","filterText","filteredCollections2","isMatch","text","filteredRequests","filteredFolders","filteredFolderRequests","filteredFolder","filteredCollection","modalLoadingState","exportLoading","duplicateLoading","showModalAdd","showModalAddRequest","showModalAddFolder","showModalEditCollection","showModalEditFolder","showModalEditRequest","showModalImportExport","showConfirmModal","showTeamModalAdd","displayModalAdd","resetSelectedData","displayModalAddRequest","displayModalAddFolder","displayModalEditCollection","displayModalEditFolder","displayModalEditRequest","displayModalImportExport","displayConfirmModal","displayTeamModalAdd","addNewRootCollection","addRESTCollection","makeCollection","TE.match","getErrorMessage","onAddRequest","requestName","newRequest","insertionIndex","saveRESTRequestAs","createNewTab","createRequestInCollection2","onAddFolder","folderName","addRESTFolder","editCollection","updateEditingCollection","collectionUpdated","editRESTCollection","updateEditingFolder","editRESTFolder","updateEditingRequest","requestUpdated","possibleActiveTab","getTabRefWithSaveContext","editRESTRequest","nextTick","possibleTab","duplicateRequest","removeCollection","removeTeamCollectionOrFolder","onRemoveCollection","collectionToRemove","navigateToFolderWithIndexPath","restCollectionStore","removeRESTCollection","removeFolder","onRemoveFolder","folderToRemove","removeRESTFolder","parentFolder","pathToLastIndex","removeRequest","onRemoveRequest","requestToRemove","removeRESTRequest","resolveSaveContextOnRequestReorder","getRequestsByPath","selectPicked","selectedRequest","currentTabID","dropRequest","moveRESTRequest","checkIfCollectionIsAParentOfTheChildren","collectionDraggedPath","destinationCollectionPath","slicedDestinationCollectionPath","isEqual","isMoveToSameLocation","draggedItemPath","destinationPath","draggedItemPathArr","destinationPathArr","draggedItemParentPathArr","dropCollection","totalFoldersOfDestinationCollection","moveRESTFolder","isAlreadyInRoot","dropToRoot","isSameSameParent","destinationItemPath","draggedItemIndex","destinationItemIndex","dragedItemParent","destinationItemParent","destinationRequestIndex","updateRESTRequestOrder","destinationCollectionParentIndex","updateRESTCollectionOrder","getJSONCollection","getTeamCollectionJSON","exportCollectionsToJSON","initializeDownloadCollection","collectionJSON2","file","a","exportData","getCompleteCollectionTree","hoppColl","teamCollToHoppRESTColl","collectionJSONString","exportJSONCollection","createCollectionGist","importToTeams","resolveConfirmModal","graphqlCollections$","collectionJson","res","readCollectionGist","gist","files","collections2","setGraphqlCollections","openDialogChooseFileToImportFrom","importFromJSON","appendGraphqlCollections","exportJSON","dataToWrite","_sfc_main$e","defineComponent","editGraphqlRequest","_hoisted_1","_directive_focus","_resolveDirective","_ctx","_openBlock","_createBlock","_component_HoppSmartModal","_withCtx","_createElementVNode","_withDirectives","_cache","$event","_hoisted_3","_createVNode","_component_HoppButtonPrimary","_component_HoppButtonSecondary","_sfc_main$d","editGraphqlFolder","_sfc_main$c","getGQLSession","editGraphqlCollection","_sfc_main$9","addGraphqlCollection","confirmRemove","pick","setGQLSession","makeGQLRequest","removeGraphqlRequest","toggleShowChildren","removeGraphqlFolder","moveGraphqlRequest","removeGraphqlCollection","_sfc_main$5","IconPlus","IconHelpCircle","IconArchive","clone","shouldDisplay","saveGraphqlRequestAs","addGraphqlFolder","folderIndex","_hoisted_2","_normalizeStyle","_vModelText","_createElementBlock","_Fragment","_renderList","_component_CollectionsGraphqlCollection","_hoisted_6","_hoisted_7","_toDisplayString","_createCommentVNode","_hoisted_8","_component_icon_lucide_search","_component_CollectionsGraphqlAdd","_component_CollectionsGraphqlEdit","_component_CollectionsGraphqlAddRequest","_component_CollectionsGraphqlAddFolder","_component_CollectionsGraphqlEditFolder","_component_CollectionsGraphqlEditRequest","_component_CollectionsGraphqlImportExport","gqlRequestName","useGQLRequestName","restRequestName","computedWithControl","requestData","reactive","picked","updateTeam","updateCollectionType","onSelect","pickedVal","saveRequestAs","isHoppRESTRequest","requestSaved","updateTeamCollectionOrFolder","findStatusGroup","responseStatus","duration","responseDuration","entryStatus","expand","query","useEntry","showMore","history","restHistory$","graphqlHistory$","deepCheckForRegex","regExp","input","filteredHistory","A.filter","A.map","entry","useTimeAgo","filters","filterSelection","groups","groupSelection","filteredHistoryGroups","getAppropriateURL","clearHistory","clearRESTHistory","clearGraphqlHistory","useHistory","isRESTHistoryEntry","entries","deleteBatchHistoryEntry","deleteRESTHistoryEntry","deleteGraphqlHistoryEntry","deleteHistory","toggleStar","toggleRESTHistoryEntryStar","toggleGraphqlHistoryEntryStar","pluckRef","customRef","track","trigger","stopWatching","newVal","oldVal","onBeforeUnmount","redirectUri","sendPostRequest","params","body","parseQueryString","searchQuery","s","obj","getTokenConfiguration","endpoint","generateRandomString","dec","sha256","plain","base64urlencode","str","pkceChallengeFromVerifier","v","hashed","tokenRequest","oidcDiscoveryUrl","grantType","authUrl","accessTokenUrl","clientId","clientSecret","scope","authorization_endpoint","token_endpoint","setLocalConfig","state","codeVerifier","codeChallenge","buildUrl","oauthRedirect","tokenResponse","q","getLocalConfig","removeLocalConfig","auth","oidcDiscoveryURL","authURL","accessTokenURL","clientID","handleAccessTokenRequest","envs","getCombinedEnvVariables","envVars","tokenReqParams","parseTemplateString","commonHeaders","objRemoveKey","objFieldMatches","fieldName","matches","objHasProperty","prop","objHasArrayProperty"],"mappings":"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,EAClB,eAAAE,GAAAP,EAAA,MAAAK,CAAA,EACc,SAAAE,GAAAN,EAAA,MAAAI,CAAA,EACZ,aAAAE,GAAAxB,EAAA,MAAAsB,CAAA,EACQ,MAAAE,GAAAvB,EAAA,MAAAqB,CAAA,CACd,EAEjD,MAAA5B,GAAA6B,CAAA,CAAiC,OAAA/jB,EAAA,CAEjCtG,EAAA,MAAA,GAAAsG,GAAA,CAAkB,CACpB,+iCCnGWikB,GAAgB,CAC3B,mBACA,gBACA,qBACA,sBACA,MACA,gBACA,kBACA,UACA,SACA,UACA,YACA,qBACA,aACA,cACA,MACA,gBACA,YACA,iBACA,QACA,gBACA,OACA,WACA,gBACA,oBACA,sBACA,OACA,aACA,aACA,SACA,iBACA,kBACA,kBACA,SACA,eACA,SACA,aACA,UACA,cACA,8BACA,mCACA,+BACA,+BACA,gCACA,yBACA,iCACA,gCACA,SACA,yBACA,sBACA,oCACA,MACA,KACA,sBACA,iBACA,eACA,mBACA,mBACA,mBACA,YACA,kBACA,mBACA,oBACA,MACA,WACA,OACA,OACA,UACA,kBACA,aACA,QACA,SACA,gBACA,QACA,WACA,gBACA,6BACA,+BACA,0BACA,sCACA,YACA,iBACA,kBACA,8BACA,4BACA,4BACA,yBACA,qBACA,kBACA,eACA,mBACA,gBACA,MACA,YACA,UACA,YACA,oBACA,KACA,UACA,oBACA,2BACA,uBACA,yBACA,wBACA,qBACA,mBACA,UACA,OACA,mBACA,OACA,cACA,cACA,YACA,iBACA,gBACA,YACA,UACA,yBACA,iBACA,aACA,mBACA,eACA,iBACF,ECvHaC,GACY1vB,GACtB8sB,GACC9lB,GAAK4H,GAAUke,CAAG,EAAIthB,IACpB,OAAOA,EAAExL,GACFwL,EACR,EAEQmkB,GACX,CACEC,EACAC,IAGD/C,GACC+C,EAAQ,UAAWrgB,GAAM8R,GAAQwL,EAAI8C,GAAYpgB,CAAC,CAAC,IAAM,GAEhDsgB,GACX,CACEC,EACA7X,IAGD4U,GAECiD,KAAQjD,IAAQ5U,IAAS,QAAa,OAAQ4U,EAAYiD,KAAU7X,GAwB3D8X,GACX,CACED,EACA7X,IAGD4U,GACCiD,KAAQjD,GACR,MAAM,QAASA,EAAYiD,EAAK,GAC/BjD,EAAYiD,GAAM,MAChBjlB,GAAiB,OAAOA,IAAQoN,CACnC"}